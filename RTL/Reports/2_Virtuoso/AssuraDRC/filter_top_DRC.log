
            Assura (R) Physical Verification Version av4.1:Production:dfII6.1.7-64b:IC6.1.7-64b.500.4
            Release 4.1_USR5_HF11

Copyright (c) Cadence Design Systems. All rights reserved.
@(#)$CDS: assura_64 version av4.1:Production:dfII6.1.7-64b:IC6.1.7-64b.500.4 07/10/2017 21:38 (sjfnl321) $
sub-version 4.1_USR5_HF11, integ signature 2017-07-10-2113

run on Cadence_SERVER from /home/Software/EDA/Cadence/ASSURA/ASSURA_04.15.111/tools.lnx86/assura/bin/64bit/assura on Sat Mar  5 16:14:17 2022


Starting /home/Software/EDA/Cadence/ASSURA/ASSURA_04.15.111//tools.lnx86/assura/bin/aveng /home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/AssuraDRC/filter_top_DRC.rsf -restart -cdslib /home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/cds.lib
@(#)$CDS: aveng_64 version av4.1:Production:dfII6.1.7-64b:IC6.1.7-64b.500.4 07/10/2017 21:38 (sjfnl321) $
sub-version 4.1_USR5_HF11, integ signature 2017-07-10-2113

run on Cadence_SERVER from /home/Software/EDA/Cadence/ASSURA/ASSURA_04.15.111/tools.lnx86/assura/bin/64bit/aveng on Sat Mar  5 16:14:17 2022


Loading tech rule set file : /home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/.assuraSetup/Assura/techRuleSets

Loading tech rule set file : /home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/.assuraSetup/Assura/techRuleSets

Loading tech rule set file : /home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/.assuraSetup/Assura/techRuleSets

Loading tech rule set file : /home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/.assuraSetup/Assura/techRuleSets

Loading tech rule set file : /home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/.assuraSetup/Assura/techRuleSets
 Summary Report: filter_top_DRC.sum
 RSF           : /home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/AssuraDRC/filter_top_DRC.rsf
 Library Name  : filter_verif
 CDSLIB Path   : "/home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/cds.lib"
 Cell Name     : filter_top
 View Name     : layout
 Rules File    : /home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/.assuraSetup/Assura/../../.xkit/setup/xt018/cadence/assura/Assura/XT018_1243/drc.rul
 Options       : -restart -cdslib /home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/cds.lib 
 Work Directory: /home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/AssuraDRC
 Operating Mode: Legacy Mode is Off

Checking out license for Assura_DRC
*WARNING* Failed to obtain license for Assura_DRC
No Assura license available.
Checking out license for Phys_Ver_Sys_DRC_XL
Restarting with VDB Build 2 

Building the VDB part 2 in background mode.

Building the VDB part 3 in background mode.


Running in restart mode.


Finished building the VDB. VDB build times for main process:
cpu: 0.29  elap: 3  pf: 0  in: 0  out: 40  virt: 182M  phys: 909M

Running the Task Processor, 164 cells, 21061 steps...

Top Cell is 'filter_top layout filter_verif'

Executing: offGridWithinCell(cellPlacements "CELL-OFFGRID" 0.005)

Executing: offGridWithinCell(allLayers 0.005 polygonVertices "POLYGON-OFFGRID" pathVerti...

Executing: lockbn = geomOr(lockbnCDBA lockbnOA)

Executing: lock1bn = geomOr(lock1bnCDBA lock1bnOA)

Executing: lock2bn = geomOr(lock2bnCDBA lock2bnOA)

Executing: lock3bn = geomOr(lock3bnCDBA lock3bnOA)

Executing: lock4bn = geomOr(lock4bnCDBA lock4bnOA)

Executing: met1_bnd = geomOr(met1_bndCDBA met1_bndOA)

Executing: met2_bnd = geomOr(met2_bndCDBA met2_bndOA)

Executing: met3_bnd = geomOr(met3_bndCDBA met3_bndOA)

Executing: anwell0 = geomOr(geomOr(nwell hvnwell dnc) nbase)

Executing: anwell = geomOr(anwell0 dnwell nbuf)

Executing: anwell1 = geomOr(anwell0 ndf dnwell)

Executing: apwell = geomOr(hvpwell pwell4 dpc subblk pbase)

Executing: apwell1 = geomOr(apwell pdf)

Executing: pad_nblk = geomAndNot(pad geomOr(diffnblk polynblk))

Executing: implant = geomOr(nimp pimp)

Executing: bkgnd1 = geomBkgnd()

Executing: bkgnd = geomSize(bkgnd1 1.0)

Executing: lock = geomOr(lockdg lockbn)

Executing: lock1 = geomOr(lock1dg lock1bn)

Executing: lock2 = geomOr(lock2dg lock2bn)

Executing: lock3 = geomOr(lock3bn)

Executing: lock4 = geomOr(lock4bn)

Executing: lock_all_f = geomOr(lock lock1 lock2 lock3 lock4)

Executing: locked_ext = geomGetBBox(lock_all_f)

Executing: locked_chk = geomAndNot(locked_ext lock_all_f)

Executing: locked_m1n = geomAnd(geomSize(geomButtOrOver(geomAnd(locked_chk met1_bnd) loc...

Executing: locked_m2n = geomAnd(geomSize(geomButtOrOver(geomAnd(locked_chk met2_bnd) loc...

Executing: locked_m3n = geomAnd(geomSize(geomButtOrOver(geomAnd(locked_chk met3_bnd) loc...

Executing: diff_dyf = geomEmpty()

Executing: poly_dyf = geomEmpty()

Executing: met1_dyf = geomEmpty()

Executing: met2_dyf = geomEmpty()

Executing: met3_dyf = geomEmpty()

Executing: met4_dyf = geomEmpty()

Executing: mtp_dyf = geomEmpty()

Executing: mtpl_dyf = geomEmpty()

Executing: diff_dy = geomOr(diff_dyf diff_dyi)

Executing: poly_dy = geomOr(poly_dyf poly_dyi)

Executing: met1_dy = geomOr(met1_dyf met1_dyi)

Executing: met2_dy = geomOr(met2_dyf met2_dyi)

Executing: met3_dy = geomOr(met3_dyf met3_dyi)

Executing: met4_dy = geomOr(met4_dyf met4_dyi)

Executing: mtp_dy = geomOr(mtp_dyf mtp_dyi)

Executing: mtpl_dy = geomOr(mtpl_dyf mtpl_dyi)

Executing: diff = geomOr(diff_dg diff_dy)

Executing: poly = geomOr(polydg poly_dy)

Executing: met1 = geomAndNot(geomOr(met1dg met1_dy) met1s)

Executing: met1_a = geomAndNot(met1dg met1s)

Executing: met2 = geomAndNot(geomOr(met2dg met2_dy) met2s)

Executing: met2_a = geomAndNot(met2dg met2s)

Executing: met3 = geomAndNot(geomOr(met3dg met3_dy) met3s)

Executing: met3_a = geomAndNot(met3dg met3s)

Executing: met4 = geomAndNot(geomOr(met4dg met4_dy) met4s)

Executing: met4_a = geomAndNot(met4dg met4s)

Executing: mtp = geomAndNot(geomOr(mtpdg mtp_dy) mtps)

Executing: mtp_a = geomAndNot(mtpdg mtps)

Executing: mtpl = geomOr(mtpldg mtpl_dy)

Executing: metall_a = geomOr(mtpldg geomOr(met4_a geomOr(met3_a geomOr(met2_a met1_a mtp...

Executing: mv = geomOr(mvdg)

Executing: diffdti = geomAnd(dti diff)

Executing: foxdti = geomAndNot(dti diff)

Executing: dti_ring = geomGetHoled(dti)

Executing: diffdti_ring = geomGetHoled(diffdti)

Executing: dtiholes = geomAndNot(geomHoles(dti_ring) dti)

Executing: dtiholes1 = geomHoles(dti_ring innermostEmpty)

Executing: diffdti_hole = geomHoles(diffdti_ring innermostEmpty)

Executing: diffdti_inner = geomButtOnly(diffdti_ring dtiholes1)

Executing: dti_ex1 = geomSize(geomSize(foxdti 0.5) -0.5)

Executing: diffdti_ex1 = geomSize(geomSize(diffdti 0.25) -0.25)

Executing: dti_ex2 = geomAndNot(geomAndNot(dti_ex1 dti) diff)

Executing: diffdti_ex2 = geomAnd(geomAndNot(diffdti_ex1 dti) diff)

Executing: dti_ex3 = geomAnd(geomEnclose(dtiholes dti_ex2) geomEnclose(dti_ex2 dtiholes))

Executing: diffdti_ex3 = geomAnd(geomEnclose(dtiholes diffdti_ex2) geomEnclose(diffdti_e...

Executing: foxdti_mring_ex1 = geomSize(dti_ex3 0.5)

Executing: foxdti_mring_ex2 = geomAnd(foxdti_mring_ex1 geomOr(dti_ex3 foxdti))

Executing: foxdti_mring = geomAnd(geomEnclose(foxdti_mring_ex1 foxdti_mring_ex2) geomEnc...

Executing: foxdti_mring0 = geomOr(foxdti_mring)

Executing: foxdti_mring1 = geomWidth(foxdti_mring (keep >= 2))

Executing: foxdti_mring2 = geomWidth(foxdti_mring (keep >= 4))

Executing: diffdti_mring_ex1 = geomSize(diffdti_ex3 0.5)

Executing: diffdti_mring_ex2 = geomAnd(diffdti_mring_ex1 geomOr(diffdti_ex3 diffdti))

Executing: diffdti_mring = geomAnd(geomEnclose(diffdti_mring_ex1 diffdti_mring_ex2) geom...

Executing: dti_mring = geomOr(diffdti_mring foxdti_mring dti_ring)

Executing: dti_all = geomOr(dti_mring dti)

Executing: tiedtub = geomAnd(salicide diffdti_ex3)

Executing: tiedtub_sjnp = geomAnd(tiedtub geomButting(geomAnd(sjnp tiedtub) hvnwell))

Executing: tiedtub_nbuf = geomAnd(tiedtub geomOr(nbuf geomButting(geomAnd(sjnp tiedtub) ...

Executing: tiedtub_pdf = geomOverlap(tiedtub pdf)

Executing: tiedtub_nbulk_phv = geomAnd(tiedtub geomEnclose(tiedtub geomOverlap(geomAnd(n...

Executing: tiedtub_nbulk = geomOr(tiedtub_nbuf geomOr(tiedtub_sjnp geomOr(geomInside(tie...

Executing: dti_all1 = geomAndNot(dti_all tiedtub)

Executing: tub1 = geomAndNot(geomHoles(dti_all1) dti_all1)

Executing: tub = geomAndNot(tub1 tiedtub)

Executing: hwtub = geomAndNot(geomEnclose(tub hwc) diffdti_inner)

Executing: polydti = geomAnd(poly dti)

Executing: nwtrm0 = geomAndNot(nwell dti_all1)

Executing: pw4trm0 = geomAndNot(pwell4 dti_all1)

Executing: ndftrm = geomAndNot(ndf dti_all1)

Executing: pdftrm = geomAndNot(pdf dti_all1)

Executing: subblktrm = geomAndNot(subblk dti_all1)

Executing: n_psub = geomOr(anwell geomOr(pwblk pbase))

Executing: psub = geomAndNot(bkgnd geomOr(n_psub dti))

Executing: hvwell0 = geomOr(hvnwell hvpwell)

Executing: hvwell = geomOr(hvwell0 subblk)

Executing: hvtub = geomInside(tub hvwell)

Executing: hvtub_subblk = geomAnd(hvtub subblk)

Executing: bulk0 = geomAndNot(bkgnd geomOr(dti_all1 hvnwell dnwell nbuf))

Executing: bulk1 = geomAnd(bulk0 geomAndNot(tub1 tiedtub_nbulk))

Executing: bulk21 = geomAndNot(bulk0 bulk1)

Executing: bulk2 = geomStraddle(bulk21 geomOr(diff_dg geomOr(geomOr(pwblk nwell mvdg) ge...

Executing: bulk = geomOr(bulk1 bulk2) keepLayer(bulk)

Executing: act = geomAndNot(diff dti_all1)

Executing: act_dg = geomAndNot(diff_dg dti_all1)

Executing: hwntub = geomAnd(geomAnd(hvnwell nwell) hwtub) keepLayer(hwntub)

Executing: hwptub = geomAndNot(hwtub hwntub) keepLayer(hwptub)

Executing: ndif = geomAnd(act nimp)

Executing: pdif = geomAnd(act pimp)

Executing: gate1 = geomAnd(diff poly)

Executing: gate = geomAndNot(gate1 dti_all)

Executing: diff1 = geomAndNot(diff poly) keepLayer(diff1)

Executing: diff2 = geomAndNot(act poly) keepLayer(diff2)

Executing: ndiff1 = geomAnd(diff2 nimp)

Executing: pdiff1 = geomAnd(diff2 pimp)

Executing: ntap = geomAnd(ndiff1 nwtrm0) keepLayer(ntap)

Executing: ptap = geomAndNot(pdiff1 anwell) keepLayer(ptap)

Executing: ptap_hol = geomHoles(ptap innermost)

Executing: ntap_hol = geomHoles(ntap innermost)

Executing: ptap_h4 = geomGetVertex(ptap_hol (keep == 4))

Executing: ntap_h4 = geomGetVertex(ntap_hol (keep == 4))

Executing: diff_pur = geomAndNot(diff_dg implant)

Executing: d_ds0 = geomInside(diff_pur geomAnd(tub hvnwell))

Executing: d_ds1 = geomGetRectangle(d_ds0 ((2.4 <= length) <= 50) (width == 0.94))

Executing: d_ds21 = geomSize(d_ds1 0.15)

Executing: d_ds22 = geomOr(geomOverlap(pdiff1 d_ds21) d_ds1)

Executing: d_ds23 = geomAnd(geomInside(d_ds21 d_ds22) geomInside(d_ds22 d_ds21))

Executing: d_ds31 = geomSize(d_ds23 0.3)

Executing: d_ds32 = geomSize(d_ds31 0.1)

Executing: d_ds33 = geomOverlap(gate d_ds31)

Executing: d_ds34 = geomOr(geomAnd(d_ds33 pimp) d_ds23)

Executing: d_ds35 = geomAnd(geomInside(d_ds31 d_ds34) geomInside(d_ds34 d_ds31))

Executing: d_ds36 = geomOr(geomAndNot(d_ds33 implant) d_ds35)

Executing: d_ds37 = geomAnd(geomInside(d_ds36 d_ds32) geomInside(d_ds32 d_ds36))

Executing: d_ds41 = geomSize(geomGetLength(geomGetEdge(d_ds37 coincident gate) (keep == ...

Executing: d_ds42 = geomSize(geomOr(d_ds41 d_ds37) 0.22)

Executing: d_ds43 = geomOr(geomOverlap(poly d_ds42) d_ds22)

Executing: d_ds44 = geomGetRectangle(geomAnd(geomInside(d_ds43 d_ds42) geomInside(d_ds42...

Executing: d_dsc1 = geomAnd(geomInside(d_ds1 d_ds44) cont)

Executing: d_dsc2 = geomSize(d_ds1 -0.39)

Executing: d_dsc3 = geomAnd(geomSize(geomSize(d_dsc1 0.22) -0.22) d_dsc2)

Executing: d_dsc4 = geomAnd(geomInside(d_dsc3 d_dsc2) geomInside(d_dsc2 d_dsc3))

Executing: d_dsc5 = geomAnd(geomAnd(d_ds44 poly) cont)

Executing: d_dsm1 = geomAnd(d_ds44 met1)

Executing: d_dsm2 = geomEnclose(d_dsm1 d_dsc4)

Executing: d_dsm3 = geomEnclose(d_dsm1 d_dsc5)

Executing: d_dsm4 = geomAnd(geomInside(d_dsm3 d_dsm2) geomInside(d_dsm2 d_dsm3))

Executing: d_dsm5 = geomEnclose(d_ds44 d_dsm4)

Executing: d_dsd2 = geomInside(d_ds1 d_dsm5)

Executing: d_ds45 = geomEnclose(d_ds44 d_dsd2)

Executing: d_ds5 = geomInside(d_ds45 nwell)

Executing: ds5 = geomInside(d_ds1 d_ds5)

Executing: d_ds21a = geomSize(d_ds1 0.3)

Executing: d_ds22a = geomOr(geomOverlap(pdiff1 d_ds21a) d_ds1)

Executing: d_ds23a = geomAnd(geomInside(d_ds21a d_ds22a) geomInside(d_ds22a d_ds21a))

Executing: d_ds31a = geomSize(d_ds23a 0.15)

Executing: d_ds32a = geomSize(d_ds31a 0.1)

Executing: d_ds33a = geomOverlap(gate d_ds31a)

Executing: d_ds34a = geomOr(geomAnd(d_ds33a pimp) d_ds23a)

Executing: d_ds35a = geomAnd(geomInside(d_ds31a d_ds34a) geomInside(d_ds34a d_ds31a))

Executing: d_ds36a = geomOr(geomAndNot(d_ds33a implant) d_ds35a)

Executing: d_ds37a = geomAnd(geomInside(d_ds36a d_ds32a) geomInside(d_ds32a d_ds36a))

Executing: d_ds41a = geomSize(geomGetLength(geomGetEdge(d_ds37a coincident gate) (keep =...

Executing: d_ds42a = geomSize(geomOr(d_ds41a d_ds37a) 0.22)

Executing: d_ds43a = geomOr(geomOverlap(poly d_ds42a) d_ds22a)

Executing: d_ds44a = geomGetRectangle(geomAnd(geomInside(d_ds43a d_ds42a) geomInside(d_d...

Executing: d_dsc1a = geomAnd(geomInside(d_ds1 d_ds44a) cont)

Executing: d_dsc3a = geomAnd(geomSize(geomSize(d_dsc1a 0.22) -0.22) d_dsc2)

Executing: d_dsc4a = geomAnd(geomInside(d_dsc3a d_dsc2) geomInside(d_dsc2 d_dsc3a))

Executing: d_dsc5a = geomAnd(geomAnd(d_ds44a poly) cont)

Executing: d_dsm1a = geomAnd(d_ds44a met1)

Executing: d_dsm2a = geomEnclose(d_dsm1a d_dsc4a)

Executing: d_dsm3a = geomEnclose(d_dsm1a d_dsc5a)

Executing: d_dsm4a = geomAnd(geomInside(d_dsm3a d_dsm2a) geomInside(d_dsm2a d_dsm3a))

Executing: d_dsm5a = geomEnclose(d_ds44a d_dsm4a)

Executing: d_dsd2a = geomInside(d_ds1 d_dsm5a)

Executing: d_ds45a = geomEnclose(d_ds44a d_dsd2a)

Executing: d_ds5a = geomInside(d_ds45a nwell)

Executing: ds5a = geomInside(d_ds1 d_ds5a)

Executing: ds5_all = geomOr(ds5 ds5a)

Executing: d_dsdf = geomOr(ds5_all)

Executing: d_dsc = geomAnd(d_dsdf cont)

Executing: ds5_s0 = geomSize(ds5_all 0.55)

Executing: ds5_g = geomAndNot(ds5_s0 geomOr(d_ds23 d_ds23a))

Executing: gate0 = geomAndNot(gate ds5_g)

Executing: pgate1 = geomAnd(gate0 nwell)

Executing: pgate11 = geomAnd(pgate1 pimp)

Executing: mosvc10 = geomOutside(geomAnd(pgate1 nimp) geomOr(dnwell dnc lvt))

Executing: pgate_pdf = geomOverlap(geomAnd(gate pimp) pdf)

Executing: pgate2 = geomAndNot(pgate11 pgate_pdf)

Executing: ngate11 = geomAndNot(gate0 geomOr(anwell pdf))

Executing: ngate110 = geomAnd(ngate11 nimp)

Executing: ngate_pw4 = geomAnd(geomOverlap(ngate110 pwell4) geomOverlap(ngate110 ndf))

Executing: ngate10 = geomAndNot(ngate110 ngate_pw4)

Executing: tub_xta = geomOutside(tub geomOr(hvpwell hvnwell hwc))

Executing: ngate_nhv_a1 = geomInside(ngate_pw4 tub_xta)

Executing: ndhvt_1 = geomOverlap(ngate_nhv_a1 depl)

Executing: ngate_nhv_a = geomAndNot(ngate_nhv_a1 ndhvt_1)

Executing: nhvta_1 = geomGetTexted(ngate_nhv_a polylabel "nhvta")

Executing: nhvtb_1 = geomGetTexted(ngate_nhv_a polylabel "nhvtb")

Executing: nhvu_1 = geomGetTexted(ngate_nhv_a polylabel "nhvu")

Executing: nhvtu_all = geomCat(nhvta_1 nhvtb_1 nhvu_1)

Executing: nhvta = geomAnd(nhvta_1 pwell4)

Executing: nhvtb = geomAnd(nhvtb_1 pwell4)

Executing: nhvu = geomAnd(nhvu_1 pwell4)

Executing: ndhvt_all = geomAnd(ndhvt_1 pwell4)

Executing: ndhvta_1 = geomGetTexted(ndhvt_1 polylabel "ndhvta")

Executing: ndhvta = geomAnd(ndhvta_1 pwell4)

Executing: ndhvt = geomAndNot(ndhvt_all ndhvta)

Executing: dfwdn_ndf = geomOverlap(ndf geomAndNot(ngate_nhv_a1 geomOr(ndhvt_1 nhvtu_all)))

Executing: dfwdn_gate1 = geomOverlap(ngate_nhv_a dfwdn_ndf)

Executing: dfwdn_gate2 = geomOr(geomSize(geomGetEdge(dfwdn_gate1 inside gate) 0.3) dfwdn...

Executing: dfwdn_gate = geomAnd(geomEnclose(gate dfwdn_gate2) geomEnclose(dfwdn_gate2 ga...

Executing: pgate_phv_a = geomInside(pgate_pdf tub_xta)

Executing: phvta_1 = geomGetTexted(pgate_phv_a polylabel "phvta")

Executing: phvtb_1 = geomGetTexted(pgate_phv_a polylabel "phvtb")

Executing: phvu_1 = geomGetTexted(pgate_phv_a polylabel "phvu")

Executing: phvtu_all = geomCat(phvta_1 phvtb_1 phvu_1)

Executing: phvta = geomAnd(phvta_1 nwell)

Executing: phvtb = geomAnd(phvtb_1 nwell)

Executing: phvu = geomAnd(phvu_1 nwell)

Executing: mosvc11 = geomGetRectangle(mosvc10 (width == 0.3))

Executing: ngate10a = geomButtOnly(ngate10 mosvc11 (keep == 1))

Executing: nmv0 = geomOr(ngate10a mosvc11)

Executing: ngate1 = geomAndNot(ngate10 geomOr(geomStraddle(ngate10 sjnp) nmv0))

Executing: nmv1 = geomAndNot(nmv0 geomOr(hvwell subblk))

Executing: nmv2 = geomAnd(nmv1 geomOutside(tub_xta pgate2))

Executing: nmva1 = geomOutside(nmv2 pwblk)

Executing: nmva11 = geomInside(nmva1 tub_xta)

Executing: nmva2_ndif = geomButtOnly(geomOverlap(ndif nmva11) geomAnd(pdif dtiholes1))

Executing: nmva2 = geomInside(nmva11 nmva2_ndif)

Executing: nmva = geomAndNot(nmva2 nwell)

Executing: nmva_all = geomOr(nmva)

Executing: nmva2_all = geomOr(nmva2)

Executing: pmv1 = geomAndNot(geomAnd(geomStraddle(gate nwell) pimp) geomOr(hvwell subblk))

Executing: pmv2 = geomAnd(pmv1 geomOutside(tub_xta ngate10))

Executing: pmva1 = geomOutside(pmv2 pwblk)

Executing: pmva11 = geomInside(pmva1 tub_xta)

Executing: pmva2_pdif = geomButtOnly(geomOverlap(pdif pmva11) geomAnd(ndif dtiholes1))

Executing: pmva2 = geomInside(pmva11 pmva2_pdif)

Executing: pmva = geomAnd(pmva2 pgate2)

Executing: nhvgate11 = geomAndNot(geomStraddle(ngate11 sjnp) sjnp)

Executing: nhvgate11_a = geomInside(geomButtOrOver(nhvgate11 hvpwell) hvtub)

Executing: nhv10 = geomGetRectangle(nhvgate11_a ((0.3 <= width) <= 5.0))

Executing: hv_dti = geomGetRectangle(geomAnd(geomEnclose(hvtub dtiholes1) geomEnclose(dt...

Executing: nhv1_d1 = geomButtOnly(geomAnd(geomGetRectangle(sjnp) hv_dti) nhv10)

Executing: nhv1_d21 = geomSize(geomGetEdge(nhv1_d1 coincident subblk) 1.5)

Executing: nhv1_d3 = geomAnd(nhv1_d21 geomAnd(geomAnd(nbur hvnwell) ndiff1))

Executing: nhv1_d2 = geomAnd(geomInside(nhv1_d21 nhv1_d3) geomInside(nhv1_d3 nhv1_d21))

Executing: nhv1_d4 = geomOr(nhv1_d1 nhv1_d21)

Executing: nhv1_d5 = geomOr(nhv1_d1 nhv1_d2)

Executing: nisj_d21 = geomSize(geomGetEdge(nhv1_d1 butting nbuf) 7.0)

Executing: nisj_d3 = geomAnd(nisj_d21 geomAnd(geomAnd(nbur nbuf) diff))

Executing: nisj_d2 = geomAnd(geomInside(nisj_d21 nisj_d3) geomInside(nisj_d3 nisj_d21))

Executing: nisj_d = geomOr(geomButting(nhv1_d5 nisj_d2) geomButting(nisj_d2 nhv1_d5))

Executing: nhv1_d = geomOutside(geomAnd(geomInside(nhv1_d4 nhv1_d5) geomInside(nhv1_d5 n...

Executing: sjnp_pwb = geomAnd(sjnp pwblk)

Executing: sjnp_pwb_a = geomAnd(sjnp_pwb hv_dti)

Executing: nhv10_sjnp = geomAnd(geomInside(sjnp_pwb_a nhv1_d1) geomInside(nhv1_d1 sjnp_p...

Executing: nhsj_pedge = geomGetEdge(sjnp inside geomOverlap(poly nhv1_d))

Executing: nisj_pedge = geomGetEdge(sjnp inside geomOverlap(poly nisj_d))

Executing: nhv1_pedge = geomGetEdge(sjnp inside geomOverlap(poly geomOverlap(nhv1_d hvnw...

Executing: nhv1_pedge7 = geomEnclose(geomAndNot(geomSize(nhv1_pedge -7.0) dti) nhv10_sjnp)

Executing: nhv1_7 = geomAnd(geomInside(nhv10_sjnp nhv1_pedge7) geomInside(nhv1_pedge7 nh...

Executing: nhv1_pedge10 = geomEnclose(geomAndNot(geomSize(nhv1_pedge -10.0) dti) nhv10_s...

Executing: nhv1_8_5 = geomEmpty()

Executing: nhv1_9 = geomEmpty()

Executing: nhv1_9_5 = geomEmpty()

Executing: nhv1_10 = geomAnd(geomInside(nhv1_pedge10 nhv10_sjnp) geomInside(nhv10_sjnp n...

Executing: nhv1_10_75 = geomEmpty()

Executing: nhv1_11_5 = geomEmpty()

Executing: nhv1_12_25 = geomEmpty()

Executing: nhv1_13 = geomEmpty()

Executing: nhv1_pedge16 = geomEnclose(geomAndNot(geomSize(nhv1_pedge -16.0) dti) nhv10_s...

Executing: nhv1_14 = geomEmpty()

Executing: nhv1_15 = geomEmpty()

Executing: nhv1_16 = geomAnd(geomInside(nhv1_pedge16 nhv10_sjnp) geomInside(nhv10_sjnp n...

Executing: nhv1_c7 = geomOr(nhv1_7)

Executing: nhv1_c10 = geomCat(nhv1_8_5 nhv1_9 nhv1_9_5 nhv1_10)

Executing: nhv1_c13 = geomCat(nhv1_10_75 nhv1_11_5 nhv1_12_25 nhv1_13)

Executing: nhv1_c16 = geomCat(nhv1_14 nhv1_15 nhv1_16)

Executing: nhv1 = geomButting(nhv10 nhv1_d)

Executing: nhsj1_7r = geomButtOnly(nhv1 nhv1_c7 (keep == 1))

Executing: nhsj1_10r = geomButtOnly(nhv1 nhv1_c10 (keep == 1))

Executing: nhsj1_13r = geomButtOnly(nhv1 nhv1_c13 (keep == 1))

Executing: nhsj1_16r = geomButtOnly(nhv1 nhv1_c16 (keep == 1))

Executing: nhsj1_16c = geomAnd(geomGetTexted(ngate11 polylabel "nhsj1_16c") nhsj1_16r)

Executing: nhsj1_all = geomOr(nhsj1_7r nhsj1_10r nhsj1_13r nhsj1_16r)

Executing: nhsj1_7 = geomOr(nhsj1_7r)

Executing: nhsj1_10 = geomOr(nhsj1_10r)

Executing: nhsj1_13 = geomOr(nhsj1_13r)

Executing: nhsj1_16 = geomAndNot(nhsj1_16r nhsj1_16c)

Executing: nisj_pedge16 = geomEnclose(geomAndNot(geomSize(nisj_pedge -16) dti) nhv10_sjnp)

Executing: nisj_16 = geomAnd(geomInside(nisj_pedge16 nhv10_sjnp) geomInside(nhv10_sjnp n...

Executing: nisj1_c16 = geomOr(nisj_16)

Executing: nisj1 = geomButting(nhv10 nisj_d)

Executing: nisj1_16r = geomButtOnly(nisj1 nisj1_c16 (keep == 1))

Executing: nisj1_16 = geomOr(nisj1_16r)

Executing: phvgate = geomStraddle(gate sjpn)

Executing: phvgate11 = geomAnd(pgate2 phvgate)

Executing: phvgate11_a = geomInside(geomAnd(phvgate11 geomAnd(nwell nbur)) hvtub)

Executing: phv1 = geomGetRectangle(phvgate11_a ((0.3 <= width) <= 5.0))

Executing: phv1_d1 = geomButtOnly(geomAnd(geomGetRectangle(sjpn) hv_dti) phv1)

Executing: phv1_d21 = geomSize(geomGetEdge(phv1_d1 coincident subblk) 1.5)

Executing: phv1_d3 = geomAnd(phv1_d21 geomAnd(hvpwell pdiff1))

Executing: phv1_d2 = geomAnd(geomInside(phv1_d21 phv1_d3) geomInside(phv1_d3 phv1_d21))

Executing: phv1_d4 = geomOr(phv1_d1 phv1_d21)

Executing: phv1_d5 = geomOr(phv1_d1 phv1_d2)

Executing: phv1_d = geomAnd(geomInside(phv1_d4 phv1_d5) geomInside(phv1_d5 phv1_d4))

Executing: sjpn_pwb = geomAnd(sjpn pwblk)

Executing: phv10_sjpn = geomAnd(sjpn_pwb phv1_d)

Executing: phv1_pedge = geomGetEdge(sjpn inside geomOverlap(poly phv1_d))

Executing: phv1_pedge7 = geomEnclose(geomAndNot(geomSize(phv1_pedge -7.0) dti) phv10_sjpn)

Executing: phv1_7 = geomAnd(geomInside(phv10_sjpn phv1_pedge7) geomInside(phv1_pedge7 ph...

Executing: phv1_pedge10 = geomEnclose(geomAndNot(geomSize(phv1_pedge -10.0) dti) phv10_s...

Executing: phv1_8_5 = geomEmpty()

Executing: phv1_9 = geomEmpty()

Executing: phv1_9_5 = geomEmpty()

Executing: phv1_10 = geomAnd(geomInside(phv10_sjpn phv1_pedge10) geomInside(phv1_pedge10...

Executing: phv1_10_75 = geomEmpty()

Executing: phv1_11_5 = geomEmpty()

Executing: phv1_12_25 = geomEmpty()

Executing: phv1_13 = geomEmpty()

Executing: phv1_pedge16 = geomEnclose(geomAndNot(geomSize(phv1_pedge -16.0) dti) phv10_s...

Executing: phv1_14 = geomEmpty()

Executing: phv1_15 = geomEmpty()

Executing: phv1_16 = geomAnd(geomInside(phv10_sjpn phv1_pedge16) geomInside(phv1_pedge16...

Executing: phv1_c7 = geomOr(phv1_7)

Executing: phv1_c10 = geomCat(phv1_8_5 phv1_9 phv1_9_5 phv1_10)

Executing: phv1_c13 = geomCat(phv1_10_75 phv1_11_5 phv1_12_25 phv1_13)

Executing: phv1_c16 = geomCat(phv1_14 phv1_15 phv1_16)

Executing: phsj1_7 = geomButtOnly(phv1 phv1_c7 (keep == 1))

Executing: phsj1_10 = geomButtOnly(phv1 phv1_c10 (keep == 1))

Executing: phsj1_13 = geomButtOnly(phv1 phv1_c13 (keep == 1))

Executing: phsj1_16r = geomButtOnly(phv1 phv1_c16 (keep == 1))

Executing: phsj1_16c = geomAnd(geomGetTexted(phvgate polylabel "phsj1_16c") phsj1_16r)

Executing: phsj1_all = geomOr(phsj1_7 phsj1_10 phsj1_13 phsj1_16r)

Executing: phsj1_16 = geomAndNot(phsj1_16r phsj1_16c)

Executing: phv1_all = geomOr(phsj1_7 phsj1_10 phsj1_13 phsj1_16 phsj1_16c)

Executing: nhv1_all = geomOr(nhsj1_7 nhsj1_10 nhsj1_13 nhsj1_16 nhsj1_16c)

Executing: phv1_alls = geomGrow(phv1_all 0.0 2.0 0.0 2.0)

Executing: phv1_s1 = geomSize(geomGetEdge(sjpn butting phv1_alls) 0.5)

Executing: nisj1_all = geomOr(nisj1_16)

Executing: hvgate2 = geomOr(nhv1 phv1)

Executing: ngate21 = geomOutside(ngate1 lvt)

Executing: nngate1 = geomAnd(ngate21 pwblk)

Executing: nnm = geomAnd(nngate1 mv)

Executing: nn = geomAndNot(nngate1 mv)

Executing: ngate2 = geomAndNot(ngate21 nngate1)

Executing: ndgate = geomAnd(ngate2 depl)

Executing: ndm = geomAnd(ndgate mv)

Executing: ndsgate = geomAnd(ngate2 pws)

Executing: nds5i = geomAnd(geomAnd(ndsgate sci) mv)

Executing: ne5m = geomAnd(geomAndNot(ndsgate nds5i) mv)

Executing: ngate3 = geomAndNot(ngate2 geomOr(ndgate ndsgate))

Executing: ne = geomAndNot(ngate3 mv)

Executing: nem1 = geomAnd(ngate3 mv)

Executing: nel = geomInside(geomAndNot(ngate1 pwblk) lvt)

Executing: mosvc_n = geomOr(pwblk depl pwell4 pdf subblk)

Executing: mosvc1 = geomOutside(geomAndNot(mosvc10 mosvc_n) nmva2)

Executing: ngate4 = geomAndNot(ngate11 geomOr(mosvc_n lvt))

Executing: mosvci1 = geomInside(geomAnd(ngate4 pimp) geomOutside(tub geomOr(nwell ndif)))

Executing: pgate20 = geomAndNot(pgate2 geomOr(pmva phsj1_all))

Executing: pgate21 = geomOutside(pgate20 lvt)

Executing: pgate3 = geomOutside(pgate21 hvnwell)

Executing: pe10 = geomAndNot(pgate3 mv)

Executing: pem10a = geomAnd(pgate3 mv)

Executing: hvnw_ndti = geomAndNot(hvnwell dti)

Executing: pgate4 = geomInside(pgate21 geomAnd(geomEnclose(hvnw_ndti dtiholes1) geomEncl...

Executing: peti = geomAndNot(pgate4 mv)

Executing: pemti = geomAnd(pgate4 mv)

Executing: pel0 = geomInside(pgate20 lvt)

Executing: dfwd_tubx = geomAnd(tub geomOutside(geomAnd(hvnwell dnc) poly))

Executing: dfwd_tub = geomAnd(geomEnclose(dfwd_tubx tub) geomEnclose(tub dfwd_tubx))

Executing: dpp_1 = geomInside(geomAnd(geomEnclose(dfwd_tub diff2) geomEnclose(diff2 dfwd...

Executing: dpp6_2 = geomGetRectangle(geomAnd(geomInside(pdif dio_mark) dpp_1) ((5 <= len...

Executing: dpp6_3 = geomAnd(dpp6_2 geomEnclose(dpp_1 dpp6_2 (keep == 1)))

Executing: dpp6_33 = geomSize(geomGetEdge(dpp6_3 outside dti) -0.22)

Executing: dpp6_60 = geomAndNot(dpp6_33 sblk)

Executing: dpp6_6 = geomAndNot(dpp6_3 geomStraddle(dpp6_3 dpp6_60))

Executing: dpp6_c = geomEnclose(dpp_1 dpp6_6)

Executing: dpp6_4 = geomGetRectangle(geomInside(ndif dpp6_c))

Executing: dpp6_5 = geomAnd(dpp6_4 geomEnclose(dpp6_c dpp6_4 (keep == 1)))

Executing: dpp6 = geomAnd(dpp6_6 geomEnclose(dpp6_c dpp6_5))

Executing: dpp7_2 = geomInside(geomInside(ntap_h4 dfwd_tub) mv)

Executing: dpp7_3 = geomEnclose(dpp7_2 pdif (keep == 1))

Executing: dpp7_4 = geomGetRectangle(geomAnd(dpp7_3 pdif) ((1.0 <= length) <= 100) (widt...

Executing: dpp7_5 = geomSize(dpp7_4 0.44)

Executing: dpp7_6 = geomAnd(geomInside(dpp7_2 dpp7_5) geomInside(dpp7_5 dpp7_2))

Executing: dpp7 = geomAnd(dpp7_4 dpp7_6)

Executing: dnp_tubx = geomAnd(geomOutside(tub poly) dpc)

Executing: dnp_tub = geomAnd(geomEnclose(dnp_tubx tub) geomEnclose(tub dnp_tubx))

Executing: dnp7_2 = geomInside(geomInside(ptap_h4 dnp_tub) mv)

Executing: dnp7_3 = geomEnclose(dnp7_2 ndif (keep == 1))

Executing: dnp7_4 = geomGetRectangle(geomAnd(dnp7_3 ndif) ((1.0 <= length) <= 100) (widt...

Executing: dnp7_5 = geomSize(dnp7_4 0.44)

Executing: dnp7_6 = geomAnd(geomInside(dnp7_2 dnp7_5) geomInside(dnp7_5 dnp7_2))

Executing: dnp7 = geomAnd(dnp7_4 dnp7_6)

Executing: dzb1 = geomAnd(geomAnd(nzener pdif) nwell)

Executing: dzb2 = geomInside(geomInside(dzb1 nwell) geomOutside(tub_xta poly))

Executing: dzb30 = geomGetRectangle(dzb2 (width == 1.16))

Executing: dzb31 = geomGetLength(geomGetEdge(dzb30 outside dti) ((5.0 <= keep) <= 25.0))

Executing: dzb32 = geomSize(dzb31 -0.1)

Executing: dzb33 = geomEnclose(dzb30 dzb32 (keep == 2))

Executing: dzb10 = geomAnd(geomEnclose(nwell dzb33) tub_xta)

Executing: dzb34 = geomEnclose(dzb10 dzb33 ((1 <= keep) <= 8))

Executing: dzb3 = geomInside(dzb33 dzb34)

Executing: dzb5 = geomSize(dzb31 2.12)

Executing: dzb51 = geomAndNot(dzb5 geomSize(dzb31 1.0))

Executing: dzb63 = geomAndNot(dzb51 ndif)

Executing: dzb6 = geomOutside(dzb5 dzb63)

Executing: dzb71 = geomOr(dzb3 dzb5)

Executing: dzb72 = geomOr(dzb3 dzb6)

Executing: dzb7 = geomInside(geomAnd(geomEnclose(dzb71 dzb72) geomEnclose(dzb72 dzb71)) ...

Executing: dzb = geomInside(dzb3 dzb7)

Executing: dzb_s02 = geomSize(dzb 0.2)

Executing: dzb_rdp = geomAnd(dzb_s02 sblk)

Executing: dzb_nw_1 = geomOr(geomSize(geomGetEdge(dzb inside tub) 1.3) dzb)

Executing: dzb_nw = geomSize(dzb_nw_1 1.0)

Executing: rnw1 = geomAnd(nwres geomAndNot(nwell hvnwell))

Executing: rnw_2 = geomInside(rnw1 hvpwell)

Executing: rxw0 = geomEnclose(diff geomAnd(sblk rnw1))

Executing: rxw = geomAnd(geomOverlap(nwell rxw0) rnw1)

Executing: rnw_1 = geomAndNot(rnw1 geomOr(rxw rnw_2))

Executing: nw_scr0 = geomInside(geomGetTexted(nwell dio_label "scr") subblk)

Executing: nw_scr1 = geomOutside(geomOverlap(act nw_scr0) subblk)

Executing: nw_scr = geomAndNot(nw_scr0 geomStraddle(nw_scr0 nw_scr1))

Executing: rnw1_scr = geomAnd(nw_scr rnw_1)

Executing: rnw3_scr = geomButtOnly(rnw1_scr ndif (keep == 1))

Executing: rnw4_scr = geomButtOnly(rnw3_scr geomInside(pdif nwell) (keep == 1))

Executing: rnw_scr = geomAndNot(rnw4_scr mv)

Executing: rxw2ti = geomGetTexted(rxw nwres_label "rxw2ti")

Executing: cfg_p1 = geomEmpty()

Executing: cfg_p12 = geomEmpty()

Executing: nw_esd0 = geomOutside(geomInside(nwell dio_mark) poly)

Executing: nw_esd2 = geomGetTexted(nw_esd0 dio_label "niscr")

Executing: niscr_w1 = geomEnclose(nw_esd2 ndiff1 (keep == 1))

Executing: niscr_w2 = geomEnclose(niscr_w1 pdiff1 (keep == 2))

Executing: niscr_w3 = geomInside(nwell drc(niscr_w2 (width == 5.24)))

Executing: niscr_w4 = geomEnclose(geomSize(niscr_w3 1.46) ndiff1 (keep == 3))

Executing: rdn11 = geomAndNot(geomAnd(ndiff1 sblk) geomOr(nwell hvnwell pwblk pbase nbase))

Executing: niscr_nw = geomButtOnly(geomSize(niscr_w3 0.45) rdn11 (keep == 2))

Executing: rn_screx1 = geomSize(geomGetEdge(ndiff1 butting niscr_nw) -1.01)

Executing: rn_screx = geomInside(rdn11 rn_screx1)

Executing: rdn1 = geomAndNot(rdn11 rn_screx)

Executing: rdn_g1 = geomSize(geomGetEdge(gate butting rdn1) 0.005)

Executing: rdn_a1 = geomOutside(rdn1 rdn_g1)

Executing: rdn2 = geomOutside(rdn1 rdn_a1)

Executing: rdn_g2 = geomAndNot(rdn2 rdn_g1)

Executing: rdn_g = geomAndNot(rdn_g2 mv)

Executing: rdnm_g0 = geomAnd(rdn_g2 mv)

Executing: dpc_esd_ex1 = geomOr(geomSize(geomGetEdge(rdnm_g0 coincident sblk) 0.5) rdnm_g0)

Executing: dpc_esd = geomInside(geomInside(dpc dpc_esd_ex1) subblk)

Executing: pw4_esd = geomInside(geomInside(pwell4 dpc_esd_ex1) subblk)

Executing: rdnm_dpc = geomInside(rdnm_g0 geomSize(dpc_esd 0.5))

Executing: rdnm_pw4 = geomInside(rdnm_g0 geomSize(pw4_esd 0.5))

Executing: rdnm_g = geomAndNot(rdnm_g0 geomOr(rdnm_dpc rdnm_pw4))

Executing: rdn_a = geomOr(rdn_a1 rdn_g2)

Executing: ndiff = geomAndNot(ndiff1 rdn_a) keepLayer(ndiff)

Executing: pw4trm = geomAndNot(pw4trm0 pw4_esd)

Executing: rdp11 = geomAnd(geomAnd(geomAndNot(pdiff1 geomOr(cfg_p1 dpp6 dzb_rdp)) sblk) ...

Executing: rp_screx = geomInside(rdp11 niscr_nw)

Executing: rdp1 = geomAndNot(rdp11 rp_screx)

Executing: rdp_g1 = geomSize(geomGetEdge(gate butting rdp1) 0.005)

Executing: rdp_a1 = geomOutside(rdp1 rdp_g1)

Executing: rdp2 = geomOutside(rdp1 rdp_a1)

Executing: rdp_g2 = geomAndNot(rdp2 rdp_g1)

Executing: rdp_a = geomOr(rdp_a1 rdp_g2)

Executing: pdiff = geomAndNot(pdiff1 rdp_a) keepLayer(pdiff)

Executing: rnp1h = geomAnd(geomAnd(poly sblk) hres)

Executing: rnp1h_3 = geomGetTexted(rnp1h polylabel "rnp1h_3")

Executing: rpp1k1 = geomAnd(mres poly)

Executing: rpp1k1a = geomGetTexted(rpp1k1 polylabel "rpp1k1a")

Executing: rpp1k1a_3 = geomGetTexted(rpp1k1 polylabel "rpp1k1a_3")

Executing: rpp1k1a_0 = geomOr(rpp1k1a rpp1k1a_3)

Executing: rpp1k1_3 = geomGetTexted(geomAndNot(rpp1k1 rpp1k1a_0) polylabel "rpp1k1_3")

Executing: rp_1 = geomAndNot(geomAnd(sblk geomAndNot(poly geomOr(rpp1k1 rnp1h))) gate)

Executing: rp_2 = geomSize(geomGetEdge(gate butting rp_1) 0.22)

Executing: rp_3 = geomSize(geomGetEdge(rpp1k1 butting rp_1) 0.22)

Executing: rp_5 = geomAndNot(rp_1 rp_2)

Executing: rnp1 = geomAnd(rp_5 nimp)

Executing: poly_otp2 = geomEmpty()

Executing: rpp1 = geomAndNot(geomAndNot(geomAnd(rp_5 pimp) rp_3) poly_otp2)

Executing: rnp1_3 = geomGetTexted(rnp1 polylabel "rnp1_3")

Executing: rpp1_3 = geomGetTexted(rpp1 polylabel "rpp1_3")

Executing: polyre1 = geomOr(rnp1 rpp1)

Executing: polyre2 = geomOr(polyre1 geomOr(rnp1h rpp1k1))

Executing: p1trm = geomAndNot(poly polyre2)

Executing: rpp1s_a1 = geomAndNot(geomAnd(geomAndNot(geomAnd(p1trm respoly) sblk) pimp) g...

Executing: rpp1s_a2 = geomSize(geomGetEdge(rpp1 inside poly) 0.22)

Executing: rpp1s = geomAndNot(rpp1s_a1 rpp1s_a2)

Executing: rpp1s_3 = geomGetTexted(rpp1s polylabel "rpp1s_3")

Executing: p1trm2 = geomAndNot(p1trm rpp1s)

Executing: pfuse0 = geomGetTexted(geomAnd(p1trm2 respoly) polylabel "PFUSE")

Executing: pfuse1 = geomGetRectangle(pfuse0 (length == 0.8) (width == 0.18))

Executing: pfuse2a = geomSize(geomGetLength(pfuse1 (keep == 0.18)) 0.54)

Executing: pfuse2 = geomOr(geomSize(geomGetEdge(pfuse2a outside pfuse1) 0.84 chainEdges)...

Executing: pfuse3 = geomOr(geomAndNot(pfuse2 geomSize(geomGetLength(pfuse1 (keep == 0.8)...

Executing: pfuse41 = geomEnclose(poly pfuse1 (keep == 1))

Executing: pfuse4 = geomAnd(geomInside(pfuse41 pfuse3) geomInside(pfuse3 pfuse41))

Executing: pfuse5 = geomSize(geomSize(geomInside(cont pfuse4) 0.13) -0.13)

Executing: pfuse10 = geomSize(geomGetEdge(pfuse1 inside poly) 0.06)

Executing: pfuse11 = geomAndNot(geomAnd(geomSize(pfuse10 0.62) pfuse4) pfuse1)

Executing: pfuse12 = geomSize(pfuse11 -0.1)

Executing: pfuse14 = geomOr(pfuse5 pfuse12)

Executing: pfuse16 = geomGetRectangle(pfuse14 (length == 1.66) (width == 1.18))

Executing: pfuse17 = geomEnclose(pfuse4 pfuse16 (keep == 2))

Executing: pfuse = geomInside(pfuse1 pfuse17)

Executing: pfuse_nw2 = geomSize(pfuse 1.7)

Executing: pfuse_nw = geomAnd(nwell geomSize(pfuse 1.7))

Executing: polytrm = geomAndNot(p1trm2 pfuse)

Executing: nwtrm0_scr = geomInside(nw_scr nwtrm0)

Executing: nwtrm0_nscr = geomAndNot(nwtrm0 nwtrm0_scr)

Executing: nwtrm_scr = geomAndNot(nwtrm0_scr rnw1_scr)

Executing: nwtrm = geomAndNot(nwtrm0_nscr rnw1) keepLayer(nwtrm)

Executing: nwtrm1 = geomAndNot(geomOr(nwtrm nwtrm_scr) pfuse_nw)

Executing: met1res = geomAnd(met1 resmet1)

Executing: met2res = geomAnd(met2 resmet2)

Executing: met1trm = geomAndNot(met1 met1res)

Executing: met2trm = geomAndNot(met2 met2res)

Executing: met3res = geomAnd(met3 resmet3)

Executing: met3trm = geomAndNot(met3 met3res)

Executing: met4res = geomAnd(met4 resmet4)

Executing: met4trm = geomAndNot(met4 met4res)

Executing: mtplres = geomAnd(mtpl resmtpl)

Executing: mtpltrm = geomAndNot(mtpl mtplres)

Executing: mtpres = geomAnd(mtp resmtp)

Executing: mtptrm = geomAndNot(mtp mtpres)

Executing: qpv_nw1 = geomEnclose(nwell pdiff (keep == 1))

Executing: qpv_ph1 = geomEnclose(ptap_h4 qpv_nw1 (keep == 1))

Executing: qpv_nw2 = geomInside(qpv_nw1 qpv_ph1)

Executing: qpv_nws = geomSize(qpv_nw2 0.38)

Executing: qpv_nw3 = geomInside(qpv_nws ptap_h4)

Executing: qpv_nw4 = geomInside(ptap_h4 qpv_nw3)

Executing: qpv_nw5 = geomAnd(qpv_nw3 qpv_nw4)

Executing: qpv_pd1 = geomInside(pdiff qpv_nw5)

Executing: qpv_pd2 = geomAndNot(qpv_pd1 geomInside(qpv_pd1 dio_mark))

Executing: qpv_pd4 = geomGetVertex(qpv_pd2 (keep == 4))

Executing: qpv_pds = geomSize(qpv_pd4 1.1)

Executing: qpv_nt1 = geomInside(ntap qpv_nw5)

Executing: qpv_nt2 = geomSize(qpv_nt1 0.45)

Executing: qpv_nt3 = geomHoles(qpv_nt1 innermost)

Executing: qpv_nt4 = geomGetVertex(qpv_nt3 (keep == 4))

Executing: qpv_pd5 = geomInside(qpv_nt4 qpv_pds)

Executing: qpv_pd6 = geomInside(qpv_pd4 qpv_pd5)

Executing: qpv_nw6 = geomEnclose(qpv_nw5 qpv_nt2)

Executing: qpv_nw7 = geomEnclose(qpv_nw6 qpv_pd6)

Executing: qpv_nw = geomInside(qpv_nw1 qpv_nw7)

Executing: qpva_w1 = drc(qpv_nw (area == 36.0))

Executing: qpvb_w1 = drc(qpv_nw (area == 81.0))

Executing: qpvc_w1 = drc(qpv_nw (area == 196.0))

Executing: qpva_w = geomInside(qpva_w1 subblk)

Executing: qpvb_w = geomInside(qpvb_w1 subblk)

Executing: qpvc_w = geomInside(qpvc_w1 subblk)

Executing: qpve_w = geomOutside(qpva_w1 subblk)

Executing: qpvf_w = geomOutside(qpvb_w1 subblk)

Executing: qpvg_w = geomOutside(qpvc_w1 subblk)

Executing: qnv5_1 = geomGetRectangle(geomInside(ndif pbase) ((3 <= length) <= 100) (widt...

Executing: qnv5_20 = geomSize(qnv5_1 1.12)

Executing: qnv5_21 = geomSize(qnv5_1 0.4)

Executing: qnv5_22 = geomSize(qnv5_1 1.65)

Executing: qnv5_2a = geomAndNot(qnv5_22 pbase)

Executing: qnv5_2b = geomAndNot(qnv5_20 diff)

Executing: qnv5_2c = geomOr(geomAnd(qnv5_21 pimp) geomAndNot(geomAndNot(qnv5_20 qnv5_21)...

Executing: qnv5_2 = geomOutside(qnv5_22 geomOr(qnv5_2a qnv5_2b qnv5_2c))

Executing: qnv5_dev = geomInside(qnv5_1 geomAnd(ntap_hol qnv5_2))

Executing: qnv5 = geomEnclose(pbase qnv5_dev)

Executing: qpv_1 = geomOutside(nbase dnwell)

Executing: qpv5_1 = geomGetRectangle(geomInside(pdif qpv_1) ((10 <= length) <= 100) (wid...

Executing: qpv5_20 = geomSize(qpv5_1 1.12)

Executing: qpv5_21 = geomSize(qpv5_1 0.4)

Executing: qpv5_23 = geomSize(qpv5_1 2.76)

Executing: qpv5_231 = geomSize(qpv5_1 2.765)

Executing: qpv5_22 = geomSize(qpv5_1 1.55)

Executing: qpv5_2a = geomAndNot(qpv5_22 nbase)

Executing: qpv5_2b = geomAndNot(qpv5_20 diff)

Executing: qpv5_2c = geomOr(geomAnd(geomAndNot(qpv5_23 qpv5_1) pdiff1) geomAndNot(geomAn...

Executing: qpv5_2d = geomAndNot(geomAndNot(qpv5_20 qpv5_21) ndiff1)

Executing: qpv5_2 = geomOutside(qpv5_231 geomOr(qpv5_2a qpv5_2b qpv5_2c qpv5_2d))

Executing: qpv5_dev = geomInside(qpv5_1 qpv5_2)

Executing: qpv5 = geomEnclose(nbase qpv5_dev)

Executing: ndif1 = geomAndNot(ndif anwell1)

Executing: ndif2 = geomAndNot(ndif1 rdn_a)

Executing: dn_10 = geomOutside(ndif2 poly)

Executing: dn_101 = geomInside(dn_10 mv)

Executing: ndif2_d = geomInside(geomInside(dn_101 dio_mark) ptap_hol)

Executing: dfwdna_1 = geomGetRectangle(ndif2_d (2 <= length) (width == 1.0))

Executing: dfwdna_2 = geomSize(dfwdna_1 0.44)

Executing: dfwdna_21 = geomAnd(geomAndNot(dfwdna_2 dfwdna_1) act)

Executing: dfwdna_22 = geomSize(geomGetEdge(dfwdna_2 outside ptap) -0.001)

Executing: dfwdna_31 = geomOutside(dfwdna_2 geomOr(dfwdna_21 dfwdna_22))

Executing: dnpa_1 = geomInside(dfwdna_31 pwell4)

Executing: dza_1 = geomInside(dfwdna_31 pzener)

Executing: dfwdna_3 = geomAndNot(dfwdna_31 geomOr(dnpa_1 dza_1))

Executing: dfwdna_4 = geomSize(dfwdna_3 0.5)

Executing: dfwdna_41 = geomAndNot(geomAndNot(dfwdna_4 dfwdna_3) ptap)

Executing: dfwdna_42 = geomSize(geomGetEdge(dfwdna_4 outside diffdti) -0.001)

Executing: dfwdna_5 = geomOutside(dfwdna_4 geomOr(dfwdna_41 dfwdna_42))

Executing: dfwdn5 = geomInside(dfwdna_1 dfwdna_5)

Executing: dnpa_2 = geomGetTexted(dnpa_1 dio_label "dnpati")

Executing: dnpa_3 = geomAndNot(dnpa_1 dnpa_2)

Executing: dnpa_4 = geomSize(dnpa_1 0.42)

Executing: dnpa_41 = geomAndNot(geomAndNot(dnpa_4 dnpa_1) ptap)

Executing: dnpa_5 = geomOutside(dnpa_4 dnpa_41)

Executing: dnpati = geomInside(dfwdna_1 geomInside(dnpa_2 dnpa_5))

Executing: dnpa = geomInside(dfwdna_1 geomInside(dnpa_3 dnpa_5))

Executing: dnpa_all = geomOr(dnpati dnpa)

Executing: dza_2 = geomGetTexted(dza_1 dio_label "dzati")

Executing: dza_3 = geomAndNot(dza_1 dza_2)

Executing: dza_4 = geomSize(dza_1 0.42)

Executing: dza_41 = geomAndNot(geomAndNot(dza_4 dza_1) ptap)

Executing: dza_5 = geomOutside(dza_4 dza_41)

Executing: dzati = geomInside(dfwdna_1 geomInside(dza_2 dza_5))

Executing: dza = geomInside(dfwdna_1 geomInside(dza_3 dza_5))

Executing: dza_all = geomOr(dzati dza)

Executing: dn_1 = geomAndNot(geomAndNot(dn_10 geomOr(dnp7 dfwdn5 dnpa_all dza_all qnv5))...

Executing: dn_2 = geomAndNot(dn_1 pwblk)

Executing: d_dn_a = geomInside(dn_2 dio_mark)

Executing: pdif1 = geomAndNot(geomAnd(pdif nwell) salicide)

Executing: pdif2 = geomAndNot(pdif1 rdp_a)

Executing: dp_1 = geomAndNot(geomOutside(pdif2 poly) dzb_s02)

Executing: dfwdp_12 = geomInside(geomInside(dp_1 dio_mark) geomOutside(dfwd_tub sblk))

Executing: dfwdp_14 = geomGetRectangle(dfwdp_12 (length >= 2.0) (width == 2.0))

Executing: dfwdp_15 = geomGetRectangle(dfwdp_12 (length >= 2.0) (width == 1.0))

Executing: dfwdp_1 = geomOr(dfwdp_14 dfwdp_15)

Executing: dfwdp_tub = geomEnclose(dfwd_tub dfwdp_1)

Executing: dfwdp_ntap = geomAnd(geomEnclose(dfwdp_tub dfwdp_1) ntap)

Executing: dfwdp_tub2 = geomEnclose(dfwdp_tub dfwdp_ntap)

Executing: dfwdp = geomInside(dfwdp_1 dfwdp_tub2)

Executing: dfwpsj_7 = geomEmpty()

Executing: dfwpsj_8_5 = geomEmpty()

Executing: dfwpsj_9 = geomEmpty()

Executing: dfwpsj_9_5 = geomEmpty()

Executing: dfwpsj_10 = geomEmpty()

Executing: dfwpsj_10_75 = geomEmpty()

Executing: dfwpsj_11_5 = geomEmpty()

Executing: dfwpsj_12_25 = geomEmpty()

Executing: dfwpsj_13 = geomEmpty()

Executing: dfwpsj_14 = geomEmpty()

Executing: dfwpsj_15 = geomEmpty()

Executing: dfwpsj_16 = geomEmpty()

Executing: dfwpsj1_7 = geomOr(dfwpsj_7)

Executing: dfwpsj1_10 = geomCat(dfwpsj_8_5 dfwpsj_9 dfwpsj_9_5 dfwpsj_10)

Executing: dfwpsj1_13 = geomCat(dfwpsj_10_75 dfwpsj_11_5 dfwpsj_12_25 dfwpsj_13)

Executing: dfwpsj1_16 = geomCat(dfwpsj_14 dfwpsj_15 dfwpsj_16)

Executing: dfwp1 = geomOr(dfwpsj1_7 dfwpsj1_10 dfwpsj1_13 dfwpsj1_16)

Executing: dfwn_0 = geomOutside(geomAnd(sjnp_pwb act) poly)

Executing: dfwn_10 = geomInside(geomButtOnly(dfwn_0 hvnwell (keep == 1)) hvtub)

Executing: dfwn_11 = geomSize(geomGetEdge(dfwn_10 inside hvtub outside hvpwell) 1.5)

Executing: dfwn_12 = geomAnd(dfwn_11 geomAnd(geomAnd(nbur hvnwell) ndiff1))

Executing: dfwn_13 = geomAnd(geomInside(dfwn_11 dfwn_12) geomInside(dfwn_12 dfwn_11))

Executing: dfwn_14 = geomOr(dfwn_10 dfwn_11)

Executing: dfwn_15 = geomOr(dfwn_10 dfwn_13)

Executing: dfwn_16 = geomAnd(geomInside(dfwn_14 dfwn_15) geomInside(dfwn_15 dfwn_14))

Executing: dfwn_1 = geomAnd(dfwn_10 dfwn_16)

Executing: dfwn_2 = geomAnd(geomEnclose(dfwn_1 hvtub_subblk) geomEnclose(hvtub_subblk df...

Executing: dfwn = geomGetRectangle(geomInside(dfwn_2 dio_mark) (10 <= length))

Executing: dfwn_edge = geomGetEdge(geomAnd(sjnp dfwn) butting geomAnd(nwell nbur))

Executing: dfwn_edge7 = geomEnclose(geomAndNot(geomSize(dfwn_edge -7.0) dti) dfwn_1)

Executing: dfwnsj_7 = geomInside(dfwn_edge7 dfwn_1)

Executing: dfwn_edge10 = geomEnclose(geomAndNot(geomSize(dfwn_edge -10.0) dti) dfwn_1)

Executing: dfwnsj_8_5 = geomEmpty()

Executing: dfwnsj_9 = geomEmpty()

Executing: dfwnsj_9_5 = geomEmpty()

Executing: dfwnsj_10 = geomInside(dfwn_edge10 dfwn_1)

Executing: dfwnsj_10_75 = geomEmpty()

Executing: dfwnsj_11_5 = geomEmpty()

Executing: dfwnsj_12_25 = geomEmpty()

Executing: dfwnsj_13 = geomEmpty()

Executing: dfwn_edge16 = geomEnclose(geomAndNot(geomSize(dfwn_edge -16) dti) dfwn_1)

Executing: dfwnsj_14 = geomEmpty()

Executing: dfwnsj_15 = geomEmpty()

Executing: dfwnsj_16 = geomInside(dfwn_edge16 dfwn_1)

Executing: dfwnsj1_7 = geomOr(dfwnsj_7)

Executing: dfwnsj1_10 = geomCat(dfwnsj_8_5 dfwnsj_9 dfwnsj_9_5 dfwnsj_10)

Executing: dfwnsj1_13 = geomCat(dfwnsj_10_75 dfwnsj_11_5 dfwnsj_12_25 dfwnsj_13)

Executing: dfwnsj1_16r = geomCat(dfwnsj_14 dfwnsj_15 dfwnsj_16)

Executing: dfwnsj1_16r1 = geomGetRectangle(dfwnsj1_16r (20 <= length))

Executing: dfwn1 = geomOr(dfwnsj1_7 dfwnsj1_10 dfwnsj1_13 dfwnsj1_16r1)

Executing: dfwnsj1_16c = geomAnd(geomGetTexted(geomEnclose(dio_mark dfwnsj1_16r1) dio_la...

Executing: sj = geomOr(sjnp sjpn)

Executing: dhw2_1 = geomGetTexted(hwntub dio_label "dhw2")

Executing: dhw2_20 = geomOverlap(nbur dhw2_1)

Executing: dhw2_2 = geomGetHoled(dhw2_20)

Executing: geomHoles(dhw2_2)

Executing: dhw2 = geomOr(dhw2_20 dhw2_3)

Executing: dhw3_1 = geomGetTexted(hwntub dio_label "dhw3")

Executing: dhw3_20 = geomOverlap(nbur dhw3_1)

Executing: dhw3_2 = geomGetHoled(dhw3_20)

Executing: geomHoles(dhw3_2)

Executing: dhw3 = geomOr(dhw3_20 dhw3_3)

Executing: dhw4 = geomEmpty()

Executing: dhw2a_1 = geomAndNot(hwntub geomOr(dhw2 dhw3 dhw4))

Executing: dhw2a_20 = geomOverlap(nbur dhw2a_1)

Executing: dhw2a_2 = geomGetHoled(dhw2a_20)

Executing: geomHoles(dhw2a_2)

Executing: dhw2a = geomOr(dhw2a_20 dhw2a_3)

Executing: cm_s = geomAndNot(geomSize(cm 2.5) cm)

Executing: cmh_s = geomAndNot(geomSize(cmh 2.5) cmh)

Executing: cm23f_s = geomAndNot(geomSize(cm23f 2.5) cm23f)

Executing: cmh23f_s = geomAndNot(geomSize(cmh23f 2.5) cmh23f)

Executing: cm34f_s = geomAndNot(geomSize(cm34f 2.5) cm34f)

Executing: cmh34f_s = geomAndNot(geomSize(cmh34f 2.5) cmh34f)

Executing: bm = geomEnclose(met4trm cm) keepLayer(bm)

Executing: bm1 = geomButtOrOver(geomAnd(cm_s bm) cm)

Executing: bmh = geomEnclose(met4trm cmh) keepLayer(bmh)

Executing: bmh1 = geomButtOrOver(geomAnd(cmh_s bmh) cmh)

Executing: vian = geomAnd(geomOr(bm1 bmh1) via3)

Executing: bm23f = geomEnclose(met2trm cm23f)

Executing: bm23f1 = geomButtOrOver(geomAnd(cm23f_s bm23f) cm23f)

Executing: bmh23f = geomEnclose(met2trm cmh23f)

Executing: bmh23f1 = geomButtOrOver(geomAnd(cmh23f_s bmh23f) cmh23f)

Executing: bm34f = geomEnclose(met3trm cm34f)

Executing: bm34f1 = geomButtOrOver(geomAnd(cm34f_s bm34f) cm34f)

Executing: bmh34f = geomEnclose(met3trm cmh34f)

Executing: bmh34f1 = geomButtOrOver(geomAnd(cmh34f_s bmh34f) cmh34f)

Executing: vtpcm = geomAnd(vtp cm)

Executing: vtpcmh = geomAnd(vtp cmh)

Executing: vtpCON1 = geomAndNot(vtp geomOr(vtpcm vtpcmh))

Executing: v2cm = geomAnd(via2 cm23f)

Executing: v2cmh = geomAnd(via2 cmh23f)

Executing: via2CON1 = geomAndNot(via2 geomOr(v2cm v2cmh))

Executing: v3cm = geomAnd(via3 cm34f)

Executing: v3cmh = geomAnd(via3 cmh34f)

Executing: via3CON1 = geomAndNot(via3 geomOr(v3cm v3cmh))

Executing: m2_dmm = geomAnd(met2trm cm2)

Executing: m3_dmm = geomAnd(met3trm cm2)

Executing: v2cm2 = geomAnd(via2 m3_dmm)

Executing: m2_dmmh = geomAnd(met2trm cmh2)

Executing: m3_dmmh = geomAnd(met3trm cmh2)

Executing: v2cmh2 = geomAnd(via2 m3_dmmh)

Executing: m4_dmm = geomAnd(met4trm cm2)

Executing: v3cm2 = geomAnd(via3 m4_dmm)

Executing: m4_dmmh = geomAnd(met4trm cmh2)

Executing: v3cmh2 = geomAnd(via3 m4_dmmh)

Executing: m3_dmma = geomAnd(met3trm cm2a)

Executing: m3_dmmha = geomAnd(met3trm cmh2a)

Executing: m4_dmma = geomAnd(met4trm cm2a)

Executing: m4_dmmha = geomAnd(met4trm cmh2a)

Executing: v3cm2a = geomAnd(via3 m4_dmma)

Executing: v3cmh2a = geomAnd(via3 m4_dmmha)

Executing: mt_dmma = geomAnd(mtptrm cm2a)

Executing: vtpcm2a = geomAnd(vtp mt_dmma)

Executing: mt_dmmha = geomAnd(mtptrm cmh2a)

Executing: vtpcmh2a = geomAnd(vtp mt_dmmha)

Executing: m2_tmm = geomAnd(met2trm cm3)

Executing: m3_tmm = geomAnd(met3trm cm3)

Executing: v2cm3 = geomAnd(via2 m2_tmm)

Executing: m2_tmmh = geomAnd(met2trm cmh3)

Executing: m3_tmmh = geomAnd(met3trm cmh3)

Executing: v2cmh3 = geomAnd(via2 m2_tmmh)

Executing: via2CON = geomAndNot(via2CON1 geomOr(v2cm3 v2cmh3 v2cm2 v2cmh2))

Executing: m4_tmm = geomAnd(met4trm cm3)

Executing: v3cm3 = geomAnd(via3 m4_tmm)

Executing: m4_tmmh = geomAnd(met4trm cmh3)

Executing: v3cmh3 = geomAnd(via3 m4_tmmh)

Executing: via3CON = geomAndNot(via3CON1 geomOr(v3cm3 v3cmh3 v3cm2 v3cmh2 v3cm2a v3cmh2a))

Executing: mt_tmm = geomAnd(mtptrm cm3)

Executing: vtpcm3 = geomAnd(vtp mt_tmm)

Executing: mt_tmmh = geomAnd(mtptrm cmh3)

Executing: vtpcmh3 = geomAnd(vtp mt_tmmh)

Executing: vtpCON = geomAndNot(vtpCON1 geomOr(vtpcm3 vtpcmh3 vtpcm2a vtpcmh2a))

Executing: hwafer = geomOverlap(bkgnd geomOr(hwptub hwntub hwc_bs geomAndNot(ngate_nhv_a...

Executing: hwafer_bs = geomOverlap(bkgnd hwc_bs)

Executing: contSD = geomAnd(cont diff)

Executing: contP = geomOutside(cont diff1)

Executing: ndf_nsd = geomAnd(ndiff ndftrm)

Executing: pdf_psd = geomAnd(pdiff pdftrm)

Executing: nhv1_d_nsd = geomAnd(ndiff nhv1_d)

Executing: phv1_d_psd = geomAnd(pdiff phv1_d)

Executing: nisj_d_psd = geomAnd(pdiff nisj_d)

Executing: nsd = geomAndNot(ndiff geomOr(ndf_nsd nhv1_d_nsd)) keepLayer(nsd)

Executing: psd = geomAndNot(pdiff geomOr(ndf_nsd phv1_d_psd)) keepLayer(psd)

Executing: contSD1 = geomAnd(contSD geomOr(ndf_nsd pdf_psd))

Executing: contSD2 = geomAnd(contSD geomOr(nhv1_d_nsd phv1_d_psd nisj_d_psd))

Executing: ntapc = geomAndNot(ntap geomSize(geomGetEdge(geomAnd(ntap sblk) butting psd) ...

Executing: ptapc = geomAndNot(ptap geomSize(geomGetEdge(geomAnd(ptap sblk) butting nsd) ...

Executing: geomConnect((via cont met1trm ndiff pdiff) (via contSD met1trm nsd psd ntapc ...
 See the label report in "filter_top_DRC.erc" file for details.


Executing: geomStamp(bm met4trm)

Executing: geomStamp(bmh met4trm)

Executing: geomStamp(nwtrm ntapc)

Executing: geomStamp(nwtrm1 ntapc floating "Q1NW: NWELL should be contacted by NDIFF" multStamp "NWELL soft connect" multConnect "minority NWELL connectors")

Executing: geomStamp(bulk ptapc floating "PTUB should be contacted" multStamp "PTUB soft connect" multConnect "minority PTUB connectors")

Executing: geomStamp(ndftrm ndf_nsd floating "NDF should be contacted" multStamp "NDF soft connect" multConnect "minority NDF connectors")

Executing: geomStamp(nbase nsd floating "NBASE should be contacted" multStamp "NBASE soft connect" multConnect "minority NBASE connectors")

Executing: geomStamp(pdftrm pdf_psd floating "PDF should be contacted" multStamp "PDF soft connect" multConnect "minority PDF connectors")

Executing: geomStamp(tiedtub_nbuf psd floating multStamp multConnect)

Executing: geomStamp(hwntub nwtrm)

Executing: geomStamp(hwptub bulk)

Executing: hw_cont = geomOr(hwptub hwafer_bs)

Executing: hwafer1 = geomOr(hwafer)

Executing: geomStamp(hwafer1 hwptub multStamp "handle wafer must have same net" multConnect "handle wafer must have same net")

Executing: geomStamp(pw4trm ptapc floating "PWELL4 should be contacted" multStamp "PWELL4 soft connect" multConnect "minority PWELL4 connectors")

Executing: dfwdn_10 = geomAnd(dfwdn_ndf geomOverlap(dfwdn_ndf geomOverlap(pw4trm polytrm...

Executing: dfwdn_1 = geomAnd(dfwdn_10 tub)

Executing: dfwdn_2 = geomGetRectangle(geomAndNot(dfwdn_1 poly))

Executing: dfwdnt_1 = geomSize(geomGetLength(geomGetEdge(dfwdn_2 outside poly) (keep == ...

Executing: dfwdnt0 = geomEnclose(dfwdn_1 dfwdnt_1 (keep == 2))

Executing: dfwdnt = geomWidth(dfwdnt0 (keep >= 6.0))

Executing: dfwdnu_1 = geomSize(geomGetLength(geomGetEdge(dfwdn_2 outside poly) (keep == ...

Executing: dfwdnu0 = geomEnclose(dfwdn_1 dfwdnu_1 (keep == 2))

Executing: dfwdnu = geomWidth(dfwdnu0 (keep >= 6.0))

Executing: dfwdnut = geomOr(dfwdnt dfwdnu)

Executing: dfwdnut_gate = geomOverlap(dfwdn_gate dfwdnut)

Executing: gate_edge1 = geomGetEdge(geomAndNot(gate geomOr(nhvta ndhvta nisj1_16)) coinc...

Executing: gate0_edge = geomGetEdge(gate0 coincident poly)

Executing: ngate_edge1 = geomGetEdge(geomAndNot(gate nisj1_16) coincident ndif)

Executing: pgate_edge = geomGetEdge(gate coincident pdif)

Executing: nwell43o = geomSize(nwell 0.43)

Executing: nwell43u = geomAndNot(nwell geomSize(geomGetEdge(nwell outside dti) -0.43))

Executing: phv1_poly = geomStraddle(poly phv1_all)

Executing: nhv1_poly = geomStraddle(poly nhv1_all)

Executing: nisj1_poly = geomStraddle(poly nisj1_all)

Executing: phv1_gate = geomStraddle(gate phv1_all)

Executing: nhv1_gate = geomStraddle(gate nhv1_all)

Executing: nisj1_gate = geomStraddle(gate nisj1_all)

Executing: nhsj1_s = geomAndNot(geomOverlap(ndif nhv1_gate) nhv1_gate)

Executing: phsj1_s = geomAndNot(geomOverlap(pdif phv1_gate) phv1_gate)

Executing: pmva2_all = geomOr(pmva2)

Executing: pmva_gate = geomOr(pmva)

Executing: mva_gate = geomOr(nmva_gate pmva_gate)

Executing: nmva_s = geomAndNot(geomOverlap(ndif nmva) nmva)

Executing: pmva_s = geomAndNot(geomOverlap(pdif pmva) pmva)

Executing: nmhsj_s = geomOr(nhsj1_s nmva_s)

Executing: pmhsj_s = geomOr(phsj1_s pmva_s)

Executing: diffcon = geomAnd(cont diff1)

Executing: nhv_xta1 = geomOr(nhvta nhvtb nhvu)

Executing: nhv_xta = geomOr(nhv_xta1 ndhvt_all)

Executing: phv_xta = geomOr(phvta phvtb phvu)

Executing: tub_nxta1 = geomEnclose(tub nhv_xta)

Executing: tub_dfwdn = geomEnclose(tub dfwdnut)

Executing: tub_nxta = geomOr(tub_nxta1 tub_dfwdn)

Executing: tub_pxta1 = geomEnclose(tub phv_xta)

Executing: tub_phvta = geomEnclose(tub_pxta1 phvta)

Executing: tub_phvtb = geomEnclose(tub_pxta1 phvtb)

Executing: tub_phvu = geomEnclose(tub_pxta1 phvu)

Executing: tub_nhvta = geomEnclose(tub_nxta nhvta)

Executing: tub_ndhvta = geomEnclose(tub_nxta ndhvta)

Executing: tub_nhvtb = geomEnclose(tub_nxta nhvtb)

Executing: tub_nhvu = geomEnclose(tub_nxta nhvu)

Executing: tub_ndhvt = geomEnclose(tub_nxta ndhvt)

Executing: tub_nhvta_s10 = geomSize(tub_nhvta 0.5)

Executing: tub_nhvtb_s10 = geomSize(tub_nhvtb 0.5)

Executing: tub_nhvu_s10 = geomSize(tub_nhvu 0.5)

Executing: tub_ndhvt_s10 = geomSize(tub_ndhvt 0.5)

Executing: tub_ndhvta_s10 = geomSize(tub_ndhvta 0.5)

Executing: tub_dfwdnt = geomEnclose(tub_dfwdn dfwdnt)

Executing: tub_dfwdnu = geomEnclose(tub_dfwdn dfwdnu)

Executing: tub_dfwdnt_s10 = geomSize(tub_dfwdnt 0.5)

Executing: tub_dfwdnu_s10 = geomSize(tub_dfwdnu 0.5)

Executing: dti_nxta1 = geomAnd(dti_all geomSize(tub_nxta1 2.0))

Executing: dti_nxta = geomAnd(dti_all geomSize(tub_nxta 2.0))

Executing: dti_pxta1 = geomAnd(dti_all geomSize(tub_pxta1 2.0))

Executing: tub2_nxta1 = geomOr(tub_nxta1 dti_nxta1)

Executing: tub2_pxta1 = geomOr(tub_pxta1 dti_pxta1)

Executing: tub2_nxta = geomOr(tub_nxta dti_nxta)

Executing: tub2_pxta1_ex2 = geomSize(geomAnd(tub2_pxta1 geomOr(nwell pdf)) 2.5)

Executing: tub2_nxta_ex1 = geomSize(geomGetEdge(tub2_nxta coincident geomOr(pwell4 ndf) ...

Executing: tub2_nxta_ex2 = geomOr(tub2_nxta_ex1 tub2_nxta)

Executing: phvt_poly = geomStraddle(poly phvtu_all)

Executing: nhvt_poly = geomStraddle(poly geomOr(nhvtu_all ndhvt_1 dfwdn_gate))

Executing: pxta_tied = geomAnd(tiedtub tub2_pxta1)

Executing: dfwn_c7_s0 = geomGrow(dfwnsj1_7 0.0 1.5 0.0 1.5)

Executing: dfwn_c10_s0 = geomGrow(dfwnsj1_10 0.0 3.0 0.0 3.0)

Executing: dfwn_c13_s0 = geomGrow(dfwnsj1_13 0.0 3.0 0.0 3.0)

Executing: dfwn_c16c_s0 = geomGrow(dfwnsj1_16c 0.0 3.0 0.0 3.0)

Executing: dfwn_c7_s = geomAnd(dfwn_c7_s0 sjnp)

Executing: dfwn_c10_s = geomAnd(dfwn_c10_s0 sjnp)

Executing: dfwn_c13_s = geomAnd(dfwn_c13_s0 sjnp)

Executing: dfwn_c16_s = geomAnd(dfwn_c16c_s0 sjnp)

Executing: dfwp_c7_s0 = geomGrow(dfwpsj1_7 0.0 1.5 0.0 1.5)

Executing: dfwp_c10_s0 = geomGrow(dfwpsj1_10 0.0 3.0 0.0 3.0)

Executing: dfwp_c13_s0 = geomGrow(dfwpsj1_13 0.0 3.0 0.0 3.0)

Executing: dfwp_c16_s0 = geomGrow(dfwpsj1_16 0.0 4.5 0.0 4.5)

Executing: dfwp_c7_s = geomAnd(dfwp_c7_s0 sjpn)

Executing: dfwp_c10_s = geomAnd(dfwp_c10_s0 sjpn)

Executing: dfwp_c13_s = geomAnd(dfwp_c13_s0 sjpn)

Executing: dfwp_c16_s = geomAnd(dfwp_c16_s0 sjpn)

Executing: dfwn_c7_sa1 = geomGrow(dfwn_c7_s 1.5 0.0 1.5 0.0)

Executing: dfwn_c10_sa1 = geomGrow(dfwn_c10_s 1.5 0.0 1.5 0.0)

Executing: dfwn_c13_sa1 = geomGrow(dfwn_c13_s 1.5 0.0 1.5 0.0)

Executing: dfwn_c103_sa1 = geomOr(dfwn_c10_sa1 dfwn_c13_sa1)

Executing: dfwn_c16_sa1 = geomGrow(dfwn_c16_s 1.5 0.0 1.5 0.0)

Executing: dfwp_c7_sa1 = geomGrow(dfwp_c7_s 1.5 0.0 1.5 0.0)

Executing: dfwp_c10_sa1 = geomGrow(dfwp_c10_s 1.5 0.0 1.5 0.0)

Executing: dfwp_c13_sa1 = geomGrow(dfwp_c13_s 1.5 0.0 1.5 0.0)

Executing: dfwp_c103_sa1 = geomOr(dfwp_c10_sa1 dfwp_c13_sa1)

Executing: dfwp_c16_sa1 = geomGrow(dfwp_c16_s 1.5 0.0 1.5 0.0)

Executing: nhv1_dev7 = geomButting(nhv1_c7 nhsj1_7)

Executing: nhv1_dev10 = geomButting(nhv1_c10 nhsj1_10)

Executing: nhv1_dev13 = geomButting(nhv1_c13 nhsj1_13)

Executing: nhv1_dev16c = geomButting(nhv1_c16 nhsj1_16c)

Executing: nhv1_c7_s0 = geomGrow(nhv1_dev7 0.0 1.5 0.0 1.5)

Executing: nhv1_c10_s0 = geomGrow(nhv1_dev10 0.0 3.0 0.0 3.0)

Executing: nhv1_c13_s0 = geomGrow(nhv1_dev13 0.0 3.0 0.0 3.0)

Executing: nhv1_c16c_s0 = geomGrow(nhv1_dev16c 0.0 3.0 0.0 3.0)

Executing: nhv1_c7_s = geomAnd(nhv1_c7_s0 sjnp)

Executing: nhv1_c10_s = geomAnd(nhv1_c10_s0 sjnp)

Executing: nhv1_c13_s = geomAnd(nhv1_c13_s0 sjnp)

Executing: nhv1_c103_s = geomOr(nhv1_c10_s nhv1_c13_s)

Executing: nhv1_c16_s = geomAnd(nhv1_c16c_s0 sjnp)

Executing: nhv1_c7_sa1 = geomGrow(nhv1_c7_s 1.5 0.0 1.5 0.0)

Executing: nhv1_c10_sa1 = geomGrow(nhv1_c10_s 1.5 0.0 1.5 0.0)

Executing: nhv1_c13_sa1 = geomGrow(nhv1_c13_s 1.5 0.0 1.5 0.0)

Executing: nhv1_c103_sa1 = geomOr(nhv1_c10_sa1 nhv1_c13_sa1)

Executing: nhv1_c16_sa1 = geomGrow(nhv1_c16_s 1.5 0.0 1.5 0.0)

Executing: nhsj1_7_s1 = geomGrow(nhsj1_7 0.0 2.0 0.0 2.0)

Executing: nhsj1_10_s1 = geomGrow(geomOr(nhsj1_10 nhsj1_16c) 0.0 3.5 0.0 3.5)

Executing: nhsj1_ch1 = geomSize(geomGetEdge(geomOr(nhsj1_7_s1 nhsj1_10_s1) butting sjnp)...

Executing: nisj1_dev16 = geomOr(nisj1_c16 geomSize(geomButting(nisj1_16 nisj1_c16) 0.5))

Executing: nisj1_c16_s0 = geomGrow(nisj1_dev16 0.0 4.5 0.0 4.5)

Executing: nisj1_c16_s = geomAnd(nisj1_c16_s0 sjnp)

Executing: nisj1_c16_sa0 = geomSize(geomGetEdge(nisj1_c16_s butting nbuf) 7.0)

Executing: nisj1_c16_sa1 = geomOr(nisj1_c16_s nisj1_c16_sa0)

Executing: nisj1_16_s1 = geomGrow(nisj1_16 0.0 5 0.0 5)

Executing: nisj1_ch1 = geomSize(geomGetEdge(nisj1_16_s1 butting sjnp) 2.2)

Executing: nsj_ch1 = geomOr(nhsj1_ch1 nisj1_ch1)

Executing: nisj1_16_sjnp = geomAnd(nisj1_c16_sa1 sjnp)

Executing: nisj1_nbuf_f = geomAndNot(nisj1_c16_sa1 geomOr(nisj1_c16_s0 hvpwell))

Executing: nisj1_nbuf_edg = geomGetEdge(nisj1_nbuf_f butting nisj1_16_sjnp)

Executing: nisj1_nbuf_ex0 = geomOr(nisj1_nbuf_f geomSize(nisj1_nbuf_edg 4.0))

Executing: phv1_dev7 = geomOr(phv1_c7)

Executing: phv1_dev10 = geomOr(phv1_c10)

Executing: phv1_dev13 = geomOr(phv1_c13)

Executing: phv1_dev16 = geomOr(phv1_c16)

Executing: phv1_c7_s0 = geomGrow(phv1_dev7 0.0 1.5 0.0 1.5)

Executing: phv1_c10_s0 = geomGrow(phv1_dev10 0.0 3.0 0.0 3.0)

Executing: phv1_c13_s0 = geomGrow(phv1_dev13 0.0 3.0 0.0 3.0)

Executing: phv1_dev16c = geomButting(phv1_dev16 phsj1_16c)

Executing: phv1_c16c_s0 = geomGrow(phv1_dev16c 0.0 3.0 0.0 3.0)

Executing: phv1_c16_s0 = geomGrow(geomAndNot(phv1_dev16 phv1_dev16c) 0.0 4.5 0.0 4.5)

Executing: phv1_c7_s = geomAnd(phv1_c7_s0 sjpn)

Executing: phv1_c10_s = geomAnd(phv1_c10_s0 sjpn)

Executing: phv1_c13_s = geomAnd(phv1_c13_s0 sjpn)

Executing: phv1_c16_s = geomAnd(geomOr(phv1_c16_s0 phv1_c16c_s0) sjpn)

Executing: phv1_c7_sa1 = geomGrow(phv1_c7_s 2.0 0.0 2.0 0.0)

Executing: phv1_c10_sa1 = geomGrow(phv1_c10_s 2.0 0.0 2.0 0.0)

Executing: phv1_c13_sa1 = geomGrow(phv1_c13_s 2.0 0.0 2.0 0.0)

Executing: phv1_c103_sa1 = geomOr(phv1_c10_sa1 phv1_c13_sa1)

Executing: phv1_c16_sa1 = geomGrow(phv1_c16_s 2.0 0.0 2.0 0.0)

Executing: dfwn1_sa = geomOr(dfwn_c7_sa1 dfwn_c103_sa1 dfwn_c16_sa1)

Executing: dfwp1_sa = geomOr(dfwp_c7_sa1 dfwp_c103_sa1 dfwp_c16_sa1)

Executing: nhv1_sjnp1_sa = geomOr(nhv1_c7_sa1 nhv1_c103_sa1 nhv1_c16_sa1)

Executing: phv1_sjpn1_sa = geomOr(phv1_c7_sa1 phv1_c103_sa1 phv1_c16_sa1)

Executing: hsj7_sjnp = geomInside(sjnp geomOr(nhv1_c7_sa1 dfwn_c7_sa1))

Executing: hsj103_sjnp = geomInside(sjnp geomOr(nhv1_c103_sa1 dfwn_c103_sa1))

Executing: hsj10_sjnp = geomInside(sjnp geomOr(nhv1_c10_sa1 dfwn_c10_sa1))

Executing: hsj10a_sjnp = geomEnclose(hsj10_sjnp geomOr(nhv1_8_5 dfwnsj_8_5))

Executing: hsj10b_sjnp = geomEnclose(hsj10_sjnp geomOr(nhv1_9 dfwnsj_9))

Executing: hsj10c_sjnp = geomEnclose(hsj10_sjnp geomOr(nhv1_9_5 dfwnsj_9_5))

Executing: hsj10d_sjnp = geomEnclose(hsj10_sjnp geomOr(nhv1_10 dfwnsj_10))

Executing: hsj13_sjnp = geomInside(sjnp geomOr(nhv1_c13_sa1 dfwn_c13_sa1))

Executing: hsj13a_sjnp = geomEnclose(hsj13_sjnp geomOr(nhv1_10_75 dfwnsj_10_75))

Executing: hsj13b_sjnp = geomEnclose(hsj13_sjnp geomOr(nhv1_11_5 dfwnsj_11_5))

Executing: hsj13c_sjnp = geomEnclose(hsj13_sjnp geomOr(nhv1_12_25 dfwnsj_12_25))

Executing: hsj13d_sjnp = geomEnclose(hsj13_sjnp geomOr(nhv1_13 dfwnsj_13))

Executing: hsj16_sjnp_1 = geomInside(sjnp geomOr(nhv1_c16_sa1 dfwn_c16_sa1))

Executing: hsj16_sjnp = geomOr(hsj16_sjnp_1 geomInside(sjnp nisj1_c16_sa1))

Executing: hsj16a_sjnp = geomEnclose(hsj16_sjnp geomOr(nhv1_14 dfwnsj_14))

Executing: hsj16b_sjnp = geomEnclose(hsj16_sjnp geomOr(nhv1_15 dfwnsj_15))

Executing: hsj16c_sjnp = geomOr(geomEnclose(hsj16_sjnp geomOr(nhv1_16 dfwnsj_16)) nisj1_...

Executing: hsj7_sjpn = geomInside(sjpn geomOr(phv1_c7_sa1 dfwp_c7_sa1))

Executing: hsj103_sjpn = geomInside(sjpn geomOr(phv1_c103_sa1 dfwp_c103_sa1))

Executing: hsj10_sjpn = geomInside(sjpn geomOr(phv1_c10_sa1 dfwp_c10_sa1))

Executing: hsj10a_sjpn = geomEnclose(hsj10_sjpn geomOr(phv1_8_5 dfwpsj_8_5))

Executing: hsj10b_sjpn = geomEnclose(hsj10_sjpn geomOr(phv1_9 dfwpsj_9))

Executing: hsj10c_sjpn = geomEnclose(hsj10_sjpn geomOr(phv1_9_5 dfwpsj_9_5))

Executing: hsj10d_sjpn = geomEnclose(hsj10_sjpn geomOr(phv1_10 dfwpsj_10))

Executing: hsj13_sjpn = geomInside(sjpn geomOr(phv1_c13_sa1 dfwp_c13_sa1))

Executing: hsj13a_sjpn = geomEnclose(hsj13_sjpn geomOr(phv1_10_75 dfwpsj_10_75))

Executing: hsj13b_sjpn = geomEnclose(hsj13_sjpn geomOr(phv1_11_5 dfwpsj_11_5))

Executing: hsj13c_sjpn = geomEnclose(hsj13_sjpn geomOr(phv1_12_25 dfwpsj_12_25))

Executing: hsj13d_sjpn = geomEnclose(hsj13_sjpn geomOr(phv1_13 dfwpsj_13))

Executing: hsj16_sjpn = geomInside(sjpn geomOr(phv1_c16_sa1 dfwp_c16_sa1))

Executing: hsj16a_sjpn = geomEnclose(hsj16_sjpn geomOr(phv1_14 dfwpsj_14))

Executing: hsj16b_sjpn = geomEnclose(hsj16_sjpn geomOr(phv1_15 dfwpsj_15))

Executing: hsj16c_sjpn = geomEnclose(hsj16_sjpn geomOr(phv1_16 dfwpsj_16))

Executing: dfwn1_h0 = geomGrow(dfwn1_sa 0.5 0.0 0.5 0.0)

Executing: nhv1_h0 = geomGrow(nhv1_sjnp1_sa 0.5 0.0 0.5 0.0)

Executing: phv1_h0 = geomGrow(geomOr(phv1_sjpn1_sa geomOverlap(hvnwell phv1_sjpn1_sa)) 0...

Executing: nisj_h0 = geomGrow(nisj1_c16_sa1 0.5 0.0 0.5 0.0)

Executing: dhw_all = geomOr(dhw2a dhw2 dhw3 dhw4)

Executing: dhw = geomAnd(hwntub dhw_all)

Executing: dnp7_s1 = geomSize(dnp7 1.44)

Executing: dpp7_s1 = geomSize(dpp7 1.44)

Executing: dpp6_61 = geomSize(geomGetEdge(dpp6 outside dti) 0.6)

Executing: dpp6_tub = geomOr(dpp6 dpp6_61 dpp6_5)

Executing: dpp6_tub_s1 = geomSize(dpp6_tub 0.5)

Executing: qnv5_nwell = geomAndNot(qnv5 geomSize(qnv5 -0.1))

Executing: rxw2ti_1 = geomOr(geomSize(geomGetEdge(rxw2ti coincident nwell) 1.1) rxw2ti)

Executing: rxw2ti_nw = geomOverlap(nwell rxw2ti)

Executing: dzb_tub = geomEnclose(tub dzb)

Executing: dzb_ed1 = geomGetEdge(dzb outside dti)

Executing: dzb_ex4 = geomOr(dzb geomSize(dzb_ed1 0.2))

Executing: dzb_ex2 = geomOr(dzb5 dzb)

Executing: dzb_ex2_s1 = geomOr(dzb_ex2 geomSize(geomGetEdge(dzb_ex2 coincident dzb_tub) ...

Executing: dzb_ex42 = geomAndNot(dzb_ex2_s1 dzb_ex4)

Executing: dzb_ex3 = geomOr(dzb geomSize(geomGetEdge(dzb coincident dzb_tub) 0.5))

Executing: pdifx = geomAndNot(pdif tiedtub)

Executing: ndifx = geomAndNot(ndif tiedtub)

Executing: actx = geomAndNot(act tiedtub)

Executing: err_B1HW = geomAnd(hwtub subblk)
	   errorLayer(err_B1HW "B1HW : HWTUB overlap of SUBBLK is not allowed")

Executing: err_B2HW = geomAnd(hwptub nwell)
	   errorLayer(err_B2HW "B2HW : NWELL overlap of HWPTUB is not allowed")

Executing: err_B3HW = geomAnd(geomEnclose(hwtub hwntub) geomEnclose(hwtub hwptub))
	   errorLayer(err_B3HW "B3HW : HWNTUB and HWPTUB in one HWTUB is not allowed")

Executing: err_B4HW = geomAndNot(hwntub nimp)
	   errorLayer(err_B4HW "B4HW : HWNTUB without NIMP is not allowed")

Executing: err_B5HW = geomAndNot(hwptub pimp)
	   errorLayer(err_B5HW "B5HW : HWPTUB without PIMP is not allowed")

Executing: err_B6HW = geomAnd(hwc geomOr(cont pwblk poly dti nbuf depl lvt))
	   errorLayer(err_B6HW "B6HW : HWC overlap of CONT, PWBLK, POLY1, DTI, NBUF, DEPL or LVT is not allowed ")

Executing: err_B7HW = geomAndNot(hwc diff)
	   errorLayer(err_B7HW "B7HW : HWC without DIFF is not allowed")

Executing: err_B8HW = geomAndNot(hwc tub)
	   errorLayer(err_B8HW "B8HW : HWC without TUB is not allowed")

Executing: err_W1HWa = drc(hwc (width < 1.5))
	   errorLayer(err_W1HWa "W1HW : Fixed HWC width = 1.5")

Executing: err_W1HWb = geomWidth(hwc (keep > 1.5))
	   errorLayer(err_W1HWb "W1HW : Fixed HWC width = 1.5")

Executing: err_W2HWa = drc(hwc (area < 7.5))

Executing: err_W2HWb = geomStraddle(hwc geomSize(geomGetLength(hwc ((1.5 < keep) < 5.0))...

Executing: err_W2HW = geomOr(err_W2HWa err_W2HWb)
	   errorLayer(err_W2HW "W2HW : Minimum HWC edge length = 5.0")

Executing: err_S1HW = drc(hwc (sepNotch < 6.5))
	   errorLayer(err_S1HW "S1HW : Minimum HWC spacing/notch = 6.5")

Executing: err_E1DFHW = drc(diff hwc (enc < 3.0))
	   errorLayer(err_E1DFHW "E1DFHW : Minimum DIFF enclosure of HWC = 3.0")

Executing: err_B9HW = geomAnd(hwc hwafer_bs)
	   errorLayer(err_B9HW "B9HW : HWC overlap of Handle wafer marked bei HWC (VERIFICATION) is not allowed")

Executing: bkgnd_hwc = geomOverlap(bkgnd hwc)

Executing: err_B10HW = geomAnd(bkgnd_hwc geomOverlap(bkgnd geomOr(ndf pdf pbase nbase)))
	   errorLayer(err_B10HW "B10HW : When HWC module is used the following layers are not allowed: NDF, PDF, PBASE and NBASE")

Executing: err_B4DF = geomAnd(bkgnd_hwc geomOverlap(bkgnd geomOr(dfwdnut qpv5 qnv5)))
	   errorLayer(err_B4DF "B4DF : When HWC module is used the following devices are not allowed: dfwdnt, dfwdnu, qpv5 and qnv5")

Executing: err_B4GA = geomAnd(bkgnd_hwc geomOverlap(bkgnd geomOr(nhvtu_all ndhvt_all phv...
	   errorLayer(err_B4GA "B4GA : When HWC module is used the following devices are not allowed: nhvta,nhvtb,nhvu,ndhvta,ndhvt,phvta,phvtb and phvu")

Executing: phsj_hvnw = geomAndNot(geomOverlap(hvnwell phv1_sjpn1_sa) geomAnd(subblk phv1...

Executing: phsj_hvnw_s = geomGrow(phsj_hvnw 0.2 0.0 0.2 0.0)

Executing: err_B1NC = geomAndNot(geomAndNot(dnc phsj_hvnw_s) geomOr(geomSize(dfwdp_tub 0...
	   errorLayer(err_B1NC "B1NC : DNC is only allowed for dfwdpa, phsj1_#, dpp6, dpp7")

Executing: err_B2NC = geomAndNot(dnc nwell)
	   errorLayer(err_B2NC "B2NC : DNC without NWELL is not allowed")

Executing: err_B3NC = geomAnd(dnc nwres)
	   errorLayer(err_B3NC "B3NC : NW_VERIFY overlap of DNC is not allowed")

Executing: drc(dnc (width < 0.86) "W1NC : Minimum DNC width = 0.86")

Executing: drc(dnc (sepNotch < 0.6) "S1NC : Minimum DNC spacing/notch = 0.6")

Executing: nhjs_hvpw = geomAndNot(geomOverlap(hvpwell nhv1_sjnp1_sa) geomAnd(subblk nhv1...

Executing: nhjs_hvpw_s = geomGrow(nhjs_hvpw -0.2 0.0 -0.2 0.0)

Executing: nijs_hvpw = geomAndNot(geomOverlap(hvpwell nisj1_c16_s0) geomAnd(subblk nisj1...

Executing: nijs_hvpw_s = geomGrow(nijs_hvpw -0.2 0.0 -0.2 0.0)

Executing: err_B1PC = geomAndNot(dpc geomOr(nhjs_hvpw_s dnp7_s1 nijs_hvpw_s dpc_esd))
	   errorLayer(err_B1PC "B1PC : DPC is only allowed for nhsj1_#, dnp7, nisj1_16")

Executing: err_B2PC = geomStraddle(dpc mv)
	   errorLayer(err_B2PC "B2PC : DPC crossing MV edge is not allowed")

Executing: err_B3PC = geomAnd(dpc geomOr(pwblk nwell))
	   errorLayer(err_B3PC "B3PC : DPC overlap of NWELL or PWBLK is not allowed")

Executing: drc(dpc (width < 0.6) "W1PC : Minimum DPC width = 0.6")

Executing: drc(dpc (sepNotch < 0.6) "S1PC : Minimum DPC spacing/notch = 0.6")

Executing: drc(dpc nwell (sep < 1.0) "S1PCNW : Minimum DPC spacing to NWELL = 1.0")

Executing: err_B1DT = geomAndNot(dti dti_ring)
	   errorLayer(err_B1DT "B1DT : DTI must form closed rings")

Executing: err_B4DT = geomGetNon90(dti)
	   errorLayer(err_B4DT "B4DT : DTI corner is 90 degree")

Executing: err_W1DTa = drc(dti (width < 1.0))
	   errorLayer(err_W1DTa "W1DT : Fixed DTI width = 1.0")

Executing: err_W1DTb = geomWidth(dti (keep > 1.0))
	   errorLayer(err_W1DTb "W1DT : Fixed DTI width = 1.0")

Executing: foxdti_edge = geomGetEdge(foxdti outside diff)

Executing: err_W2DTa = geomSize(geomGetEdge(foxdti outside diff) 0.005)

Executing: err_W2DTb = geomSize(geomGetEdge(foxdti butting diff) 0.005)

Executing: err_W2DT = geomAnd(drc(err_W2DTa err_W2DTb ((0.0 < sep) < 0.5)) foxdti)
	   errorLayer(err_W2DT "W2DT : Minimum FOXDTI width = 0.5")

Executing: err_S1DT = drc(diffdti dti (sep < 0.5))
	   errorLayer(err_S1DT "S1DT : Minimum DIFFDTI spacing to DTI = 0.5")

Executing: err_S2DT = drc(foxdti_edge dti (sep < 1.0))
	   errorLayer(err_S2DT "S2DT : Minimum FOXDTI spacing to DTI = 1.0")

Executing: err_S1DTHW = drc(dti hwc (sep < 4.0))
	   errorLayer(err_S1DTHW "S1DTHW : Minimum DTI spacing to HWC = 4.0")

Executing: diffdti_1 = geomWidth(diffdti (keep > 0.995))

Executing: diffdti_corner_a = geomGetCorner(diffdti_1 manhattanOnly)

Executing: diffdti_corner = geomInside(geomGetCorner(diffdti_1 manhattanOnly) diffdti)

Executing: diffdti_corner0 = geomAnd(geomGrowCorner(diffdti_corner 1.0 manhattanOnly) di...

Executing: diffdti_corner00 = geomWidth(diffdti_corner0 (keep > 0.995))

Executing: diffdti_corner01 = geomGetRectangle(diffdti_corner00 (length == 1) (width == 1))

Executing: diffdti_corner1 = geomGrowCorner(diffdti_corner_a 0.5 manhattanOnly)

Executing: diffdti_corner2 = geomAnd(diffdti_1 diffdti_corner1)

Executing: diffdti_corner3 = geomEnclose(diffdti_corner01 diffdti_corner2 (keep == 2))

Executing: diffdti_hole_10 = geomSize(geomGetRectangle(diffdti_hole (length <= 0.5) (wid...

Executing: err_B1DTDC = geomOutside(diffdti_corner3 diffdti_hole_10)
	   errorLayer(err_B1DTDC "B1DTDC : 90 degree DIFFDTI corner (width > 0.5) is not allowed")

Executing: err_B1NW = geomAnd(geomAndNot(nwres geomOr(rnw1_scr rxw)) diff)
	   errorLayer(err_B1NW "B1NW : NW_VERIFY overlap of DIFF is not allowed")

Executing: err_B8NW = geomAnd(nwres dti)
	   errorLayer(err_B8NW "B8NW : NW_VERIFY overlap of DTI is not allowed")

Executing: err_W1NW = drc(nwell (width < 0.86))
	   errorLayer(err_W1NW "W1NW : Minimum NWELL width = 0.86")

Executing: drc(nwell (sepNotch < 0.6) "S1NW : Minimum NWELL spacing/notch = 0.6")

Executing: err_S2NWa = drc(nwtrm1 (sep < 1.4) diffNet)

Executing: err_S2NWaa = drc(pfuse_nw geomAndNot(nwell pfuse_nw) (sep < 1.4))

Executing: err_S2NW_a = geomOr(err_S2NWaa geomAndNot(err_S2NWa rnw1))

Executing: err_S2NW = geomAndNot(err_S2NW_a geomOverlap(err_S2NW_a dti))
	   errorLayer(err_S2NW "S2NW : Minimum NWELL spacing (different net) = 1.4")

Executing: err_S2NWres_a = drc(rnw1 nwell ((0.0 < sep) < 1.4))

Executing: err_S2NWres = geomAndNot(err_S2NWres_a geomOverlap(err_S2NWres_a dti))
	   errorLayer(err_S2NWres "S2NW : Minimum NWELL spacing (different net) = 1.4")

Executing: nwtrmmv = geomAnd(nwtrm mv)

Executing: geomStamp(nwtrmmv nwtrm)

Executing: err_S3NWa = drc(nwtrmmv nwtrm1 (sep < 2.0) diffNet)

Executing: err_S3NWaa = drc(pfuse_nw nwtrmmv (sep < 2.0))

Executing: err_S3NW_a = geomOr(err_S3NWaa geomAndNot(err_S3NWa rnw1))

Executing: err_S3NW = geomAndNot(err_S3NW_a geomOverlap(err_S3NW_a dti))
	   errorLayer(err_S3NW "S3NW : Minimum (NWELL AND MV) spacing to NWELL (different net) = 2.0")

Executing: rnw1mv = geomAnd(rnw1 mv)

Executing: err_S3NWres_a = drc(rnw1mv nwell ((0.0 < sep) < 2.0))

Executing: err_S3NWres = geomAndNot(err_S3NWres_a geomOverlap(err_S3NWres_a dti))
	   errorLayer(err_S3NWres "S3NW : Minimum NWELL spacing (different net) = 2.0")

Executing: err_A1NW = drc(nwell (area < 1.0))
	   errorLayer(err_A1NW "A1NW : Minimum NWELL area = 1.0")

Executing: tub_fl2 = geomEmpty()

Executing: nwell13 = geomAndNot(nwell mv)

Executing: nwell1m = geomOr(geomAndNot(nwell13 lvt) dnc)

Executing: nwell1 = geomAndNot(geomOr(geomAndNot(nwell13 lvt) dnc) dti_all)

Executing: nwell2m = geomOr(geomAnd(nwell mv) dnc)

Executing: nwell2 = geomAndNot(geomOr(geomAnd(nwell mv) dnc) dti_all)

Executing: nwell3m = geomAnd(geomOr(nwell13 dnc) lvt)

Executing: nwell3 = geomAndNot(geomAnd(geomOr(nwell13 dnc) lvt) dti_all)

Executing: pwell13 = geomAndNot(psub mv)

Executing: pwell1 = geomAndNot(geomOr(geomAndNot(pwell13 lvt) dpc) dti_all)

Executing: pwell2 = geomAndNot(geomOr(geomAnd(psub mv) dpc) dti_all)

Executing: pwell3 = geomAndNot(geomAnd(geomOr(pwell13 dpc) lvt) dti_all)

Executing: err_W1W7 = drc(nwell1 (width < 0.5))
	   errorLayer(err_W1W7 "W1W7 : Minimum NWELL1_E width = 0.5")

Executing: err_W1W8 = drc(pwell1 (width < 0.5))
	   errorLayer(err_W1W8 "W1W8 : Minimum PWELL1_E width = 0.5")

Executing: err_W1W9 = drc(nwell2 (width < 0.5))
	   errorLayer(err_W1W9 "W1W9 : Minimum NWELL2_E width = 0.5")

Executing: err_W1W10 = geomAndNot(drc(pwell2 (width < 0.5)) tub_fl2)
	   errorLayer(err_W1W10 "W1W10 : Minimum PWELL2_E width = 0.5")

Executing: err_W1W11 = drc(nwell3 (width < 0.5))
	   errorLayer(err_W1W11 "W1W11 : Minimum NWELL3_E width = 0.5")

Executing: err_W1W12 = drc(pwell3 (width < 0.5))
	   errorLayer(err_W1W12 "W1W12 : Minimum PWELL3_E width = 0.5")

Executing: psub_m = geomAndNot(bkgnd n_psub)

Executing: pwell13m = geomAndNot(psub_m mv)

Executing: pwell1m = geomOr(geomAndNot(pwell13m lvt) dpc)

Executing: pwell2m = geomOr(geomAnd(psub_m mv) dpc)

Executing: pwell3m = geomAnd(geomOr(pwell13m dpc) lvt)

Executing: err_W1W1m = drc(nwell1m (width < 0.86))
	   errorLayer(err_W1W1m "W1W1  : Minimum NWELL1 width = 0.86")

Executing: err_W1W2m = drc(pwell1m (width < 0.6))
	   errorLayer(err_W1W2m "W1W2  : Minimum PWELL1 width = 0.6")

Executing: err_W1W3m = drc(nwell2m (width < 0.86))
	   errorLayer(err_W1W3m "W1W3  : Minimum NWELL2 width = 0.86")

Executing: err_W1W4m = drc(pwell2m (width < 0.6))
	   errorLayer(err_W1W4m "W1W4  : Minimum PWELL2 width = 0.6")

Executing: err_W1W5m = drc(nwell3m (width < 0.86))
	   errorLayer(err_W1W5m "W1W5  : Minimum NWELL3 width = 0.86")

Executing: err_W1W6m = drc(pwell3m (width < 0.6))
	   errorLayer(err_W1W6m "W1W6  : Minimum PWELL3 width = 0.6")

Executing: err_B2PB = geomAnd(pwblk nwell)
	   errorLayer(err_B2PB "B2PB : PWBLK overlap of NWELL is not allowed")

Executing: pwblk_phvtu = geomAnd(pwblk tub2_pxta1)

Executing: pwblk_nhvtu = geomAnd(pwblk tub2_nxta)

Executing: pwblk_nhvtu_1 = geomAnd(pwblk tub_nxta)

Executing: pwblk_nhvtu_2 = geomOr(pwblk_nhvtu_1 geomAnd(geomSize(geomGetEdge(pwblk_nhvtu...

Executing: err_B3PB = geomAndNot(geomAnd(geomAndNot(pwblk geomOr(sjpn nbuf dti)) pimp) g...
	   errorLayer(err_B3PB "B3PB : PWBLK overlap of PIMP is not allowed")

Executing: err_B4PB = geomStraddle(act geomAndNot(pwblk geomOr(sj nbuf pwblk_phvtu pwblk...
	   errorLayer(err_B4PB "B4PB : ACTIVE crossing PWBLK edge is not allowed")

Executing: pwblk_ck = geomAndNot(geomAndNot(pwblk nsj_ch1) geomOr(pwblk_nhvtu pwblk_phvtu))

Executing: pwblk_nd = geomStraddle(pwblk_ck ndif)

Executing: nd_pwblk = geomAnd(ndif pwblk_nd)

Executing: nd_pwbl1 = geomAnd(pwblk_ck ndif)

Executing: err_B6PBa = geomGetNonRectangle(nd_pwblk)
	   errorLayer(err_B6PBa "B6PB : Only a single rectangular NDIFF inside PWBLK is allowed")

Executing: err_B6PBb = geomStraddle(pwblk_nd nd_pwblk (keep > 1))
	   errorLayer(err_B6PBb "B6PB : Only a single rectangular NDIFF inside PWBLK is allowed")

Executing: err_W1PB = drc(pwblk (width < 0.6))
	   errorLayer(err_W1PB "W1PB : Minimum PWBLK width = 0.6")

Executing: err_S1PB = drc(geomAndNot(pwblk pwblk_nhvtu_2) (sepNotch < 0.86))
	   errorLayer(err_S1PB "S1PB : Minimum PWBLK spacing/notch = 0.86")

Executing: err_S1PBb = drc(geomAndNot(pwblk pwblk_nhvtu_2) pwblk_nhvtu_2 ((0 < sep) < 0....
	   errorLayer(err_S1PBb "S1PB : Minimum PWBLK spacing/notch = 0.86")

Executing: err_S2PB = drc(pwblk_nhvtu_2 (sepNotch < 0.6))
	   errorLayer(err_S2PB "S2PB : Minimum PWBLK spacing/notch = 0.6")

Executing: drc(pwblk ndif (enc < 0.12) "E1PBDN : Fixed PWBLK enclosure of NDIFF = 0.12")

Executing: nd_pwbl2 = geomSize(nd_pwbl1 0.12)

Executing: err_E1PBDNa = geomGetEdge(nd_pwbl2 inside pwblk_ck)
	   errorLayer(err_E1PBDNa "E1PBDN : Fixed PWBLK enclosure of NDIFF = 0.12")

Executing: drc(geomAndNot(pwblk geomOr(dti sjnp)) ndif (sep < 0.12) "S1PBDN : Minimum PW...

Executing: drc(geomAnd(pwblk geomOr(dti sjnp)) ndif ((0 < sep) < 0.12) "S1PBDN : Minimum...

Executing: err_S1PBNWa = drc(geomAndNot(pwblk geomOr(sj dti)) geomAndNot(nwell geomOr(tu...
	   errorLayer(err_S1PBNWa "S1PBNW : Minimum PWBLK spacing to NWELL = 0.86")

Executing: err_S1PBNWaa = drc(geomAnd(pwblk geomOr(sj dti)) nwell ((0 < sep) < 0.86))
	   errorLayer(err_S1PBNWaa "S1PBNW : Minimum PWBLK spacing to NWELL = 0.86")

Executing: nwellsjnp = geomButtOnly(geomOr(geomButtOnly(sjnp nhv1_all) geomEnclose(sjnp ...

Executing: nwellsjpn = geomButtOnly(geomButtOnly(sjpn phv1_all) nwell)

Executing: nwellsj = geomOr(nwellsjnp nwellsjpn)

Executing: act_dr3 = geomAnd(act geomOr(geomOr(rnw1_scr rxw2ti_1 d_dsdf ds5_g) geomAnd(s...

Executing: err_B1DFa = geomAndNot(geomAndNot(act_dg geomOr(nwellsj act_dr3 nisj1_c16_sa1...

Executing: err_B1DF = geomAndNot(err_B1DFa geomOr(dpp6_61 dzb_ex42))
	   errorLayer(err_B1DF "B1DF : ACTIVE without NIMP or PIMP is not allowed")

Executing: act_nscr = geomAndNot(act geomButtOnly(ndif rnw4_scr))

Executing: err_B3DF = geomStraddle(geomAndNot(act_nscr geomOr(nwellsj mva_gate phvtu_all...
	   errorLayer(err_B3DF "B3DF : ACTIVE crossing NWELL edge is not allowed")

Executing: err_W1DF = drc(diff (width < 0.22))
	   errorLayer(err_W1DF "W1DF : Minimum DIFF width = 0.22")

Executing: err_W2DF = geomSize(geomGetLength(geomGetEdge(ndiff butting pdiff) (keep < 0....
	   errorLayer(err_W2DF "W2DF : Minimum length of coincident NDIFF/PDIFF path edge = 0.42")

Executing: drc(diff (sepNotch < 0.28) "S1DF : Minimum DIFF spacing/notch = 0.28")

Executing: drc(nwell geomAndNot(pdif tiedtub) (enc < 0.43) "E1NWDP : Minimum NWELL enclo...

Executing: drc(nwell ndif (sep < 0.43) "S1DNNW : Minimum NDIFF spacing to NWELL = 0.43")

Executing: err_E1NWDN = drc(nwell ndif ((0 < enc) < 0.12))
	   errorLayer(err_E1NWDN "E1NWDN : Minimum NWELL enclosure of NDIFF = 0.12")

Executing: err_E1NWDNa = geomAndNot(geomSize(geomGetEdge(nwell coincident ndif) 0.001) g...
	   errorLayer(err_E1NWDNa "E1NWDN : Minimum NWELL enclosure of NDIFF = 0.12")

Executing: drc(nwell pdif (sep < 0.12) "S1DPNW : Minimum PDIFF spacing to NWELL = 0.12")

Executing: err_S2DF = drc(geomAnd(ndif nwell) geomAndNot(pdif nwell) (sep < 0.36))
	   errorLayer(err_S2DF "S2DF : Minimum NDIFF in NWELL spacing to PDIFF in PWELL = 0.36")

Executing: drc(act (area < 0.202) "A1DF : Minimum ACTIVE area = 0.202")

Executing: err_S1DFDT = drc(diff dti (sep < 0.5))
	   errorLayer(err_S1DFDT "S1DFDT : Minimum DIFF spacing to DTI = 0.5")

Executing: err_O1DFDT = drc(diff dti (ovlp < 0.5))
	   errorLayer(err_O1DFDT "O1DFDT : Minimum DIFF overlap of DTI = 0.5")

Executing: err_E1DFHW = drc(diff hwc (enc < 3.0))
	   errorLayer(err_E1DFHW "E1DFHW : Minimum DIFF enclosure of HWC = 3.0")

Executing: err_E1DFDT = drc(diff dti (enc < 0.5))
	   errorLayer(err_E1DFDT "E1DFDT : Minimum DIFF extension beyond DTI = 0.5")

Executing: drc(mv (width < 0.6) "W1MV : Minimum MV width = 0.6")

Executing: drc(mv (sepNotch < 0.86) "S1MV : Minimum MV spacing/notch = 0.86")

Executing: drc(mv act_dg (enc < 0.32) "E1MVDF : Minimum MV enclosure of ACTIVE = 0.32")

Executing: drc(mv act_dg (sep < 0.32) "S1MVDF : Minimum MV spacing to ACTIVE = 0.32")

Executing: drc(mv gate (enc < 0.4) "E1MVGA : Minimum MV enclosure of GATE = 0.4")

Executing: drc(mv gate (sep < 0.4) "S1MVGA : Minimum MV spacing to GATE = 0.4")

Executing: err_B1MV = geomStraddle(act_dg mv)
	   errorLayer(err_B1MV "B1MV : ACTIVE crossing MV edge is not allowed")

Executing: err_B2MV = geomStraddle(nwres mv)
	   errorLayer(err_B2MV "B2MV : NW_VERIFY crossing MV edge is not allowed")

Executing: drc(mv dti ((0.0 < sep) < 0.7) "S1MVDT : Minimum MV spacing to DTI = 0.7")

Executing: err_W1P1 = drc(poly (width < 0.18))
	   errorLayer(err_W1P1 "W1P1 : Minimum POLY1 width = 0.18")

Executing: gate45 = geomGetAngledEdge(gate (keep == 45) fig)

Executing: gate45p = drc(gate45 (width < 0.21) opposite parallel)

Executing: err_W2P1 = geomGetAngledEdge(gate45p (keep == 45) fig)
	   errorLayer(err_W2P1 "W2P1 : Minimum POLY1 width (for 45 degree bent GATE) = 0.21")

Executing: drc(poly (sepNotch < 0.25) "S1P1 : Minimum POLY1 spacing/notch = 0.25")

Executing: drc(poly act (sep < 0.1) "S1P1DF : Minimum POLY1 spacing to ACTIVE = 0.1")

Executing: ngate_ch1 = geomGetEdge(nmva2_all inside nwell)

Executing: ngate_ch2 = geomGetLength(ngate_ch1 (keep >= 0.76))

Executing: ngate_ch3 = geomSize(ngate_ch2 -0.02)

Executing: pgate_ch1 = geomGetEdge(pmva2 outside nwell)

Executing: pgate_ch2 = geomGetLength(pgate_ch1 (keep >= 0.76))

Executing: pgate_ch3 = geomSize(pgate_ch2 -0.02)

Executing: gate_ch3 = geomOr(ngate_ch3 pgate_ch3)

Executing: err_E1P1GA = drc(poly geomAndNot(act gate_ch3) (enc < 0.22) shielded)
	   errorLayer(err_E1P1GA "E1P1GA : Minimum POLY1 extension beyond GATE = 0.22")

Executing: err_E1DFGA = drc(geomAndNot(diff dti) poly (enc < 0.32) shielded)
	   errorLayer(err_E1DFGA "E1DFGA : Minimum DIFF extension beyond GATE = 0.32")

Executing: err_B1GA_1 = geomSize(geomButtOrCoin(geomGetCorner(poly (keep == 90) (increme...

Executing: gate_B1GA = geomAndNot(gate0 hvgate2)

Executing: err_B1GA_2 = geomSize(geomButtOrCoin(geomGetCorner(diff (keep == 90) (increme...

Executing: err_B1GA = geomOr(err_B1GA_1 err_B1GA_2)
	   errorLayer(err_B1GA "B1GA : 90 degree bent GATE is not allowed")

Executing: err_B2GA = geomAndNot(gate0 geomOr(ne pe10 peti nem1 pem10a nel pel0 nds5i ne...
	   errorLayer(err_B2GA "B2GA : Illegal GATE construct")

Executing: err_B2GA_1 = geomOr(nds5i ne5m)
	   errorLayer(err_B2GA_1 "B2GA : Illegal GATE construct")

Executing: b1p1_1 = geomAndNot(geomAnd(poly sblk) geomOr(hres mres))

Executing: b1p1_2 = geomOr(geomInside(b1p1_1 nimp) geomInside(b1p1_1 pimp))

Executing: err_B1P1 = geomAndNot(b1p1_1 b1p1_2)
	   errorLayer(err_B1P1 "B1P1 : (POLY1 and SBLK and not (HRES or MRES)) without NIMP or PIMP is not allowed")

Executing: err_B3P1 = geomAnd(poly diffdti)
	   errorLayer(err_B3P1 "B3P1 : POLY1 overlap of DIFFDTI is not allowed")

Executing: drc(gate dti (sep < 0.5) "S1GADT : Minimum GATE spacing to DTI = 0.5")

Executing: err_A1P1 = drc(poly (area < 0.118))
	   errorLayer(err_A1P1 "A1P1 : Minimum POLY1 area = 0.118")

Executing: err_W1SB = drc(sblk (width < 0.43))
	   errorLayer(err_W1SB "W1SB : Minimum SBLK width = 0.43")

Executing: drc(sblk (sepNotch < 0.43) "S1SB : Minimum SBLK spacing/notch = 0.43")

Executing: drc(sblk diff (sep < 0.22) "S1SBDF : Minimum SBLK spacing to DIFF = 0.22")

Executing: drc(sblk act (enc < 0.22) "E1SBDF : Minimum SBLK extension beyond ACTIVE = 0....

Executing: drc(poly sblk (sep < 0.3) "S1SBP1 : Minimum SBLK spacing to POLY1 = 0.3")

Executing: drc(sblk poly (enc < 0.22) "E1SBP1 : Minimum SBLK extension beyond POLY1 = 0....

Executing: drc(sblk gate (sep < 0.45) "S1SBGA : Minimum SBLK spacing to GATE = 0.45")

Executing: drc(sblk gate (ovlp < 0.05) "O1SBGA : Minimum SBLK overlap of GATE = 0.05")

Executing: drc(sblk cont (sep < 0.22) "S1SBCT : Minimum SBLK spacing to CONT = 0.22")

Executing: drc(act sblk (enc < 0.22) "E1DFSB : Minimum ACTIVE extension beyond SBLK = 0....

Executing: drc(sblk (area < 2.0) "A1SB : Minimum SBLK area = 2.0")

Executing: drc(sblk dti ((0.0 < sep) < 0.6) "S1SBDT : Minimum SBLK spacing to DTI = 0.6")

Executing: hvsj_sa = geomOr(dfwn1_sa dfwp1_sa nhv1_sjnp1_sa phv1_sjpn1_sa)

Executing: err_B1SA = geomAndNot(salicide geomAndNot(diffdti_mring dti))
	   errorLayer(err_B1SA "B1SA : SALICIDE is only allowed inside TUB between multiple DIFFDTI rings")

Executing: err_B3SA = geomAndNot(salicide diff)
	   errorLayer(err_B3SA "B3SA : SALICIDE without DIFF is not allowed")

Executing: err_B2SA = geomAndNot(salicide geomStraddle(salicide diffcon))
	   errorLayer(err_B2SA "B2SA : SALICIDE must connect to DIFFCON")

Executing: err_W1SA = drc(salicide (width < 0.5))
	   errorLayer(err_W1SA "W1SA : Minimum SALICIDE width = 0.5")

Executing: err_S1SA = drc(salicide (sepNotch < 0.43))
	   errorLayer(err_S1SA "S1SA : Minimum SALICIDE spacing/notch = 0.43")

Executing: err_W1INa = drc(nimp (width < 0.44))

Executing: err_W1IN = geomAndNot(err_W1INa tub2_pxta1)
	   errorLayer(err_W1IN "W1IN : Minimum NIMP width = 0.44")

Executing: err_S1IN = drc(geomAndNot(nimp tub2_nxta1) (sepNotch < 0.44))
	   errorLayer(err_S1IN "S1IN : Minimum NIMP spacing/notch = 0.44")

Executing: ndif_ex2 = geomOr(geomOr(nimp geomAnd(geomSize(geomAnd(ndifx nwell) 0.18) nwe...

Executing: err_E1INDF = drc(ndif_ex2 ndif_ex1 ((0 < enc) < 0.18))
	   errorLayer(err_E1INDF "E1INDF : Minimum NIMP extension beyond ACTIVE = 0.18")

Executing: err_E1INDFa = geomGetEdge(ndif_ex2 coincident ndif_ex1)
	   errorLayer(err_E1INDFa "E1INDF : Minimum NIMP extension beyond ACTIVE = 0.18")

Executing: err_E2INDFaa = drc(nimp act ((0 < enc) < 0.02) withSingularPoint)

Executing: err_E2INDFab = drc(geomGetNonRectangle(err_E2INDFaa) (area == 0.0002))

Executing: err_E2INDFac = geomOr(geomButtOnly(err_E2INDFab dti) geomOverlap(err_E2INDFab...

Executing: err_E2INDFa = geomAndNot(err_E2INDFaa err_E2INDFac)

Executing: err_E2INDFb = geomSize(geomGetEdge(nimp outside diffdti coincident act) 0.001)

Executing: err_E2INDF = geomOr(err_E2INDFa err_E2INDFb)
	   errorLayer(err_E2INDF "E2INDF : Minimum NIMP extension beyond ACTIVE (in NWELL) = 0.02")

Executing: drc(nimp ndif (ovlp < 0.23) oppositeB "O1INDF : Minimum ACTIVE overlap of NIM...

Executing: drc(ndif gate_edge1 (enc < 0.32) "E1DNP1 : Minimum NDIFF extension beyond POL...

Executing: err_S1INDP = drc(nimp pdif ((0.0 < sep) < 0.1) shielded)
	   errorLayer(err_S1INDP "S1INDP : Minimum NIMP spacing to PDIFF = 0.1")

Executing: err_S2INDP = drc(geomAnd(geomAndNot(pdif geomOr(pmhsj_s dfwdp)) nwell) nimp (...
	   errorLayer(err_S2INDP "S2INDP : Minimum NIMP spacing to PDIFF (in NWELL) = 0.26")

Executing: err_S3INDP = drc(geomGetEdge(geomAnd(pdif geomAndNot(nwell43o nwell)) coincid...
	   errorLayer(err_S3INDP "S3INDP : Minimum NIMP spacing to PDIFF = 0.18")

Executing: drc(nimp ngate_edge1 (enc < 0.35) "E1INDN : Minimum NIMP extension beyond POL...

Executing: drc(nimp (area < 0.3844) "A1IN : Minimum NIMP area = 0.3844")

Executing: err_B1IPIN = geomAnd(nimp pimp)
	   errorLayer(err_B1IPIN "B1IPIN : PIMP overlap of NIMP is not allowed")

Executing: err_W1IPa = drc(pimp (width < 0.44))

Executing: err_W1IP = geomAndNot(err_W1IPa tub2_nxta1)
	   errorLayer(err_W1IP "W1IP : Minimum PIMP width = 0.44")

Executing: err_S1IP = drc(geomAndNot(pimp tub2_pxta1) (sepNotch < 0.44))
	   errorLayer(err_S1IP "S1IP : Minimum PIMP spacing/notch = 0.44")

Executing: pdif_ex2 = geomOr(pimp geomAndNot(geomSize(geomAndNot(pdifx nwell) 0.18) nwel...

Executing: err_E1IPDF = drc(pdif_ex2 pdif_ex1 ((0 < enc) < 0.18))
	   errorLayer(err_E1IPDF "E1IPDF : Minimum PIMP extension beyond ACTIVE = 0.18")

Executing: err_E1IPDFa = geomGetEdge(pdif_ex2 coincident pdif_ex1)
	   errorLayer(err_E1IPDFa "E1IPDF : Minimum PIMP extension beyond ACTIVE = 0.18")

Executing: err_E2IPDFaa = drc(pimp act ((0 < enc) < 0.02) withSingularPoint)

Executing: err_E2IPDFab = drc(geomGetNonRectangle(err_E2IPDFaa) (area == 0.0002))

Executing: err_E2IPDFac = geomOr(geomButtOnly(err_E2IPDFab dti) geomOverlap(err_E2IPDFab...

Executing: err_E2IPDFa = geomAndNot(err_E2IPDFaa err_E2IPDFac)

Executing: err_E2IPDFb = geomSize(geomGetEdge(pimp outside diffdti coincident act) 0.001)

Executing: err_E2IPDF = geomOr(err_E2IPDFa err_E2IPDFb)
	   errorLayer(err_E2IPDF "E2IPDF : Minimum PIMP extension beyond ACTIVE (outside NWELL) = 0.02")

Executing: drc(pimp act (ovlp < 0.23) oppositeB "O1IPDF : Minimum ACTIVE overlap of PIMP...

Executing: err_E1DPP1 = drc(pdif gate0_edge (enc < 0.32))
	   errorLayer(err_E1DPP1 "E1DPP1 : Minimum PDIFF extension beyond POLY1 = 0.32")

Executing: err_S1IPDN = drc(geomAndNot(geomAndNot(ndif nmhsj_s) nwell) pimp ((0.0 < sep)...
	   errorLayer(err_S1IPDN "S1IPDN : Minimum PIMP spacing to NDIFF (outside NWELL) = 0.26")

Executing: err_S2IPDN = drc(pimp ndif ((0 < sep) < 0.1) shielded)
	   errorLayer(err_S2IPDN "S2IPDN : Minimum PIMP spacing to NDIFF = 0.1")

Executing: err_S3IPDN = drc(geomGetEdge(geomAnd(ndif geomAndNot(nwell nwell43u)) coincid...
	   errorLayer(err_S3IPDN "S3IPDN : Minimum PIMP spacing to NDIFF = 0.18")

Executing: drc(pimp pgate_edge (enc < 0.35) "E1IPDP : Minimum PIMP extension beyond POLY...

Executing: drc(pimp (area < 0.3844) "A1IP : Minimum PIMP area = 0.3844")

Executing: cont_regio1 = geomSize(cont 0.15)

Executing: cont_regio2 = geomOr(cont_regio1)

Executing: cont_regio = geomSize(cont_regio2 -0.15)

Executing: cont_array1 = drc(cont_regio2 (width < 1.92) opposite parallel)

Executing: cont_regio_r = drc(geomAndNot(cont_regio cont_array1) (area > 3.1684))

Executing: cont_array = geomOutside(cont cont_regio_r)

Executing: contp = geomAnd(diffcon pimp)

Executing: contn = geomAnd(diffcon nimp)

Executing: contnp = geomOr(contp contn)

Executing: err_B1CTa = geomAndNot(geomAndNot(cont diff) poly)

Executing: err_B1CTb = geomAndNot(geomAndNot(geomAndNot(diffcon geomOr(salicide geomAnd(...

Executing: err_B1CT = geomOr(err_B1CTa err_B1CTb)
	   errorLayer(err_B1CT "B1CT : CONT without NDIFF or PDIFF or POLY1 is not allowed")

Executing: err_B1CTGA = geomAnd(cont gate)
	   errorLayer(err_B1CTGA "B1CTGA : CONT overlap of GATE is not allowed")

Executing: err_B1CTSB = geomAnd(cont sblk)
	   errorLayer(err_B1CTSB "B1CTSB : CONT overlap of SBLK is not allowed")

Executing: err_W1CT = geomContactCheck(cont (length == 0.22) (width == 0.22) ignore)
	   errorLayer(err_W1CT "W1CT : Fixed CONT size = 0.22")

Executing: drc(cont (sep < 0.25) "S1CT : Minimum CONT spacing = 0.25")

Executing: drc(geomAndNot(cont cont_array) (sep < 0.28) "S2CT : Minimum CONT spacing = 0...

Executing: drc(diff cont (enc < 0.1) "E1DFCT : Minimum DIFF enclosure of CONT = 0.1")

Executing: drc(geomAnd(cont diff) poly (sep < 0.16) "S1CTP1 : Minimum CONT spacing to PO...

Executing: drc(poly cont (enc < 0.1) "E1P1CT : Minimum POLY1 enclosure of CONT = 0.1")

Executing: drc(geomAnd(cont poly) diff (sep < 0.2) "S1CTDF : Minimum CONT spacing to DIF...

Executing: pimp_ex1 = geomAnd(pimp geomSize(tub2_nxta1 -0.5))

Executing: nimp_ex1 = geomAnd(nimp geomSize(tub2_pxta1 -0.5))

Executing: drc(geomAndNot(pimp pimp_ex1) contnp (enc < 0.12) "E1CTIP : Minimum PIMP encl...

Executing: drc(geomAndNot(nimp nimp_ex1) contnp (enc < 0.12) "E1CTIN : Minimum NIMP encl...

Executing: err_E2CTIP = drc(pimp_ex1 contnp (enc < 0.1))
	   errorLayer(err_E2CTIP "E2CTIP : Minimum PIMP enclosure of DIFFCON = 0.1")

Executing: err_E2CTIN = drc(nimp_ex1 contnp (enc < 0.1))
	   errorLayer(err_E2CTIN "E2CTIN : Minimum NIMP enclosure of DIFFCON = 0.1")

Executing: err_S1CTDT = drc(diffcon dti (sep < 0.14))
	   errorLayer(err_S1CTDT "S1CTDT : Minimum DIFFCON spacing to DTI = 0.14")

Executing: err_B1CTDT = geomAnd(dti diffcon)
	   errorLayer(err_B1CTDT "B1CTDT : DIFFCON overlap DTI is not allowed")

Executing: tub90 = geomGetCorner(tub (keep == 90))

Executing: err_S2CTDT = drc(geomAndNot(diffcon tiedtub) tub90 (sep < 0.495) (shielded dti))
	   errorLayer(err_S2CTDT "S2CTDT : Minimum DIFFCON spacing to DTI corner = 0.5")

Executing: err_S1CTHW = drc(cont hwc (sep < 3.5))
	   errorLayer(err_S1CTHW "S1CTHW : Minimum CONT spacing to HWC = 3.5")

Executing: err_B1CTM1 = geomAndNot(cont met1)
	   errorLayer(err_B1CTM1 "B1CTM1 : CONT must be covered by MET1")

Executing: geomSizeAnd(geomSize(met1 -5) met1 0.2 6)

Executing: geomSizeAnd(geomSize(met1 -5) met1 0.2 6)

Executing: geomSizeAnd(geomSize(met1 -5) met1 0.2 6)

Executing: geomSizeAnd(geomSize(met1 -5) met1 0.2 6)

Executing: geomSizeAnd(geomSize(met1 -5) met1 0.2 6)

Executing: met1_wide = geomSizeAnd(geomSize(met1 -5) met1 0.2 6)

Executing: err_W1M1 = drc(met1 (width < 0.23))
	   errorLayer(err_W1M1 "W1M1 : Minimum MET1 width = 0.23")

Executing: drc(met1 (sepNotch < 0.23) "S1M1 : Minimum MET1 spacing/notch = 0.23")

Executing: err_S2M1 = drc(met1_wide met1 ((0 < sep) < 0.6) shielded)
	   errorLayer(err_S2M1 "S2M1 : Minimum MET1 spacing to WIDE_MET1 = 0.6")

Executing: drc(met1 cont (enc < 0.005) "E1M1CT : Minimum MET1 enclosure of CONT = 0.005")

Executing: enccont = drc(met1 cont ((0.005 <= enc) < 0.06) oppositeB)

Executing: enccont_1 = drc(met1 enccont ((0.005 <= enc) < 0.06) opposite)

Executing: enccont_2 = geomButtOnly(enccont_1 enccont (keep == 2))

Executing: err_E2M1CT = geomButtOnly(enccont enccont_2)
	   errorLayer(err_E2M1CT "E2M1CT : Minimum MET1 enclosure of CONT = 0.06")

Executing: drc(met1 (area < 0.202) "A1M1 : Minimum MET1 area = 0.202")

Executing: met1wpad = geomAndNot(met1_wide pad)

Executing: err_B1M1 = geomWidth(met1wpad (keep > 35))
	   errorLayer(err_B1M1 "B1M1 : All MET1 tracks > 35um wide to be slotted (except Pads)")

Executing: drc(met1s (width < 0.6) "W2M1 : Minimum M1SLOT width = 0.6")

Executing: drc(met1s (width < 20) (length < 20) "W3M1 : Minimum M1SLOT length = 20.0")

Executing: drc(met1s (sepNotch < 10) "S3M1 : Minimum M1SLOT spacing/notch = 10.0")

Executing: drc(met1dg met1s (enc < 10) "E1M1M1 : Minimum MET1 enclosure of M1SLOT = 10.0")

Executing: err_E1M1M1a = geomAndNot(met1s met1dg)
	   errorLayer(err_E1M1M1a "E1M1M1 : M1SLOT without MET1 is not allowed")

Executing: err_B1V1 = geomOr(geomAndNot(via1 met1) geomAndNot(via1 met2))
	   errorLayer(err_B1V1 "B1V1 : VIA1 must be covered by MET1 and MET2")

Executing: err_W1V1 = geomContactCheck(via1 (length == 0.26) (width == 0.26) ignore)
	   errorLayer(err_W1V1 "W1V1 : Fixed VIA1 size = 0.26")

Executing: drc(via1 (sep < 0.26) "S1V1 : Minimum VIA1 spacing = 0.26")

Executing: drc(met1 via1 (enc < 0.01) "E1M1V1 : Minimum MET1 enclosure of VIA1 = 0.01")

Executing: encvia1_m1 = drc(met1 via1 ((0.01 <= enc) < 0.06) oppositeB)

Executing: encvia1_m1_1 = drc(met1 encvia1_m1 ((0.01 <= enc) < 0.06) opposite)

Executing: encvia1_m1_2 = geomButtOnly(encvia1_m1_1 encvia1_m1 (keep == 2))

Executing: err_E2M1V1 = geomButtOnly(encvia1_m1 encvia1_m1_2)
	   errorLayer(err_E2M1V1 "E2M1V1 : Minimum MET1 enclosure of VIA1 = 0.06")

Executing: drc(met2 via1 (enc < 0.01) "E1M2V1 : Minimum MET2 enclosure of VIA1 = 0.01")

Executing: encvia1_m2 = drc(met2 via1 ((0.01 <= enc) < 0.06) oppositeB)

Executing: encvia1_m2_1 = drc(met2 encvia1_m2 ((0.01 <= enc) < 0.06) opposite)

Executing: encvia1_m2_2 = geomButtOnly(encvia1_m2_1 encvia1_m2 (keep == 2))

Executing: err_E2M2V1 = geomButtOnly(encvia1_m2 encvia1_m2_2)
	   errorLayer(err_E2M2V1 "E2M2V1 : Minimum MET2 enclosure of VIA1 = 0.06")

Executing: geomSizeAnd(geomSize(met2 -5) met2 0.2 6)

Executing: geomSizeAnd(geomSize(met2 -5) met2 0.2 6)

Executing: geomSizeAnd(geomSize(met2 -5) met2 0.2 6)

Executing: geomSizeAnd(geomSize(met2 -5) met2 0.2 6)

Executing: geomSizeAnd(geomSize(met2 -5) met2 0.2 6)

Executing: met2_wide = geomSizeAnd(geomSize(met2 -5) met2 0.2 6)

Executing: err_W1M2 = drc(met2 (width < 0.28))
	   errorLayer(err_W1M2 "W1M2 : Minimum MET2 width = 0.28")

Executing: drc(met2 (sepNotch < 0.28) "S1M2 : Minimum MET2 spacing/notch = 0.28")

Executing: err_S2M2 = drc(met2_wide met2 ((0 < sep) < 0.6) shielded)
	   errorLayer(err_S2M2 "S2M2 : Minimum MET2 spacing to WIDE_MET2 = 0.6")

Executing: drc(met2 (area < 0.202) "A1M2 : Minimum MET2 area = 0.202")

Executing: met2wpad = geomAndNot(met2_wide pad)

Executing: err_B1M2 = geomWidth(met2wpad (keep > 35))
	   errorLayer(err_B1M2 "B1M2 : All MET2 tracks > 35um wide to be slotted (except Pads)")

Executing: drc(met2s (width < 0.6) "W2M2 : Minimum M2SLOT width = 0.6")

Executing: drc(met2s (width < 20) (length < 20) "W3M2 : Minimum M2SLOT length = 20.0")

Executing: drc(met2s (sepNotch < 10) "S3M2 : Minimum M2SLOT spacing/notch = 10.0")

Executing: drc(met2s met1s (sep < 2.0) "S1M2M1 : Minimum M2SLOT spacing to M1SLOT = 2.0")

Executing: drc(met2dg met2s (enc < 10) "E1M2M2 : Minimum MET2 enclosure of M2SLOT = 10.0")

Executing: err_E1M2M2a = geomAndNot(met2s met2dg)
	   errorLayer(err_E1M2M2a "E1M2M2 : M2SLOT without MET2 is not allowed")

Executing: err_S1M2M1a = geomAnd(met2s met1s)
	   errorLayer(err_S1M2M1a "S1M2M1 : M2SLOT overlap of M1SLOT is not allowed")

Executing: err_B1V2 = geomOr(geomAndNot(via2 met2) geomAndNot(via2 met3))
	   errorLayer(err_B1V2 "B1V2 : VIA2 must be covered by MET2 and MET3")

Executing: err_W1V2 = geomContactCheck(via2 (length == 0.26) (width == 0.26) ignore)
	   errorLayer(err_W1V2 "W1V2 : Fixed VIA2 size = 0.26")

Executing: drc(via2 (sep < 0.26) "S1V2 : Minimum VIA2 spacing = 0.26")

Executing: drc(met2 via2 (enc < 0.01) "E1M2V2 : Minimum MET2 enclosure of VIA2 = 0.01")

Executing: encvia2_m2 = drc(met2 via2 ((0.01 <= enc) < 0.06) oppositeB)

Executing: encvia2_m2_1 = drc(met2 encvia2_m2 ((0.01 <= enc) < 0.06) opposite)

Executing: encvia2_m2_2 = geomButtOnly(encvia2_m2_1 encvia2_m2 (keep == 2))

Executing: err_E2M2V2 = geomButtOnly(encvia2_m2 encvia2_m2_2)
	   errorLayer(err_E2M2V2 "E2M2V2 : Minimum MET2 enclosure of VIA2 = 0.06")

Executing: drc(met3 via2 (enc < 0.01) "E1M3V2 : Minimum MET3 enclosure of VIA2 = 0.01")

Executing: encvia2_m3 = drc(met3 via2 ((0.01 <= enc) < 0.06) oppositeB)

Executing: encvia2_m3_1 = drc(met3 encvia2_m3 ((0.01 <= enc) < 0.06) opposite)

Executing: encvia2_m3_2 = geomButtOnly(encvia2_m3_1 encvia2_m3 (keep == 2))

Executing: err_E2M3V2 = geomButtOnly(encvia2_m3 encvia2_m3_2)
	   errorLayer(err_E2M3V2 "E2M3V2 : Minimum MET3 enclosure of VIA2 = 0.06")

Executing: geomSizeAnd(geomSize(met3 -5) met3 0.2 6)

Executing: geomSizeAnd(geomSize(met3 -5) met3 0.2 6)

Executing: geomSizeAnd(geomSize(met3 -5) met3 0.2 6)

Executing: geomSizeAnd(geomSize(met3 -5) met3 0.2 6)

Executing: geomSizeAnd(geomSize(met3 -5) met3 0.2 6)

Executing: met3_wide = geomSizeAnd(geomSize(met3 -5) met3 0.2 6)

Executing: err_W1M3 = drc(met3 (width < 0.28))
	   errorLayer(err_W1M3 "W1M3 : Minimum MET3 width = 0.28")

Executing: drc(met3 (sepNotch < 0.28) "S1M3 : Minimum MET3 spacing/notch = 0.28")

Executing: err_S2M3 = drc(met3_wide met3 ((0 < sep) < 0.6) shielded)
	   errorLayer(err_S2M3 "S2M3 : Minimum MET3 spacing to WIDE_MET3 = 0.6")

Executing: drc(met3 (area < 0.202) "A1M3 : Minimum MET3 area = 0.202")

Executing: met3wpad = geomAndNot(met3_wide pad)

Executing: err_B1M3 = geomWidth(met3wpad (keep > 35))
	   errorLayer(err_B1M3 "B1M3 : All MET3 tracks > 35um wide to be slotted (except Pads)")

Executing: drc(met3s (width < 0.6) "W2M3 : Minimum M3SLOT width = 0.6")

Executing: drc(met3s (width < 20) (length < 20) "W3M3 : Minimum M3SLOT length = 20.0")

Executing: drc(met3s (sepNotch < 10) "S3M3 : Minimum M3SLOT spacing/notch = 10.0")

Executing: drc(met3s met2s (sep < 2.0) "S1M3M2 : Minimum M3SLOT spacing to M2SLOT = 2.0")

Executing: drc(met3dg met3s (enc < 10) "E1M3M3 : Minimum MET3 enclosure of M3SLOT = 10.0")

Executing: err_E1M3M3a = geomAndNot(met3s met3dg)
	   errorLayer(err_E1M3M3a "E1M3M3 : M3SLOT without MET3 is not allowed")

Executing: err_S1M3M2a = geomAnd(met3s met2s)
	   errorLayer(err_S1M3M2a "S1M3M2 : M3SLOT overlap of M2SLOT is not allowed")

Executing: err_B1V3 = geomOr(geomAndNot(via3 met3) geomAndNot(via3 met4))
	   errorLayer(err_B1V3 "B1V3 : VIA3 must be covered by MET3 and MET4")

Executing: err_W1V3 = geomContactCheck(via3 (length == 0.26) (width == 0.26) ignore)
	   errorLayer(err_W1V3 "W1V3 : Fixed VIA3 size = 0.26")

Executing: drc(via3 (sep < 0.26) "S1V3 : Minimum VIA3 spacing = 0.26")

Executing: drc(met3 via3 (enc < 0.01) "E1M3V3 : Minimum MET3 enclosure of VIA3 = 0.01")

Executing: encvia3_m3 = drc(met3 via3 ((0.01 <= enc) < 0.06) oppositeB)

Executing: encvia3_m3_1 = drc(met3 encvia3_m3 ((0.01 <= enc) < 0.06) opposite)

Executing: encvia3_m3_2 = geomButtOnly(encvia3_m3_1 encvia3_m3 (keep == 2))

Executing: err_E2M3V3 = geomButtOnly(encvia3_m3 encvia3_m3_2)
	   errorLayer(err_E2M3V3 "E2M3V3 : Minimum MET3 enclosure of VIA3 = 0.06")

Executing: drc(met4 via3 (enc < 0.01) "E1M4V3 : Minimum MET4 enclosure of VIA3 = 0.01")

Executing: encvia3_m4 = drc(met4 via3 ((0.01 <= enc) < 0.06) oppositeB)

Executing: encvia3_m4_1 = drc(met4 encvia3_m4 ((0.01 <= enc) < 0.06) opposite)

Executing: encvia3_m4_2 = geomButtOnly(encvia3_m4_1 encvia3_m4 (keep == 2))

Executing: err_E2M4V3 = geomButtOnly(encvia3_m4 encvia3_m4_2)
	   errorLayer(err_E2M4V3 "E2M4V3 : Minimum MET4 enclosure of VIA3 = 0.06")

Executing: geomSizeAnd(geomSize(met4 -5) met4 0.2 6)

Executing: geomSizeAnd(geomSize(met4 -5) met4 0.2 6)

Executing: geomSizeAnd(geomSize(met4 -5) met4 0.2 6)

Executing: geomSizeAnd(geomSize(met4 -5) met4 0.2 6)

Executing: geomSizeAnd(geomSize(met4 -5) met4 0.2 6)

Executing: met4_wide = geomSizeAnd(geomSize(met4 -5) met4 0.2 6)

Executing: err_W1M4 = drc(met4 (width < 0.28))
	   errorLayer(err_W1M4 "W1M4 : Minimum MET4 width = 0.28")

Executing: drc(met4 (sepNotch < 0.28) "S1M4 : Minimum MET4 spacing/notch = 0.28")

Executing: err_S2M4 = drc(met4_wide met4 ((0 < sep) < 0.6) shielded)
	   errorLayer(err_S2M4 "S2M4 : Minimum MET4 spacing to WIDE_MET4 = 0.6")

Executing: drc(met4 (area < 0.202) "A1M4 : Minimum MET4 area = 0.202")

Executing: met4wpad = geomAndNot(met4_wide pad)

Executing: err_B1M4 = geomWidth(met4wpad (keep > 35))
	   errorLayer(err_B1M4 "B1M4 : All MET4 tracks > 35um wide to be slotted (except Pads)")

Executing: drc(met4s (width < 0.6) "W2M4 : Minimum M4SLOT width = 0.6")

Executing: drc(met4s (width < 20) (length < 20) "W3M4 : Minimum M4SLOT length = 20.0")

Executing: drc(met4s (sepNotch < 10) "S3M4 : Minimum M4SLOT spacing/notch = 10.0")

Executing: drc(met4s met3s (sep < 2.0) "S1M4M3 : Minimum M4SLOT spacing to M3SLOT = 2.0")

Executing: drc(met4dg met4s (enc < 10) "E1M4M4 : Minimum MET4 enclosure of M4SLOT = 10.0")

Executing: err_E1M4M4a = geomAndNot(met4s met4dg)
	   errorLayer(err_E1M4M4a "E1M4M4 : M4SLOT without MET4 is not allowed")

Executing: err_S1M4M3a = geomAnd(met4s met3s)
	   errorLayer(err_S1M4M3a "S1M4M3 : M4SLOT overlap of M3SLOT is not allowed")

Executing: err_W1VT = geomContactCheck(vtp (length == 0.36) (width == 0.36) ignore)
	   errorLayer(err_W1VT "W1VT : Fixed VIATP size = 0.36")

Executing: drc(vtp (sep < 0.35) "S1VT : Minimum VIATP spacing = 0.35")

Executing: drc(mtp vtp (enc < 0.09) "E1MTVT : Minimum METTP enclosure of VIATP = 0.09")

Executing: err_B1VT = geomAndNot(vtp mtp)
	   errorLayer(err_B1VT "B1VT : VIATP must be covered by METTP")

Executing: err_B1VTM4 = geomAndNot(vtp met4)
	   errorLayer(err_B1VTM4 "B1VTM4 : VIATP must be covered by MET4")

Executing: drc(met4 vtp (enc < 0.01) "E1M4VT : Minimum MET4 enclosure of VIATP = 0.01")

Executing: encvtp_m4 = drc(met4 vtp ((0.01 <= enc) < 0.06) oppositeB)

Executing: encvtp_m4_1 = drc(met4 encvtp_m4 ((0.01 <= enc) < 0.06) opposite)

Executing: encvtp_m4_2 = geomButtOnly(encvtp_m4_1 encvtp_m4 (keep == 2))

Executing: err_E2M4VT = geomButtOnly(encvtp_m4 encvtp_m4_2)
	   errorLayer(err_E2M4VT "E2M4VT : Minimum MET4 enclosure of VIATP = 0.06")

Executing: geomSizeAnd(geomSize(mtp -5) mtp 0.2 6)

Executing: geomSizeAnd(geomSize(mtp -5) mtp 0.2 6)

Executing: geomSizeAnd(geomSize(mtp -5) mtp 0.2 6)

Executing: geomSizeAnd(geomSize(mtp -5) mtp 0.2 6)

Executing: geomSizeAnd(geomSize(mtp -5) mtp 0.2 6)

Executing: mtp_wide = geomSizeAnd(geomSize(mtp -5) mtp 0.2 6)

Executing: err_W1MT = drc(mtp (width < 0.44))
	   errorLayer(err_W1MT "W1MT : Minimum METTP width = 0.44")

Executing: drc(mtp (sepNotch < 0.46) "S1MT : Minimum METTP spacing/notch = 0.46")

Executing: err_S2MT = drc(mtp_wide mtp ((0 < sep) < 0.6) shielded)
	   errorLayer(err_S2MT "S2MT : Minimum METTP spacing to WIDE_METTP = 0.6")

Executing: drc(mtp (area < 0.562) "A1MT : Minimum METTP area = 0.562")

Executing: mtpwpad = geomAndNot(mtp_wide pad)

Executing: err_B1MT = geomWidth(mtpwpad (keep > 35))
	   errorLayer(err_B1MT "B1MT : All METTP tracks > 35um wide to be slotted (except Pads)")

Executing: drc(mtps (width < 0.6) "W2MT : Minimum MTPSLOT width = 0.6")

Executing: drc(mtps (width < 20) (length < 20) "W3MT : Minimum MTPSLOT length = 20.0")

Executing: drc(mtps (sepNotch < 10) "S3MT : Minimum MTPSLOT spacing/notch = 10.0")

Executing: drc(mtpdg mtps (enc < 10) "E1MTMT : Minimum METTP enclosure of MTPSLOT = 10.0")

Executing: err_E1MTMTa = geomAndNot(mtps mtpdg)
	   errorLayer(err_E1MTMTa "E1MTMT : MTPSLOT without METTP is not allowed")

Executing: drc(mtps met4s (sep < 2.0) "S1MTM4 : Minimum MTPSLOT spacing to M4SLOT = 2.0")

Executing: err_S1MTM4a = geomAnd(mtps met4s)
	   errorLayer(err_S1MTM4a "S1MTM4 : MTPSLOT overlap M4SLOT is not allowed")

Executing: err_B1VL = geomAndNot(vtpl mtpl)
	   errorLayer(err_B1VL "B1VL : VIATPL must be covered by METTPL")

Executing: err_W1VL = geomContactCheck(vtpl (length == 0.5) (width == 0.5) ignore)
	   errorLayer(err_W1VL "W1VL : Fixed VIATPL size = 0.5")

Executing: drc(vtpl (sep < 0.45) "S1VL : Minimum VIATPL spacing = 0.45")

Executing: drc(mtpl vtpl (enc < 0.5) "E1MLVL : Minimum METTPL enclosure of VIATPL = 0.5")

Executing: err_B1VLMT = geomAndNot(vtpl mtp)
	   errorLayer(err_B1VLMT "B1VLMT : VIATPL must be covered by METTP")

Executing: drc(mtp vtpl (enc < 0.5) "E1MTVL : Minimum METTP enclosure of VIATPL = 0.5")

Executing: err_B1ML = geomWidth(geomAndNot(mtpl pad) (keep > 35.0))
	   errorLayer(err_B1ML "B1ML : METTPL tracks > 35.0 are not allowed (except Pads)")

Executing: err_W1ML = drc(mtpl (width < 3.0))
	   errorLayer(err_W1ML "W1ML : Minimum METTPL width = 3.0")

Executing: err_S1ML = drc(mtpl (sepNotch < 2.5))
	   errorLayer(err_S1ML "S1ML : Minimum METTPL spacing/notch = 2.5")

Executing: drc(mtpl (area < 10.0) "A1ML : Minimum METTPL area = 10.0")

Executing: err_A2ML = drc(geomAndNot(geomHoles(mtpl) mtpl) (area < 18.0))
	   errorLayer(err_A2ML "A2ML : Minimum METTPL enclosed area = 18.0")

Executing: drc(nopim (width < 60.0) "W1IB : Minimum NOPIM width = 60.0")

Executing: drc(nopim (sepNotch < 20.0) "S1IB : Minimum NOPIM spacing/notch = 20.0")

Executing: drc(nopim pad ((0 < sep) < 40.0) "S1IBPA : Minimum NOPIM spacing to PAD = 40.0")

Executing: pad_u = geomGetTexted(pad padlabel "USERPAD")

Executing: pad_p = geomGetTexted(pad padlabel "PROBEPAD")

Executing: pad_b = geomOutside(pad geomOr(pad_u pad_p))

Executing: geomStamp(pad_b mtpltrm)

Executing: pad_s = geomSize(pad_b 2.0)

Executing: padv1 = geomAnd(via1 pad_s)

Executing: padv2 = geomAnd(via2 pad_s)

Executing: padv3 = geomAnd(via3 pad_s)

Executing: padvtpl = geomAnd(vtpl pad_s)

Executing: padvtp = geomAnd(vtp pad_s)

Executing: err_B4PA = geomAndNot(pad mtpl)
	   errorLayer(err_B4PA "B4PA : PAD without METTPL is not allowed")

Executing: drc(mtpl pad (enc < 2.0) "E1MLPA : Minimum METTPL enclosure of PAD = 2.0")

Executing: drc(pad (width < 15.0) "W1PA : Minimum PAD width = 15.0")

Executing: drc(pad (sepNotch < 7.0) "S1PA : Minimum PAD spacing/notch = 7.0")

Executing: err_S1PADT = drc(pad_b dti (sep < 2.0))
	   errorLayer(err_S1PADT "S1PADT : Minimum PAD spacing to DTI = 2.0")

Executing: err_B2PA = geomAnd(pad_b geomOr(diff poly dti))
	   errorLayer(err_B2PA "B2PA : PAD overlap of DIFF, POLY1 or DTI is not allowed")

Executing: err_Q1PA = drc(pad_b (width < 53.0))
	   errorLayer(err_Q1PA "Q1PA : Minimum recommended bond PAD width = 53.0")

Executing: drc(diff pad_b (sep < 5.0) "S1PADF : Minimum PAD spacing to DIFF = 5.0")

Executing: drc(poly pad_b (sep < 5.0) "S1PAP1 : Minimum PAD spacing to POLY1 = 5.0")

Executing: err_S1PAM1a = drc(pad_b met1 (sep < 5.0))

Executing: err_S1PAM1b = drc(pad_b met1trm (sep < 5.0) sameNet)

Executing: err_S1PAM1 = geomAndNot(err_S1PAM1a err_S1PAM1b)
	   errorLayer(err_S1PAM1 "S1PAM1 : Minimum PAD spacing to MET1 (different net) = 5.0")

Executing: err_S1PAM2a = drc(pad_b met2 (sep < 5.0))

Executing: err_S1PAM2b = drc(pad_b met2trm (sep < 5.0) sameNet)

Executing: err_S1PAM2 = geomAndNot(err_S1PAM2a err_S1PAM2b)
	   errorLayer(err_S1PAM2 "S1PAM2 : Minimum PAD spacing to MET2 (different net) = 5.0")

Executing: drc(met1 pad_b (enc < 2.0) "E1M1PA : Minimum MET1 enclosure of PAD = 2.0")

Executing: err_E1M1PA = geomAndNot(pad_b met1)
	   errorLayer(err_E1M1PA "E1M1PA : Minimum MET1 enclosure of PAD = 2.0")

Executing: drc(met2 pad_b (enc < 2.0) "E1M2PA : Minimum MET2 enclosure of PAD = 2.0")

Executing: err_E1M2PA = geomAndNot(pad_b met2)
	   errorLayer(err_E1M2PA "E1M2PA : Minimum MET2 enclosure of PAD = 2.0")

Executing: drc(padv1 (sep < 0.45) "S2V1 : Minimum VIA1 spacing = 0.45")

Executing: drc(met1 padv1 (enc < 3.0) "E3M1V1 : Minimum MET1 and MET2 enclosure of VIA1 ...

Executing: drc(met2 padv1 (enc < 3.0) "E3M1V1 : Minimum MET1 and MET2 enclosure of VIA1 ...

Executing: err_S1PAM3a = drc(pad_b met3 (sep < 5.0))

Executing: err_S1PAM3b = drc(pad_b met3trm (sep < 5.0) sameNet)

Executing: err_S1PAM3 = geomAndNot(err_S1PAM3a err_S1PAM3b)
	   errorLayer(err_S1PAM3 "S1PAM3 : Minimum PAD spacing to MET3 (different net) = 5.0")

Executing: drc(met3 pad_b (enc < 2.0) "E1M3PA : Minimum MET3 enclosure of PAD = 2.0")

Executing: err_E1M3PA = geomAndNot(pad_b met3)
	   errorLayer(err_E1M3PA "E1M3PA : Minimum MET3 enclosure of PAD = 2.0")

Executing: drc(padv2 (sep < 0.45) "S2V2 : Minimum VIA2 spacing = 0.45")

Executing: drc(padv1 padv2 (sep < 0.13) "S1V2V1 : Minimum VIA2 spacing to VIA1 = 0.13")

Executing: err_S1V2V1 = geomAnd(padv1 padv2)
	   errorLayer(err_S1V2V1 "S1V2V1 : Minimum VIA2 spacing to VIA1 = 0.13")

Executing: drc(met2 padv2 (enc < 3.0) "E3M2V2 : Minimum MET2 and MET3 enclosure of VIA2 ...

Executing: drc(met3 padv2 (enc < 3.0) "E3M2V2 : Minimum MET2 and MET3 enclosure of VIA2 ...

Executing: err_S1PAM4a = drc(pad_b met4 (sep < 5.0))

Executing: err_S1PAM4b = drc(pad_b met4trm (sep < 5.0) sameNet)

Executing: err_S1PAM4 = geomAndNot(err_S1PAM4a err_S1PAM4b)
	   errorLayer(err_S1PAM4 "S1PAM4 : Minimum PAD spacing to MET4 (different net) = 5.0")

Executing: drc(met4 pad_b (enc < 2.0) "E1M4PA : Minimum MET4 enclosure of PAD = 2.0")

Executing: err_E1M4PA = geomAndNot(pad_b met4)
	   errorLayer(err_E1M4PA "E1M4PA : Minimum MET4 enclosure of PAD = 2.0")

Executing: drc(padv3 (sep < 0.45) "S2V3 : Minimum VIA3 spacing = 0.45")

Executing: drc(padv2 padv3 (sep < 0.13) "S1V3V2 : Minimum VIA3 spacing to VIA2 = 0.13")

Executing: err_S1V3V2 = geomAnd(padv2 padv3)
	   errorLayer(err_S1V3V2 "S1V3V2 : Minimum VIA3 spacing to VIA2 = 0.13")

Executing: drc(met3 padv3 (enc < 3.0) "E3M3V3 : Minimum MET3 and MET4 enclosure of VIA3 ...

Executing: drc(met4 padv3 (enc < 3.0) "E3M3V3 : Minimum MET3 and MET4 enclosure of VIA3 ...

Executing: err_S1PAMLa = drc(pad_b mtpl (sep < 5.0))

Executing: err_S1PAMLb = drc(pad_b mtpltrm (sep < 5.0) sameNet)

Executing: err_S1PAML = geomAndNot(err_S1PAMLa err_S1PAMLb)
	   errorLayer(err_S1PAML "S1PAML : Minimum PAD spacing to METTPL (different net) = 5.0")

Executing: drc(mtpl padvtpl (enc < 3.0) "E2MLVL : Minimum METTPL enclosure of VIATPL = 3...

Executing: drc(mtp padvtpl (enc < 3.0) "E2MTVL : Minimum METTP enclosure of VIATPL = 3.0")

Executing: drc(padv3 padvtp (sep < 0.06) "S1VTV3 : Minimum VIATP spacing to VIA3 = 0.06")

Executing: err_S1VTV3 = geomAnd(padv3 padvtp)
	   errorLayer(err_S1VTV3 "S1VTV3 : Minimum VIATP spacing to VIA3 = 0.06")

Executing: drc(met4 padvtp (enc < 3.0) "E3M4VT : Minimum MET4 enclosure of VIATP = 3.0")

Executing: err_R1V1PA_1 = geomAndNot(pad_b geomEnclose(pad_b via1))

Executing: processAntenna((pad_b (gate (sum pad_b)) (antenna (sum via1)) (keep < 0.05))
running in speedup mode

Executing: err_R1V1PA = geomOr(err_R1V1PA_1 err_R1V1PA_2)
	   errorLayer(err_R1V1PA "R1V1PA : Minimum ratio of VIA1 (in pad) area to PAD area = 5%")

Executing: err_R1VTPA_1 = geomAndNot(pad_b geomEnclose(pad_b vtpCON))

Executing: processAntenna((pad_b (gate (sum pad_b)) (antenna (sum vtpCON)) (keep < 0.05))
running in speedup mode

Executing: err_R1VTPA = geomOr(err_R1VTPA_1 err_R1VTPA_2)
	   errorLayer(err_R1VTPA "R1VTPA : Minimum ratio of VIATP (in pad) area to PAD area = 5%")

Executing: err_R1V2PA_1 = geomAndNot(pad_b geomEnclose(pad_b via2CON))

Executing: processAntenna((pad_b (gate (sum pad_b)) (antenna (sum via2CON)) (keep < 0.05))
running in speedup mode

Executing: err_R1V2PA = geomOr(err_R1V2PA_1 err_R1V2PA_2)
	   errorLayer(err_R1V2PA "R1V2PA : Minimum ratio of VIA2 (in pad) area to PAD area = 5%")

Executing: err_R1V3PA_1 = geomAndNot(pad_b geomEnclose(pad_b via3CON))

Executing: processAntenna((pad_b (gate (sum pad_b)) (antenna (sum via3CON)) (keep < 0.05))
running in speedup mode

Executing: err_R1V3PA = geomOr(err_R1V3PA_1 err_R1V3PA_2)
	   errorLayer(err_R1V3PA "R1V3PA : Minimum ratio of VIA3 (in pad) area to PAD area = 5%")

Executing: err_R1VLPA_1 = geomAndNot(pad_b geomEnclose(pad_b vtpl))

Executing: processAntenna((pad_b (gate (sum pad_b)) (antenna (sum vtpl)) (keep < 0.05))
running in speedup mode

Executing: err_R1VLPA = geomOr(err_R1VLPA_1 err_R1VLPA_2)
	   errorLayer(err_R1VLPA "R1VLPA : Minimum ratio of VIATPL (in pad) area to PAD area = 5%")

Executing: err_B15PA = geomAnd(pad_p vtpl)
	   errorLayer(err_B15PA "B15PA : Probe PAD with VIATPL is not allowed")

Executing: drc(pad_p vtpl (sep < 2.0) "S1PAVL : Minimum PAD spacing to VIATPL = 2.0")

Executing: bulk_cm = geomStraddle(bkgnd1 cm)

Executing: bulk_cm2 = geomStraddle(bkgnd1 cm2)

Executing: bulk_cm3 = geomStraddle(bkgnd1 cm3)

Executing: bulk_cmh = geomStraddle(bkgnd1 cmh)

Executing: bulk_cmh2 = geomStraddle(bkgnd1 cmh2)

Executing: bulk_cmh3 = geomStraddle(bkgnd1 cmh3)

Executing: bulk_cm2a = geomStraddle(bkgnd1 cm2a)

Executing: bulk_cmh2a = geomStraddle(bkgnd1 cmh2a)

Executing: bulk_cm23f = geomStraddle(bkgnd1 cm23f)

Executing: bulk_cm34f = geomStraddle(bkgnd1 cm34f)

Executing: bulk_cm45f = geomStraddle(bkgnd1 cm45f)

Executing: bulk_cmh23f = geomStraddle(bkgnd1 cmh23f)

Executing: bulk_cmh34f = geomStraddle(bkgnd1 cmh34f)

Executing: bulk_cmh45f = geomStraddle(bkgnd1 cmh45f)

Executing: bulk_cm_a = geomOr(bulk_cm bulk_cm2 bulk_cm3 bulk_cm2a)

Executing: bulk_cmh_a = geomOr(bulk_cmh bulk_cmh2 bulk_cmh3 bulk_cmh2a)

Executing: bulk_cmf = geomOr(bulk_cm23f bulk_cm34f bulk_cm45f)

Executing: bulk_cmhf = geomOr(bulk_cmh23f bulk_cmh34f bulk_cmh45f)

Executing: bulk_m = geomOr(bulk_cm_a bulk_cmf)

Executing: bulk_mh = geomOr(bulk_cmh_a bulk_cmhf)

Executing: err_B3CM = geomAnd(cm geomOr(geomOr(bulk_cm2 bulk_cm2a bulk_cm3 bulk_cmf) bul...
	   errorLayer(err_B3CM "B3CM : CAPM is not allowed when CAPM23F, CAPM34F, CAPM45F, CAPMH, CAPMH23F, CAPMH34F, CAPMH45F, CAPM2, CAPM2A, CAPMH2, CAPMH2A, CAPM3 or CAPMH3 is present")

Executing: err_B1CM = geomAndNot(cm bm)
	   errorLayer(err_B1CM "B1CM : CAPM without BM is not allowed")

Executing: err_W1CM = drc(cm (width < 2.0))
	   errorLayer(err_W1CM "W1CM : Minimum CAPM width = 2.0")

Executing: err_W2CM = geomGetBBox(cm (30 < length) outputInLayer)
	   errorLayer(err_W2CM "W2CM : Maximum CAPM bounding box size = 30.0 x 30.0")

Executing: drc(cm (sepNotch < 1.5) "S1CM : Minimum CAPM spacing/notch = 1.5")

Executing: drc(cm pad (sep < 10.0) "S1CMPA : Minimum CAPM spacing to PAD = 10.0")

Executing: drc(cm vtp (sep < 0.5) "S1CMVT : Minimum CAPM spacing to VIATP = 0.5")

Executing: drc(cm vtp (enc < 0.3) "E1CMVT : Minimum CAPM enclosure of VIATP = 0.3")

Executing: err_E1CMVT = geomStraddle(vtp cm)
	   errorLayer(err_E1CMVT "E1CMVT : Minimum CAPM enclosure of VIATP = 0.3")

Executing: drc(bm cm (enc < 0.5) "E1BMCM : Minimum BM enclosure of CAPM = 0.5")

Executing: drc(bm geomAnd(bm1 vtp) (enc < 0.15) "E1BMVT : Minimum BM enclosure of VIATP ...

Executing: drc(bm vian (enc < 0.15) "E1BMVN : Minimum BM enclosure of VIAn = 0.15")

Executing: drc(cm via3 (sep < 0.5) "S1CMVN : Minimum CAPM spacing to VIAn = 0.5")

Executing: err_B2CM = geomAnd(cm geomOr(via3 pad))
	   errorLayer(err_B2CM "B2CM : CAPM overlap of VIAn or PAD is not allowed")

Executing: drc(vtpcm (sep < 2.0) "S3VT : Minimum VIATP spacing on CAPM = 2.0")

Executing: err_Q1VT_1 = geomAndNot(cm geomEnclose(cm vtpcm))

Executing: err_Q1VT_2 = drc(vtpcm cm (coverage < 0.01))
Skip! Boundary layer has no shape

Executing: err_Q1VT = geomOr(err_Q1VT_1 err_Q1VT_2)
	   errorLayer(err_Q1VT "Q1VT : Recommended minimum ratio of VIATP to CAPM area = 1%")

Executing: err_B1CH = geomAndNot(cmh bmh)
	   errorLayer(err_B1CH "B1CH : CAPMH without BM is not allowed")

Executing: err_B3CH = geomAnd(cmh geomOr(geomOr(bulk_cmh2 bulk_cmh2a bulk_cmh3 bulk_cmhf...
	   errorLayer(err_B3CH "B3CH : CAPMH is not allowed when CAPM, CAPM23F, CAPM34F, CAPM45F, CAPM56F, CAPMH23F, CAPMH34F, CAPMH45F, CAPMH56F, CAPM2, CAPM2A, CAPMH2, CAPMH2A, CAPM3 or CAPMH3 is present")

Executing: err_W1CH = drc(cmh (width < 2.0))
	   errorLayer(err_W1CH "W1CH : Minimum CAPMH width = 2.0")

Executing: err_W2CH = geomGetBBox(cmh (30 < length) outputInLayer)
	   errorLayer(err_W2CH "W2CH : Maximum CAPMH bounding box size = 30.0 x 30.0")

Executing: drc(cmh (sepNotch < 1.5) "S1CH : Minimum CAPMH spacing/notch = 1.5")

Executing: drc(cmh pad (sep < 10.0) "S1CHPA : Minimum CAPMH spacing to PAD = 10.0")

Executing: drc(cmh vtp (sep < 0.5) "S1CHVT : Minimum CAPMH spacing to VIATP = 0.5")

Executing: drc(cmh vtp (enc < 0.3) "E1CHVT : Minimum CAPMH enclosure of VIATP = 0.3")

Executing: err_E1CHVT = geomStraddle(vtp cmh)
	   errorLayer(err_E1CHVT "E1CHVT : Minimum CAPMH enclosure of VIATP = 0.3")

Executing: drc(bmh geomAnd(bmh1 vtp) (enc < 0.15) "E2BMVT : Minimum BM enclosure of VIAT...

Executing: drc(bmh cmh (enc < 0.5) "E1BMCH : Minimum BM enclosure of CAPMH = 0.5")

Executing: drc(bmh vian (enc < 0.15) "E2BMVN : Minimum BM enclosure of VIAn = 0.15")

Executing: drc(cmh via3 (sep < 0.5) "S1CHVN : Minimum CAPMH spacing to VIAn = 0.5")

Executing: err_B2CH = geomAnd(cmh geomOr(via3 pad))
	   errorLayer(err_B2CH "B2CH : CAPMH overlap of VIAn or PAD is not allowed")

Executing: drc(vtpcmh (sep < 2.0) "S4VT : Minimum VIATP spacing on CAPMH = 2.0")

Executing: err_Q4VT = drc(vtpcmh cmh (coverage < 0.01))
	   errorLayer(err_Q4VT "Q4VT : Recommended minimum ratio of VIATP to CAPMH area = 1%")
Skip! Boundary layer has no shape

Executing: err_B1DM = geomAnd(cm2 geomOr(geomOr(bulk_cm bulk_cm2a bulk_cm3 bulk_cmf) geo...
	   errorLayer(err_B1DM "B1DM : CAPM2 is not allowed when CAPM, CAPM23F, CAPM34F, CAPM45F, CAPMH, CAPMH23F, CAPMH34F, CAPMH45F, CAPM2A, CAPMH2, CAPMH2A, CAPM3 or CAPMH3 is present")

Executing: err_B2DMa = geomAndNot(cm2 met2trm)

Executing: err_B2DMb = geomAndNot(cm2 met3trm)

Executing: err_B2DM = geomOr(err_B2DMa err_B2DMb)
	   errorLayer(err_B2DM "B2DM : CAPM2 must be enclosed by MET2 and MET3")

Executing: err_B3DM = geomAnd(cm2 geomOr(via1 pad))
	   errorLayer(err_B3DM "B3DM : CAPM2 must not be over VIA1 or PAD")

Executing: err_B4DM = geomOutside(cm2 via2)
	   errorLayer(err_B4DM "B4DM : CAPM2 without VIA2 is not allowed")

Executing: err_Q1V2 = drc(v2cm2 m3_dmm (coverage < 0.01))
	   errorLayer(err_Q1V2 "Q1V2 : Recommended minimum ratio of VIA2 to CAPM2 area = 1%")
Skip! Boundary layer has no shape

Executing: err_W1DM = drc(cm2 (width < 2.0))
	   errorLayer(err_W1DM "W1DM : Minimum CAPM2 width = 2.0")

Executing: err_W2DM = geomGetBBox(cm2 (30 < length) outputInLayer)
	   errorLayer(err_W2DM "W2DM : Maximum CAPM2 bounding box size = 30.0 x 30.0")

Executing: drc(cm2 (sepNotch < 1.5) "S1DM : Minimum CAPM2 spacing/notch = 1.5")

Executing: drc(cm2 pad (sep < 10.0) "S1DMPA : Minimum CAPM2 spacing to PAD = 10.0")

Executing: drc(cm2 via1 (sep < 0.5) "S1DMV1 : Minimum CAPM2 spacing to VIA1 = 0.5")

Executing: drc(cm2 via2 (sep < 0.5) "S1DMV2 : Minimum CAPM2 spacing to VIA2 = 0.5")

Executing: drc(cm2 via2 (enc < 0.3) "E1DMV2 : Minimum CAPM2 enclosure of VIA2 = 0.3")

Executing: err_E1DMV2 = geomStraddle(via2 cm2)
	   errorLayer(err_E1DMV2 "E1DMV2 : Minimum CAPM2 enclosure of VIA2 = 0.3")

Executing: drc(met2 cm2 (enc < 0.5) "E1M2DM : Minimum MET2 enclosure of CAPM2 = 0.5")

Executing: drc(met3 cm2 (enc < 0.5) "E1M3DM : Minimum MET3 enclosure of CAPM2 = 0.5")

Executing: cm2_s = geomAndNot(geomSize(cm2 2.5) cm2)

Executing: dmm_m2 = geomButtOrOver(geomAnd(cm2_s met2) cm2)

Executing: dmm_m3 = geomButtOrOver(geomAnd(cm2_s met3) cm2)

Executing: dmm_m2v1 = geomAnd(dmm_m2 via1)

Executing: dmm_m2v2 = geomAnd(dmm_m2 via2)

Executing: dmm_m3v2 = geomAnd(dmm_m3 via2)

Executing: drc(met2 dmm_m2v1 (enc < 0.15) "E3M2V1 : Minimum MET2 enclosure of VIA1 = 0.15")

Executing: drc(met2 dmm_m2v2 (enc < 0.15) "E4M2V2 : Minimum MET2 enclosure of VIA2 = 0.15")

Executing: drc(met3 dmm_m3v2 (enc < 0.15) "E4M3V2 : Minimum MET3 enclosure of VIA2 = 0.15")

Executing: drc(geomAnd(cm2 via2) (sep < 2.0) "S3V2 : Minimum VIA2 spacing on CAPM2 = 2.0")

Executing: geomStamp(m2_dmm met2trm)

Executing: err_B7DM = geomOutside(cm2 via3)
	   errorLayer(err_B7DM "B7DM : CAPM2 without VIA3 is not allowed")

Executing: m4_dm1 = geomInside(cm2 met4trm)

Executing: geomStamp(m4_dm1 met4trm)

Executing: m4_dm = geomOverlap(m4_dm1 m2_dmm sameNet)

Executing: err_B8DM = geomAndNot(cm2 m4_dm)
	   errorLayer(err_B8DM "B8DM : MET2 and MET4 must be connected (CAPM2 must be enclosed by MET4)")

Executing: err_Q1V3 = drc(v3cm2 m4_dmm (coverage < 0.01))
	   errorLayer(err_Q1V3 "Q1V3 : Recommended minimum ratio of VIA3 to CAPM2 area = 1%")
Skip! Boundary layer has no shape

Executing: drc(cm2 via3 (sep < 0.5) "S1DMV3 : Minimum CAPM2 spacing to VIA3 = 0.5")

Executing: drc(cm2 via3 (enc < 0.3) "E1DMV3 : Minimum CAPM2 enclosure of VIA3 = 0.3")

Executing: err_E1DMV3 = geomStraddle(via3 cm2)
	   errorLayer(err_E1DMV3 "E1DMV3 : Minimum CAPM2 enclosure of VIA3 = 0.3")

Executing: dmm_m3v3 = geomAnd(dmm_m3 via3)

Executing: drc(met3 dmm_m3v3 (enc < 0.15) "E4M3V3 : Minimum MET3 enclosure of VIA3 = 0.15")

Executing: drc(geomAnd(cm2 via3) (sep < 2.0) "S3V3 : Minimum VIA3 spacing on CAPM2 = 2.0")

Executing: err_B1TM = geomAnd(cm3 geomOr(geomOr(bulk_cm bulk_cm2 bulk_cm2a bulk_cmf) bul...
	   errorLayer(err_B1TM "B1TM : CAPM3 is not allowed when CAPM, CAPM23F, CAPM34F, CAPM45F, CAPMH, CAPMH23F, CAPMH34F, CAPMH45F, CAPM2A, CAPMH2, CAPM2, CAPMH2A or CAPMH3 is present")

Executing: err_B2TMa = geomAndNot(cm3 met2trm)

Executing: err_B2TMb = geomAndNot(cm3 met3trm)

Executing: err_B2TMc = geomAndNot(cm3 met4trm)

Executing: err_B2TM = geomOr(err_B2TMa err_B2TMb err_B2TMc)
	   errorLayer(err_B2TM "B2TM : CAPM3 must be enclosed by MET2, MET3 and MET4")

Executing: err_B3TM = geomAnd(cm3 geomOr(via1 pad))
	   errorLayer(err_B3TM "B3TM : CAPM3 must not be over VIA1 or PAD")

Executing: err_B4TMa = geomOutside(cm3 via2)

Executing: err_B4TMb = geomOutside(cm3 via3)

Executing: err_B4TM = geomOr(err_B4TMa err_B4TMb)
	   errorLayer(err_B4TM "B4TM : CAPM3 without VIA2 or VIA3 is not allowed")

Executing: geomStamp(m2_tmm met2trm)

Executing: m4_tm = geomOverlap(m4_tmm m2_tmm sameNet)

Executing: err_B5TM = geomAndNot(cm3 m4_tm)
	   errorLayer(err_B5TM "B5TM : MET2 and MET4 must be connected")

Executing: err_Q2V2 = drc(v2cm3 m3_tmm (coverage < 0.01))
	   errorLayer(err_Q2V2 "Q2V2 : Recommended minimum ratio of VIA2 to CAPM3 area = 1%")
Skip! Boundary layer has no shape

Executing: err_Q2V3 = drc(v3cm3 m4_tmm (coverage < 0.01))
	   errorLayer(err_Q2V3 "Q2V3 : Recommended minimum ratio of VIA3 to CAPM3 area = 1%")
Skip! Boundary layer has no shape

Executing: err_W1TM = drc(cm3 (width < 2.0))
	   errorLayer(err_W1TM "W1TM : Minimum CAPM3 width = 2.0")

Executing: err_W2TM = geomGetBBox(cm3 (30 < length) outputInLayer)
	   errorLayer(err_W2TM "W2TM : Maximum CAPM3 bounding box size = 30.0 x 30.0")

Executing: drc(cm3 (sepNotch < 1.5) "S1TM : Minimum CAPM3 spacing/notch = 1.5")

Executing: drc(cm3 pad (sep < 10.0) "S1TMPA : Minimum CAPM3 spacing to PAD = 10.0")

Executing: drc(cm3 via1 (sep < 0.5) "S1TMV1 : Minimum CAPM3 spacing to VIA1 = 0.5")

Executing: drc(cm3 via2 (sep < 0.5) "S1TMV2 : Minimum CAPM3 spacing to VIA2 = 0.5")

Executing: drc(cm3 via3 (sep < 0.5) "S1TMV3 : Minimum CAPM3 spacing to VIA3 = 0.5")

Executing: drc(cm3 via2 (enc < 0.3) "E1TMV2 : Minimum CAPM3 enclosure of VIA2 = 0.3")

Executing: err_E1TMV2 = geomStraddle(via2 cm3)
	   errorLayer(err_E1TMV2 "E1TMV2 : Minimum CAPM3 enclosure of VIA2 = 0.3")

Executing: drc(cm3 via3 (enc < 0.3) "E1TMV3 : Minimum CAPM3 enclosure of VIA3 = 0.3")

Executing: err_E1TMV3 = geomStraddle(via3 cm3)
	   errorLayer(err_E1TMV3 "E1TMV3 : Minimum CAPM3 enclosure of VIA3 = 0.3")

Executing: drc(met2 cm3 (enc < 0.5) "E1M2TM : Minimum MET2 enclosure of CAPM3 = 0.5")

Executing: drc(met3 cm3 (enc < 0.5) "E1M3TM : Minimum MET3 enclosure of CAPM3 = 0.5")

Executing: drc(met4 cm3 (enc < 0.5) "E1M4TM : Minimum MET4 enclosure of CAPM3 = 0.5")

Executing: cm3_s = geomAndNot(geomSize(cm3 2.5) cm3)

Executing: tmm_m2 = geomButtOrOver(geomAnd(cm3_s met2) cm3)

Executing: tmm_m3 = geomButtOrOver(geomAnd(cm3_s met3) cm3)

Executing: tmm_m4 = geomButtOrOver(geomAnd(cm3_s met4) cm3)

Executing: tmm_m2v1 = geomAnd(tmm_m2 via1)

Executing: tmm_m2v2 = geomAnd(tmm_m2 via2)

Executing: tmm_m3v2 = geomAnd(tmm_m3 via2)

Executing: tmm_m3v3 = geomAnd(tmm_m3 via3)

Executing: tmm_m4v3 = geomAnd(tmm_m4 via3)

Executing: drc(met2 tmm_m2v1 (enc < 0.15) "E4M2V1 : Minimum MET2 enclosure of VIA1 = 0.15")

Executing: drc(met2 tmm_m2v2 (enc < 0.15) "E5M2V2 : Minimum MET2 enclosure of VIA2 = 0.15")

Executing: drc(met3 tmm_m3v2 (enc < 0.15) "E5M3V2 : Minimum MET3 enclosure of VIA2 = 0.15")

Executing: drc(met3 tmm_m3v3 (enc < 0.15) "E5M3V3 : Minimum MET3 enclosure of VIA3 = 0.15")

Executing: drc(met4 tmm_m4v3 (enc < 0.15) "E3M4V3 : Minimum MET4 enclosure of VIA3 = 0.15")

Executing: drc(geomAnd(cm3 via2) (sep < 2.0) "S4V2 : Minimum VIA2 spacing on CAPM3 = 2.0")

Executing: drc(geomAnd(cm3 via3) (sep < 2.0) "S4V3 : Minimum VIA3 spacing on CAPM3 = 2.0")

Executing: err_B6TM = geomOutside(cm3 vtp)
	   errorLayer(err_B6TM "B6TM : CAPM3 without VIATP is not allowed")

Executing: mt_tm1 = geomInside(cm3 mtptrm)

Executing: geomStamp(mt_tm1 mtptrm)

Executing: mt_tm = geomOverlap(mt_tm1 m3_tmm sameNet)

Executing: err_B7TM = geomAndNot(cm3 mt_tm)
	   errorLayer(err_B7TM "B7TM : MET3 and METTP must be connected (CAPM3 must be enclosed by METTP)")

Executing: err_Q3VT = drc(vtpcm3 mt_tmm (coverage < 0.01))
	   errorLayer(err_Q3VT "Q3VT : Recommended minimum ratio of VIATP to CAPM3 area = 1%")
Skip! Boundary layer has no shape

Executing: drc(cm3 vtp (sep < 0.5) "S1TMVT : Minimum CAPM3 spacing to VIATP = 0.5")

Executing: drc(cm3 vtp (enc < 0.3) "E1TMVT : Minimum CAPM3 enclosure of VIATP = 0.3")

Executing: err_E1TMVT = geomStraddle(vtp cm3)
	   errorLayer(err_E1TMVT "E1TMVT : Minimum CAPM3 enclosure of VIATP = 0.3")

Executing: tmm_m4vt = geomAnd(tmm_m4 vtp)

Executing: drc(met4 tmm_m4vt (enc < 0.15) "E4M4VT : Minimum MET4 enclosure of VIATP = 0....

Executing: drc(geomAnd(cm3 vtp) (sep < 2.0) "S6VT : Minimum VIATP spacing on CAPM3 = 2.0")

Executing: err_B1DH = geomAnd(cmh2 geomOr(bulk_m geomOr(bulk_cmh bulk_cmh2a bulk_cmh3 bu...
	   errorLayer(err_B1DH "B1DH : CAPMH2 is not allowed when CAPM, CAPM23F, CAPM34F, CAPM45F, CAPMH, CAPMH23F, CAPMH34F, CAPMH45F, CAPM2, CAPM2A, CAPMH2A, CAPM3 or CAPMH3 is present")

Executing: err_B2DHa = geomAndNot(cmh2 met2trm)

Executing: err_B2DHb = geomAndNot(cmh2 met3trm)

Executing: err_B2DH = geomOr(err_B2DHa err_B2DHb)
	   errorLayer(err_B2DH "B2DH : CAPMH2 must be enclosed by MET2 and MET3")

Executing: err_B3DH = geomAnd(cmh2 geomOr(via1 pad))
	   errorLayer(err_B3DH "B3DH : CAPMH2 must not be over VIA1 or PAD")

Executing: err_B4DH = geomOutside(cmh2 via2)
	   errorLayer(err_B4DH "B4DH : CAPMH2 without VIA2 is not allowed")

Executing: err_Q5V2 = drc(v2cmh2 m3_dmmh (coverage < 0.01))
	   errorLayer(err_Q5V2 "Q5V2 : Recommended minimum ratio of VIA2 to CAPMH2 area = 1%")
Skip! Boundary layer has no shape

Executing: err_W1DH = drc(cmh2 (width < 2.0))
	   errorLayer(err_W1DH "W1DH : Minimum CAPMH2 width = 2.0")

Executing: err_W2DH = geomGetBBox(cmh2 (30 < length) outputInLayer)
	   errorLayer(err_W2DH "W2DH : Maximum CAPMH2 bounding box size = 30.0 x 30.0")

Executing: drc(cmh2 (sepNotch < 1.5) "S1DH : Minimum CAPMH2 spacing/notch = 1.5")

Executing: drc(cmh2 pad (sep < 10.0) "S1DHPA : Minimum CAPMH2 spacing to PAD = 10.0")

Executing: drc(cmh2 via1 (sep < 0.5) "S1DHV1 : Minimum CAPMH2 spacing to VIA1 = 0.5")

Executing: drc(cmh2 via2 (sep < 0.5) "S1DHV2 : Minimum CAPMH2 spacing to VIA2 = 0.5")

Executing: drc(cmh2 via2 (enc < 0.3) "E1DHV2 : Minimum CAPMH2 enclosure of VIA2 = 0.3")

Executing: err_E1DHV2 = geomStraddle(via2 cmh2)
	   errorLayer(err_E1DHV2 "E1DHV2 : Minimum CAPMH2 enclosure of VIA2 = 0.3")

Executing: drc(met2 cmh2 (enc < 0.5) "E1M2DH : Minimum MET2 enclosure of CAPMH2 = 0.5")

Executing: drc(met3 cmh2 (enc < 0.5) "E1M3DH : Minimum MET3 enclosure of CAPMH2 = 0.5")

Executing: cmh2_s = geomAndNot(geomSize(cmh2 2.5) cmh2)

Executing: dmmh_m2 = geomButtOrOver(geomAnd(cmh2_s met2) cmh2)

Executing: dmmh_m3 = geomButtOrOver(geomAnd(cmh2_s met3) cmh2)

Executing: dmmh_m2v1 = geomAnd(dmmh_m2 via1)

Executing: dmmh_m2v2 = geomAnd(dmmh_m2 via2)

Executing: dmmh_m3v2 = geomAnd(dmmh_m3 via2)

Executing: drc(met2 dmmh_m2v1 (enc < 0.15) "E3M2V1 : Minimum MET2 enclosure of VIA1 = 0....

Executing: drc(met2 dmmh_m2v2 (enc < 0.15) "E4M2V2 : Minimum MET2 enclosure of VIA2 = 0....

Executing: drc(met3 dmmh_m3v2 (enc < 0.15) "E4M3V2 : Minimum MET3 enclosure of VIA2 = 0....

Executing: drc(geomAnd(cmh2 via2) (sep < 2.0) "S7V2 : Minimum VIA2 spacing on CAPMH2 = 2...

Executing: geomStamp(m2_dmmh met2trm)

Executing: err_B7DH = geomOutside(cmh2 via3)
	   errorLayer(err_B7DH "B7DH : CAPMH2 without VIA3 is not allowed")

Executing: m4_dmh1 = geomInside(cmh2 met4trm)

Executing: geomStamp(m4_dmh1 met4trm)

Executing: m4_dmh = geomOverlap(m4_dmh1 m2_dmmh sameNet)

Executing: err_B8DH = geomAndNot(cmh2 m4_dmh)
	   errorLayer(err_B8DH "B8DH : MET2 and MET4 must be connected (CAPMH2 must be enclosed by MET4)")

Executing: err_Q5V3 = drc(v3cmh2 m4_dmmh (coverage < 0.01))
	   errorLayer(err_Q5V3 "Q5V3 : Recommended minimum ratio of VIA3 to CAPMH2 area = 1%")
Skip! Boundary layer has no shape

Executing: drc(cmh2 via3 (sep < 0.5) "S1DHV3 : Minimum CAPMH2 spacing to VIA3 = 0.5")

Executing: drc(cmh2 via3 (enc < 0.3) "E1DHV3 : Minimum CAPMH2 enclosure of VIA3 = 0.3")

Executing: err_E1DHV3 = geomStraddle(via3 cmh2)
	   errorLayer(err_E1DHV3 "E1DHV3 : Minimum CAPMH2 enclosure of VIA3 = 0.3")

Executing: dmmh_m3v3 = geomAnd(dmmh_m3 via3)

Executing: drc(met3 dmmh_m3v3 (enc < 0.15) "E4M3V3 : Minimum MET3 enclosure of VIA3 = 0....

Executing: drc(geomAnd(cmh2 via3) (sep < 2.0) "S7V3 : Minimum VIA3 spacing on CAPMH2 = 2...

Executing: err_B1TH = geomAnd(cmh3 geomOr(bulk_m geomOr(bulk_cmh bulk_cmh2 bulk_cmh2a bu...
	   errorLayer(err_B1TH "B1TH : CAPMH3 is not allowed when CAPM, CAPM23F, CAPM34F, CAPM45F, CAPMH, CAPMH23F, CAPMH34F, CAPMH45F, CAPM2, CAPM2A, CAPMH2, CAPMH2A or CAPM3 is present")

Executing: err_B2THa = geomAndNot(cmh3 met2trm)

Executing: err_B2THb = geomAndNot(cmh3 met3trm)

Executing: err_B2THc = geomAndNot(cmh3 met4trm)

Executing: err_B2TH = geomOr(err_B2THa err_B2THb err_B2THc)
	   errorLayer(err_B2TH "B2TH : CAPMH3 must be enclosed by MET2, MET3 and MET4")

Executing: err_B3TH = geomAnd(cmh3 geomOr(via1 pad))
	   errorLayer(err_B3TH "B3TH : CAPMH3 must not be over VIA1 or PAD")

Executing: err_B4THa = geomOutside(cmh3 via2)

Executing: err_B4THb = geomOutside(cmh3 via3)

Executing: err_B4TH = geomOr(err_B4THa err_B4THb)
	   errorLayer(err_B4TH "B4TH : CAPMH3 without VIA2 or VIA3 is not allowed")

Executing: geomStamp(m2_tmmh met2trm)

Executing: m4_tmh = geomOverlap(m4_tmmh m2_tmmh sameNet)

Executing: err_B5TH = geomAndNot(cmh3 m4_tmh)
	   errorLayer(err_B5TH "B5TH : MET2 and MET4 must be connected")

Executing: err_Q6V2 = drc(v2cmh3 m3_tmmh (coverage < 0.01))
	   errorLayer(err_Q6V2 "Q6V2 : Recommended minimum ratio of VIA2 to CAPMH3 area = 1%")
Skip! Boundary layer has no shape

Executing: err_Q6V3 = drc(v3cmh3 m4_tmmh (coverage < 0.01))
	   errorLayer(err_Q6V3 "Q6V3 : Recommended minimum ratio of VIA3 to CAPMH3 area = 1%")
Skip! Boundary layer has no shape

Executing: err_W1TH = drc(cmh3 (width < 2.0))
	   errorLayer(err_W1TH "W1TH : Minimum CAPMH3 width = 2.0")

Executing: err_W2TH = geomGetBBox(cmh3 (30 < length) outputInLayer)
	   errorLayer(err_W2TH "W2TH : Maximum CAPMH3 bounding box size = 30.0 x 30.0")

Executing: drc(cmh3 (sepNotch < 1.5) "S1TH : Minimum CAPMH3 spacing/notch = 1.5")

Executing: drc(cmh3 pad (sep < 10.0) "S1THPA : Minimum CAPMH3 spacing to PAD = 10.0")

Executing: drc(cmh3 via1 (sep < 0.5) "S1THV1 : Minimum CAPMH3 spacing to VIA1 = 0.5")

Executing: drc(cmh3 via2 (sep < 0.5) "S1THV2 : Minimum CAPMH3 spacing to VIA2 = 0.5")

Executing: drc(cmh3 via3 (sep < 0.5) "S1THV3 : Minimum CAPMH3 spacing to VIA3 = 0.5")

Executing: drc(cmh3 via2 (enc < 0.3) "E1THV2 : Minimum CAPMH3 enclosure of VIA2 = 0.3")

Executing: err_E1THV2 = geomStraddle(via2 cmh3)
	   errorLayer(err_E1THV2 "E1THV2 : Minimum CAPMH3 enclosure of VIA2 = 0.3")

Executing: drc(cmh3 via3 (enc < 0.3) "E1THV3 : Minimum CAPMH3 enclosure of VIA3 = 0.3")

Executing: err_E1THV3 = geomStraddle(via3 cmh3)
	   errorLayer(err_E1THV3 "E1THV3 : Minimum CAPMH3 enclosure of VIA3 = 0.3")

Executing: drc(met2 cmh3 (enc < 0.5) "E1M2TH : Minimum MET2 enclosure of CAPMH3 = 0.5")

Executing: drc(met3 cmh3 (enc < 0.5) "E1M3TH : Minimum MET3 enclosure of CAPMH3 = 0.5")

Executing: drc(met4 cmh3 (enc < 0.5) "E1M4TH : Minimum MET4 enclosure of CAPMH3 = 0.5")

Executing: cmh3_s = geomAndNot(geomSize(cmh3 2.5) cmh3)

Executing: tmmh_m2 = geomButtOrOver(geomAnd(cmh3_s met2) cmh3)

Executing: tmmh_m3 = geomButtOrOver(geomAnd(cmh3_s met3) cmh3)

Executing: tmmh_m4 = geomButtOrOver(geomAnd(cmh3_s met4) cmh3)

Executing: tmmh_m2v1 = geomAnd(tmmh_m2 via1)

Executing: tmmh_m2v2 = geomAnd(tmmh_m2 via2)

Executing: tmmh_m3v2 = geomAnd(tmmh_m3 via2)

Executing: tmmh_m3v3 = geomAnd(tmmh_m3 via3)

Executing: tmmh_m4v3 = geomAnd(tmmh_m4 via3)

Executing: drc(met2 tmmh_m2v1 (enc < 0.15) "E4M2V1 : Minimum MET2 enclosure of VIA1 = 0....

Executing: drc(met2 tmmh_m2v2 (enc < 0.15) "E5M2V2 : Minimum MET2 enclosure of VIA2 = 0....

Executing: drc(met3 tmmh_m3v2 (enc < 0.15) "E5M3V2 : Minimum MET3 enclosure of VIA2 = 0....

Executing: drc(met3 tmmh_m3v3 (enc < 0.15) "E5M3V3 : Minimum MET3 enclosure of VIA3 = 0....

Executing: drc(met4 tmmh_m4v3 (enc < 0.15) "E3M4V3 : Minimum MET4 enclosure of VIA3 = 0....

Executing: drc(geomAnd(cmh3 via2) (sep < 2.0) "S8V2 : Minimum VIA2 spacing on CAPMH3 = 2...

Executing: drc(geomAnd(cmh3 via3) (sep < 2.0) "S8V3 : Minimum VIA3 spacing on CAPMH3 = 2...

Executing: err_B6TH = geomOutside(cmh3 vtp)
	   errorLayer(err_B6TH "B6TH : CAPMH3 without VIATP is not allowed")

Executing: mt_tmh1 = geomInside(cmh3 mtptrm)

Executing: geomStamp(mt_tmh1 mtptrm)

Executing: mt_tmh = geomOverlap(mt_tmh1 m3_tmmh sameNet)

Executing: err_B7TH = geomAndNot(cmh3 mt_tmh)
	   errorLayer(err_B7TH "B7TH : MET3 and METTP must be connected (CAPMH3 must be enclosed by METTP)")

Executing: err_Q6VT = drc(vtpcmh3 mt_tmmh (coverage < 0.01))
	   errorLayer(err_Q6VT "Q6VT : Recommended minimum ratio of VIATP to CAPMH3 area = 1%")
Skip! Boundary layer has no shape

Executing: drc(cmh3 vtp (sep < 0.5) "S1THVT : Minimum CAPMH3 spacing to VIATP = 0.5")

Executing: drc(cmh3 vtp (enc < 0.3) "E1THVT : Minimum CAPMH3 enclosure of VIATP = 0.3")

Executing: err_E1THVT = geomStraddle(vtp cmh3)
	   errorLayer(err_E1THVT "E1THVT : Minimum CAPMH3 enclosure of VIATP = 0.3")

Executing: tmmh_m4vt = geomAnd(tmmh_m4 vtp)

Executing: drc(met4 tmmh_m4vt (enc < 0.15) "E4M4VT : Minimum MET4 enclosure of VIATP = 0...

Executing: drc(geomAnd(cmh3 vtp) (sep < 2.0) "S8VT : Minimum VIATP spacing on CAPMH3 = 2...

Executing: err_B3C3 = geomAnd(cm23f geomOr(geomOr(bulk_cm_a bulk_cm34f bulk_cm45f) bulk_...
	   errorLayer(err_B3C3 "B3C3 : CAPM23F is not allowed when CAPM, CAPM34F, CAPM45F, CAPMH, CAPMH23F, CAPMH34F, CAPMH45F, CAPM2, CAPM2A, CAPMH2, CAPMH2A, CAPM3 or CAPMH3 is present")

Executing: err_B2C3 = geomAnd(cm23f geomOr(via1 pad))
	   errorLayer(err_B2C3 "B2C3 : CAPM23F overlap of VIA1 or PAD is not allowed")

Executing: err_B1C3 = geomAndNot(cm23f met2)
	   errorLayer(err_B1C3 "B1C3 : CAPM23F without MET2 is not allowed")

Executing: err_W1C3 = drc(cm23f (width < 2.0))
	   errorLayer(err_W1C3 "W1C3 : Minimum CAPM23F width = 2.0")

Executing: err_W2C3 = geomGetBBox(cm23f (30 < length) outputInLayer)
	   errorLayer(err_W2C3 "W2C3 : Maximum CAPM23F bounding box size = 30.0 x 30.0")

Executing: drc(cm23f (sepNotch < 1.5) "S1C3 : Minimum CAPM23F spacing/notch = 1.5")

Executing: drc(cm23f pad (sep < 10.0) "S1C3PA : Minimum CAPM23F spacing to PAD = 10.0")

Executing: drc(cm23f via1 (sep < 0.5) "S1C3V1 : Minimum CAPM23F spacing to VIA1 = 0.5")

Executing: drc(cm23f via2 (sep < 0.5) "S1C3V2 : Minimum CAPM23F spacing to VIA2 = 0.5")

Executing: drc(cm23f via2 (enc < 0.3) "E1C3V2 : Minimum CAPM23F enclosure of VIA2 = 0.3")

Executing: err_E1C3V2 = geomStraddle(via2 cm23f)
	   errorLayer(err_E1C3V2 "E1C3V2 : Minimum CAPM23F enclosure of VIA2 = 0.3")

Executing: drc(bm23f geomAnd(bm23f1 via2) (enc < 0.15) "E6M2V2 : Minimum MET2 enclosure ...

Executing: err_S5V2 = drc(v2cm (sep < 2.0))
	   errorLayer(err_S5V2 "S5V2 : Minimum VIA2 spacing on CAPM23F = 2.0")

Executing: err_Q3V2 = drc(v2cm cm23f (coverage < 0.01))
	   errorLayer(err_Q3V2 "Q3V2 : Recommended minimum ratio of VIA2 to CAPM23F area = 1%")
Skip! Boundary layer has no shape

Executing: drc(bm23f cm23f (enc < 0.5) "E1M2C3 : Minimum MET2 enclosure of CAPM23F = 0.5")

Executing: drc(met2 geomInside(via1 bm23f1) (enc < 0.15) "E5M2V1 : Minimum MET2 enclosur...

Executing: err_B3C4 = geomAnd(cm34f geomOr(geomOr(bulk_cm_a bulk_cm23f bulk_cm45f) bulk_...
	   errorLayer(err_B3C4 "B3C4 : CAPM34F is not allowed when CAPM, CAPM23F, CAPM45F, CAPMH, CAPMH23F, CAPMH34F, CAPMH45F, CAPM2, CAPM2A, CAPMH2, CAPMH2A, CAPM3 or CAPMH3 is present")

Executing: err_B2C4 = geomAnd(cm34f geomOr(via2 pad))
	   errorLayer(err_B2C4 "B2C4 : CAPM34F overlap of VIA2 or PAD is not allowed")

Executing: err_B1C4 = geomAndNot(cm34f met3)
	   errorLayer(err_B1C4 "B1C4 : CAPM34F without MET3 is not allowed")

Executing: err_W1C4 = drc(cm34f (width < 2.0))
	   errorLayer(err_W1C4 "W1C4 : Minimum CAPM34F width = 2.0")

Executing: err_W2C4 = geomGetBBox(cm34f (30 < length) outputInLayer)
	   errorLayer(err_W2C4 "W2C4 : Maximum CAPM34F bounding box size = 30.0 x 30.0")

Executing: drc(cm34f (sepNotch < 1.5) "S1C4 : Minimum CAPM34F spacing/notch = 1.5")

Executing: drc(cm34f pad (sep < 10.0) "S1C4PA : Minimum CAPM34F spacing to PAD = 10.0")

Executing: drc(cm34f via2 (sep < 0.5) "S1C4V2 : Minimum CAPM34F spacing to VIA2 = 0.5")

Executing: drc(cm34f via3 (sep < 0.5) "S1C4V3 : Minimum CAPM34F spacing to VIA3 = 0.5")

Executing: drc(cm34f via3 (enc < 0.3) "E1C4V3 : Minimum CAPM34F enclosure of VIA3 = 0.3")

Executing: err_E1C4V3 = geomStraddle(via3 cm34f)
	   errorLayer(err_E1C4V3 "E1C4V3 : Minimum CAPM34F enclosure of VIA3 = 0.3")

Executing: drc(bm34f geomAnd(bm34f1 via3) (enc < 0.15) "E6M3V3 : Minimum MET3 enclosure ...

Executing: err_S5V3 = drc(v3cm (sep < 2.0))
	   errorLayer(err_S5V3 "S5V3 : Minimum VIA3 spacing on CAPM34F = 2.0")

Executing: err_Q3V3 = drc(v3cm cm34f (coverage < 0.01))
	   errorLayer(err_Q3V3 "Q3V3 : Recommended minimum ratio of VIA3 to CAPM34F area = 1%")
Skip! Boundary layer has no shape

Executing: drc(bm34f cm34f (enc < 0.5) "E1M3C4 : Minimum MET3 enclosure of CAPM34F = 0.5")

Executing: drc(met3 geomInside(via2 bm34f1) (enc < 0.15) "E6M3V2 : Minimum MET3 enclosur...

Executing: err_B3C5 = geomAnd(cm45f geomOr(geomOr(bulk_cm_a bulk_cm23f bulk_cm34f) bulk_...
	   errorLayer(err_B3C5 "B3C5 : CAPM45F is not allowed when CAPM, CAPM23F, CAPM34F, CAPMH, CAPMH23F, CAPMH34F, CAPMH45F, CAPM2, CAPM2A, CAPMH2, CAPMH2A, CAPM3 or CAPMH3 is present")

Executing: err_B4C5 = geomOr(cm45f)
	   errorLayer(err_B4C5 "B4C5 : CAPM45F without module MET5 is not allowed")

Executing: err_B3H3 = geomAnd(cmh23f geomOr(geomOr(bulk_cmh_a bulk_cmh34f bulk_cmh45f) b...
	   errorLayer(err_B3H3 "B3H3 : CAPMH23F is not allowed when CAPM, CAPM23F, CAPM34F, CAPM45F, CAPMH, CAPMH34F, CAPMH45F, CAPM2, CAPM2A, CAPMH2, CAPMH2A, CAPM3 or CAPMH3 is present")

Executing: err_B2H3 = geomAnd(cmh23f geomOr(via1 pad))
	   errorLayer(err_B2H3 "B2H3 : CAPMH23F overlap of VIA1 or PAD is not allowed")

Executing: err_B1H3 = geomAndNot(cmh23f met2)
	   errorLayer(err_B1H3 "B1H3 : CAPMH23F without MET2 is not allowed")

Executing: err_W1H3 = drc(cmh23f (width < 2.0))
	   errorLayer(err_W1H3 "W1H3 : Minimum CAPMH23F width = 2.0")

Executing: err_W2H3 = geomGetBBox(cmh23f (30 < length) outputInLayer)
	   errorLayer(err_W2H3 "W2H3 : Maximum CAPMH23F bounding box size = 30.0 x 30.0")

Executing: drc(cmh23f (sepNotch < 1.5) "S1H3 : Minimum CAPMH23F spacing/notch = 1.5")

Executing: drc(cmh23f pad (sep < 10.0) "S1H3PA : Minimum CAPMH23F spacing to PAD = 10.0")

Executing: drc(cmh23f via1 (sep < 0.5) "S1H3V1 : Minimum CAPMH23F spacing to VIA1 = 0.5")

Executing: drc(cmh23f via2 (sep < 0.5) "S1H3V2 : Minimum CAPMH23F spacing to VIA2 = 0.5")

Executing: drc(cmh23f via2 (enc < 0.3) "E1H3V2 : Minimum CAPMH23F enclosure of VIA2 = 0.3")

Executing: err_E1H3V2 = geomStraddle(via2 cmh23f)
	   errorLayer(err_E1H3V2 "E1H3V2 : Minimum CAPMH23F enclosure of VIA2 = 0.3")

Executing: drc(bmh23f geomAnd(bmh23f1 via2) (enc < 0.15) "E7M2V2 : Minimum MET2 enclosur...

Executing: err_S6V2 = drc(v2cmh (sep < 2.0))
	   errorLayer(err_S6V2 "S6V2 : Minimum VIA2 spacing on CAPMH23F = 2.0")

Executing: err_Q4V2 = drc(v2cmh cmh23f (coverage < 0.01))
	   errorLayer(err_Q4V2 "Q4V2 : Recommended minimum ratio of VIA2 to CAPMH23F area = 1%")
Skip! Boundary layer has no shape

Executing: drc(bmh23f cmh23f (enc < 0.5) "E1M2H3 : Minimum MET2 enclosure of CAPMH23F = ...

Executing: drc(met2 geomInside(via1 bmh23f1) (enc < 0.15) "E6M2V1 : Minimum MET2 enclosu...

Executing: err_B3H4 = geomAnd(cmh34f geomOr(geomOr(bulk_cmh_a bulk_cmh23f bulk_cmh45f) b...
	   errorLayer(err_B3H4 "B3H4 : CAPMH34F is not allowed when CAPM, CAPM23F, CAPM34F, CAPM45F, CAPMH, CAPMH23F, CAPMH45F, CAPM2, CAPM2A, CAPMH2, CAPMH2A, CAPM3 or CAPMH3 is present")

Executing: err_B2H4 = geomAnd(cmh34f geomOr(via2 pad))
	   errorLayer(err_B2H4 "B2H4 : CAPMH34F overlap of VIA2 or PAD is not allowed")

Executing: err_B1H4 = geomAndNot(cmh34f met3)
	   errorLayer(err_B1H4 "B1H4 : CAPMH34F without MET3 is not allowed")

Executing: err_W1H4 = drc(cmh34f (width < 2.0))
	   errorLayer(err_W1H4 "W1H4 : Minimum CAPMH34F width = 2.0")

Executing: err_W2H4 = geomGetBBox(cmh34f (30 < length) outputInLayer)
	   errorLayer(err_W2H4 "W2H4 : Maximum CAPMH34F bounding box size = 30.0 x 30.0")

Executing: drc(cmh34f (sepNotch < 1.5) "S1H4 : Minimum CAPMH34F spacing/notch = 1.5")

Executing: drc(cmh34f pad (sep < 10.0) "S1H4PA : Minimum CAPMH34F spacing to PAD = 10.0")

Executing: drc(cmh34f via2 (sep < 0.5) "S1H4V2 : Minimum CAPMH34F spacing to VIA2 = 0.5")

Executing: drc(cmh34f via3 (sep < 0.5) "S1H4V3 : Minimum CAPMH34F spacing to VIA3 = 0.5")

Executing: drc(cmh34f via3 (enc < 0.3) "E1H4V3 : Minimum CAPMH34F enclosure of VIA3 = 0.3")

Executing: err_E1H4V3 = geomStraddle(via3 cmh34f)
	   errorLayer(err_E1H4V3 "E1H4V3 : Minimum CAPMH34F enclosure of VIA3 = 0.3")

Executing: drc(bmh34f geomAnd(bmh34f1 via3) (enc < 0.15) "E7M3V3 : Minimum MET3 enclosur...

Executing: err_S6V3 = drc(v3cmh (sep < 2.0))
	   errorLayer(err_S6V3 "S6V3 : Minimum VIA3 spacing on CAPMH34F = 2.0")

Executing: err_Q4V3 = drc(v3cmh cmh34f (coverage < 0.01))
	   errorLayer(err_Q4V3 "Q4V3 : Recommended minimum ratio of VIA3 to CAPMH34F area = 1%")
Skip! Boundary layer has no shape

Executing: drc(bmh34f cmh34f (enc < 0.5) "E1M3H4 : Minimum MET3 enclosure of CAPMH34F = ...

Executing: drc(met3 geomInside(via2 bmh34f1) (enc < 0.15) "E7M3V2 : Minimum MET3 enclosu...

Executing: err_B3H5 = geomAnd(cmh45f geomOr(geomOr(bulk_cmh_a bulk_cmh23f bulk_cmh34f) b...
	   errorLayer(err_B3H5 "B3H5 : CAPMH45F is not allowed when CAPM, CAPM23F, CAPM34F, CAPM45F, CAPMH, CAPMH23F, CAPMH34F, CAPM2, CAPM2A, CAPMH2, CAPMH2A, CAPM3 or CAPMH3 is present")

Executing: err_B4H5 = geomOr(cmh45f)
	   errorLayer(err_B4H5 "B4H5 : CAPMH45F without module MET5 is not allowed")

Executing: err_B1D3 = geomAnd(cm2a geomOr(geomOr(bulk_cm bulk_cm2 bulk_cm3 bulk_cmf) bul...
	   errorLayer(err_B1D3 "B1D3 : CAPM2A is not allowed when CAPM, CAPM23F, CAPM34F, CAPM45F, CAPM2, CAPM3, CAPMH, CAPMH23F, CAPMH34F, CAPMH45F, CAPMH2, CAPMH2A or CAPMH3 is present")

Executing: err_B2D3a = geomAndNot(cm2a met3trm)

Executing: err_B2D3b = geomAndNot(cm2a met4trm)

Executing: err_B2D3 = geomOr(err_B2D3a err_B2D3b)
	   errorLayer(err_B2D3 "B2D3 : CAPM2A must be enclosed by MET3 and MET4")

Executing: err_B3D3 = geomAnd(cm2a geomOr(via2 pad))
	   errorLayer(err_B3D3 "B3D3 : CAPM2A must not be over VIA2 or PAD")

Executing: err_B4D3 = geomOutside(cm2a via3)
	   errorLayer(err_B4D3 "B4D3 : CAPM2A without VIA3 is not allowed")

Executing: err_Q7V3 = drc(v3cm2a m4_dmma (coverage < 0.01))
	   errorLayer(err_Q7V3 "Q7V3 : Recommended minimum ratio of VIA3 to CAPM2A area = 1%")
Skip! Boundary layer has no shape

Executing: err_W1D3 = drc(cm2a (width < 2.0))
	   errorLayer(err_W1D3 "W1D3 : Minimum CAPM2A width = 2.0")

Executing: err_W2D3 = geomGetBBox(cm2a (30 < length) outputInLayer)
	   errorLayer(err_W2D3 "W2D3 : Maximum CAPM2A bounding box size = 30.0 x 30.0")

Executing: drc(cm2a (sepNotch < 1.5) "S1D3 : Minimum CAPM2A spacing/notch = 1.5")

Executing: drc(cm2a pad (sep < 10.0) "S1D3PA : Minimum CAPM2A spacing to PAD = 10.0")

Executing: drc(cm2a via2 (sep < 0.5) "S1D3V2 : Minimum CAPM2A spacing to VIA2 = 0.5")

Executing: drc(cm2a via3 (sep < 0.5) "S1D3V3 : Minimum CAPM2A spacing to VIA3 = 0.5")

Executing: drc(cm2a via3 (enc < 0.3) "E1D3V3 : Minimum CAPM2A enclosure of VIA3 = 0.3")

Executing: err_E1D3V3 = geomStraddle(via3 cm2a)
	   errorLayer(err_E1D3V3 "E1D3V3 : Minimum CAPM2A enclosure of VIA3 = 0.3")

Executing: drc(met3 cm2a (enc < 0.5) "E1M3D3 : Minimum MET3 enclosure of CAPM2A = 0.5")

Executing: drc(met4 cm2a (enc < 0.5) "E1M4D3 : Minimum MET4 enclosure of CAPM2A = 0.5")

Executing: cm2a_s = geomAndNot(geomSize(cm2a 2.5) cm2a)

Executing: dmma_m3 = geomButtOrOver(geomAnd(cm2a_s met3) cm2a)

Executing: dmma_m4 = geomButtOrOver(geomAnd(cm2a_s met4) cm2a)

Executing: dmma_m3v2 = geomAnd(dmma_m3 via2)

Executing: dmma_m3v3 = geomAnd(dmma_m3 via3)

Executing: dmma_m4v3 = geomAnd(dmma_m4 via3)

Executing: drc(met3 dmma_m3v2 (enc < 0.15) "E3M3V2 : Minimum MET3 enclosure of VIA2 = 0....

Executing: drc(met3 dmma_m3v3 (enc < 0.15) "E8M3V3 : Minimum MET3 enclosure of VIA3 = 0....

Executing: drc(met4 dmma_m4v3 (enc < 0.15) "E4M4V3 : Minimum MET4 enclosure of VIA3 = 0....

Executing: drc(geomAnd(cm2a via3) (sep < 2.0) "S9V3 : Minimum VIA3 spacing on CAPM2A = 2...

Executing: geomStamp(m3_dmma met3trm)

Executing: err_B5D3 = geomOutside(cm2a vtp)
	   errorLayer(err_B5D3 "B5D3 : CAPM2A without VIATP is not allowed")

Executing: mt_dma1 = geomInside(cm2a mtptrm)

Executing: geomStamp(mt_dma1 mtptrm)

Executing: mt_dma = geomOverlap(mt_dma1 m3_dmma sameNet)

Executing: err_B6D3 = geomAndNot(cm2a mt_dma)
	   errorLayer(err_B6D3 "B6D3 : MET3 and METTP must be connected (CAPM2A must be enclosed by METTP)")

Executing: err_Q7VT = drc(vtpcm2a mt_dmma (coverage < 0.01))
	   errorLayer(err_Q7VT "Q7VT : Recommended minimum ratio of VIATP to CAPM2A area = 1%")
Skip! Boundary layer has no shape

Executing: drc(cm2a vtp (sep < 0.5) "S1D3VT : Minimum CAPM2A spacing to VIATP = 0.5")

Executing: drc(cm2a vtp (enc < 0.3) "E1D3VT : Minimum CAPM2A enclosure of VIATP = 0.3")

Executing: err_E1D3VT = geomStraddle(vtp cm2a)
	   errorLayer(err_E1D3VT "E1D3VT : Minimum CAPM2A enclosure of VIATP = 0.3")

Executing: dmma_m4vt = geomAnd(dmma_m4 vtp)

Executing: drc(met4 dmma_m4vt (enc < 0.15) "E5M4VT : Minimum MET4 enclosure of VIATP = 0...

Executing: drc(geomAnd(cm2a vtp) (sep < 2.0) "S2VT : Minimum VIATP spacing on CAPM2A = 2...

Executing: err_B1K3 = geomAnd(cmh2a geomOr(bulk_m geomOr(bulk_cmh bulk_cmh2 bulk_cmh3 bu...
	   errorLayer(err_B1K3 "B1K3 : CAPMH2A is not allowed when CAPM, CAPM23F, CAPM34F, CAPM45F, CAPM2, CAPM3, CAPMH, CAPMH23F, CAPMH34F, CAPMH45F, CAPMH2, CAPM2A or CAPMH3 is present")

Executing: err_B2K3a = geomAndNot(cmh2a met3trm)

Executing: err_B2K3b = geomAndNot(cmh2a met4trm)

Executing: err_B2K3 = geomOr(err_B2K3a err_B2K3b)
	   errorLayer(err_B2K3 "B2K3 : CAPMH2A must be enclosed by MET3 and MET4")

Executing: err_B3K3 = geomAnd(cmh2a geomOr(via2 pad))
	   errorLayer(err_B3K3 "B3K3 : CAPMH2A must not be over VIA2 or PAD")

Executing: err_B4K3 = geomOutside(cmh2a via3)
	   errorLayer(err_B4K3 "B4K3 : CAPMH2A without VIA3 is not allowed")

Executing: err_Q8V3 = drc(v3cmh2a m4_dmmha (coverage < 0.01))
	   errorLayer(err_Q8V3 "Q8V3 : Recommended minimum ratio of VIA3 to CAPMH2A area = 1%")
Skip! Boundary layer has no shape

Executing: err_W1K3 = drc(cmh2a (width < 2.0))
	   errorLayer(err_W1K3 "W1K3 : Minimum CAPMH2A width = 2.0")

Executing: err_W2K3 = geomGetBBox(cmh2a (30 < length) outputInLayer)
	   errorLayer(err_W2K3 "W2K3 : Maximum CAPMH2A bounding box size = 30.0 x 30.0")

Executing: drc(cmh2a (sepNotch < 1.5) "S1K3 : Minimum CAPMH2A spacing/notch = 1.5")

Executing: drc(cmh2a pad (sep < 10.0) "S1K3PA : Minimum CAPMH2A spacing to PAD = 10.0")

Executing: drc(cmh2a via2 (sep < 0.5) "S1K3V2 : Minimum CAPMH2A spacing to VIA2 = 0.5")

Executing: drc(cmh2a via3 (sep < 0.5) "S1K3V3 : Minimum CAPMH2A spacing to VIA3 = 0.5")

Executing: drc(cmh2a via3 (enc < 0.3) "E1K3V3 : Minimum CAPMH2A enclosure of VIA3 = 0.3")

Executing: err_E1K3V3 = geomStraddle(via3 cmh2a)
	   errorLayer(err_E1K3V3 "E1K3V3 : Minimum CAPMH2A enclosure of VIA3 = 0.3")

Executing: drc(met3 cmh2a (enc < 0.5) "E1M3K3 : Minimum MET3 enclosure of CAPMH2A = 0.5")

Executing: drc(met4 cmh2a (enc < 0.5) "E1M4K3 : Minimum MET4 enclosure of CAPMH2A = 0.5")

Executing: cmh2a_s = geomAndNot(geomSize(cmh2a 2.5) cmh2a)

Executing: dmmha_m3 = geomButtOrOver(geomAnd(cmh2a_s met3) cmh2a)

Executing: dmmha_m4 = geomButtOrOver(geomAnd(cmh2a_s met4) cmh2a)

Executing: dmmha_m3v2 = geomAnd(dmmha_m3 via2)

Executing: dmmha_m3v3 = geomAnd(dmmha_m3 via3)

Executing: dmmha_m4v3 = geomAnd(dmmha_m4 via3)

Executing: drc(met3 dmmha_m3v2 (enc < 0.15) "E8M3V2 : Minimum MET3 enclosure of VIA2 = 0...

Executing: drc(met3 dmmha_m3v3 (enc < 0.15) "E9M3V3 : Minimum MET3 enclosure of VIA3 = 0...

Executing: drc(met4 dmmha_m4v3 (enc < 0.15) "E5M4V3 : Minimum MET4 enclosure of VIA3 = 0...

Executing: drc(geomAnd(cmh2a via3) (sep < 2.0) "S10V3 : Minimum VIA3 spacing on CAPMH2A ...

Executing: geomStamp(m3_dmmha met3trm)

Executing: err_B5K3 = geomOutside(cmh2a vtp)
	   errorLayer(err_B5K3 "B5K3 : CAPMH2A without VIATP is not allowed")

Executing: mt_dmha1 = geomInside(cmh2a mtptrm)

Executing: geomStamp(mt_dmha1 mtptrm)

Executing: mt_dmha = geomOverlap(mt_dmha1 m3_dmmha sameNet)

Executing: err_B6K3 = geomAndNot(cmh2a mt_dmha)
	   errorLayer(err_B6K3 "B6K3 : MET3 and METTP must be connected (CAPMH2A must be enclosed by METTP)")

Executing: err_Q8VT = drc(vtpcmh2a mt_dmmha (coverage < 0.01))
	   errorLayer(err_Q8VT "Q8VT : Recommended minimum ratio of VIATP to CAPMH2A area = 1%")
Skip! Boundary layer has no shape

Executing: drc(cmh2a vtp (sep < 0.5) "S1K3VT : Minimum CAPMH2A spacing to VIATP = 0.5")

Executing: drc(cmh2a vtp (enc < 0.3) "E1K3VT : Minimum CAPMH2A enclosure of VIATP = 0.3")

Executing: err_E1K3VT = geomStraddle(vtp cmh2a)
	   errorLayer(err_E1K3VT "E1K3VT : Minimum CAPMH2A enclosure of VIATP = 0.3")

Executing: dmmha_m4vt = geomAnd(dmmha_m4 vtp)

Executing: drc(met4 dmmha_m4vt (enc < 0.15) "E6M4VT : Minimum MET4 enclosure of VIATP = ...

Executing: drc(geomAnd(cmh2a vtp) (sep < 2.0) "S9VT : Minimum VIATP spacing on CAPMH2A =...

Executing: phv1_s2 = geomSize(geomGetEdge(sjpn butting phv1_alls) 0.505)

Executing: err_B1NBa = geomAndNot(nbur hvnwell)

Executing: dnbur_dti_ex1 = geomAnd(geomSize(hvnwell 0.5) geomOr(diffdti diffdti_mring))

Executing: dnbur_dti_ex2 = geomOr(nisj1_nbuf_ex0 geomAnd(geomSize(nisj1_nbuf_ex0 0.5) di...

Executing: err_B1NBb = geomAndNot(err_B1NBa geomOr(dnbur_dti_ex1 hvnwell foxdti_mring fo...

Executing: err_B1NB = geomAndNot(err_B1NBb geomOr(geomAnd(phv1_s2 nwell) dnbur_dti_ex2))
	   errorLayer(err_B1NB "B1NB : NBUR without HVNWELL is not allowed")

Executing: err_W1NB = drc(nbur (width < 1.0))
	   errorLayer(err_W1NB "W1NB : Minimum NBUR width = 1.0")

Executing: err_S1NB = drc(nbur (sepNotch < 2.0))
	   errorLayer(err_S1NB "S1NB : Minimum NBUR spacing/notch = 2.0")

Executing: err_B2HN = geomAndNot(hvnwell nwell)
	   errorLayer(err_B2HN "B2HN : HVNWELL without NWELL is not allowed")

Executing: err_W1HN = drc(hvnwell (width < 1.5))
	   errorLayer(err_W1HN "W1HN : Minimum HVNWELL width = 1.5")

Executing: err_W2HN = drc(geomAndNot(hvnwell dti_all) (width < 0.5))
	   errorLayer(err_W2HN "W2HN : Minimum HVNWELL_E width = 0.5")

Executing: err_W1TN = drc(hwntub (width < 2.0))
	   errorLayer(err_W1TN "W1TN : Minimum HWNTUB width = 2.0")

Executing: err_S1HN = drc(hvnwell (sepNotch < 2.0))
	   errorLayer(err_S1HN "S1HN : Minimum HVNWELL spacing/notch = 2.0")

Executing: err_B1HP = geomAnd(hvpwell geomOr(nwell pwblk))
	   errorLayer(err_B1HP "B1HP : HVPWELL overlap NWELL, PWBLK is not allowed")

Executing: err_B2HP = geomAnd(hvpwell geomOr(hvnwell subblk hres mres))
	   errorLayer(err_B2HP "B2HP : HVPWELL overlap HVNWELL, SUBBLK, HRES or MRES is not allowed")

Executing: rpp1k1_shape = geomOverlap(geomAnd(poly sblk) rpp1k1)

Executing: err_B3HP = geomAnd(hvpwell geomOr(geomOr(geomOr(geomStraddle(ndif ngate2) d_d...
	   errorLayer(err_B3HP "B3HP : HVPWELL overlap of ne,ne5,dn,dn5,rdn,rdn5,rnp1#,rpp1#,rpp1s# or rpp1k1# is not allowed")

Executing: err_W1HP = drc(hvpwell (width < 1.5))
	   errorLayer(err_W1HP "W1HP : Minimum HVPWELL width = 1.5")

Executing: err_W2HP = drc(geomAndNot(hvpwell dti_all) (width < 0.5))
	   errorLayer(err_W2HP "W2HP : Minimum HVPWELL_E width = 0.5")

Executing: err_S1HP = drc(hvpwell (sepNotch < 2.0))
	   errorLayer(err_S1HP "S1HP : Minimum HVPWELL spacing/notch = 2.0")

Executing: err_S1HPHN = drc(hvpwell hvnwell (sep < 1.5))
	   errorLayer(err_S1HPHN "S1HPHN : Minimum HVPWELL spacing to HVNWELL = 1.5")

Executing: err_S1HPNW = drc(hvpwell nwell (sep < 1.0))
	   errorLayer(err_S1HPNW "S1HPNW : Minimum HVPWELL spacing to NWELL = 1.0")

Executing: err_W1HB = drc(subblk (width < 2.0))
	   errorLayer(err_W1HB "W1HB : Minimum SUBBLK width = 2.0")

Executing: err_S1HB = drc(subblk (sepNotch < 1.5))
	   errorLayer(err_S1HB "S1HB : Minimum SUBBLK spacing/notch = 1.5")

Executing: sub = geomAndNot(geomSize(bkgnd 0.5) geomOr(hvnwell hvpwell subblk))

Executing: err_W1BS = drc(sub (width < 1.5))
	   errorLayer(err_W1BS "W1BS : Minimum SUB width = 1.5")

Executing: sub1 = geomAndNot(sub dti_all)

Executing: err_W2SB = drc(sub1 (width < 0.5))
	   errorLayer(err_W2SB "W2SB : Minimum SUB_E width = 0.5")

Executing: err_W2BS = drc(geomAndNot(sub dti_all) (width < 0.5))
	   errorLayer(err_W2BS "W2BS : Minimum SUB_E width = 0.5")

Executing: err_S1BS = drc(sub (sepNotch < 2.0))
	   errorLayer(err_S1BS "S1BS : Minimum SUB spacing/notch = 2.0")

Executing: subblk1 = geomEnclose(subblktrm nwell)

Executing: geomStamp(subblk1 nwtrm)

Executing: err_B13HBa = geomOverlap(nwtrm subblk1 diffNet)

Executing: err_B13HB = geomAndNot(err_B13HBa geomOr(rxw2ti_nw nw_scr0))
	   errorLayer(err_B13HB "B13HB : NWELL in SUBBLK must have same net")

Executing: nhv1_sjgate = geomAnd(geomStraddle(ngate11 nhv1_all) sjnp)

Executing: nhv1_sjgate_s1 = geomSize(nhv1_sjgate 1.0)

Executing: nisj1_sjgate = geomAnd(geomStraddle(ngate11 nisj1_16) sjnp)

Executing: nisj1_sjgate_s1 = geomSize(nisj1_sjgate 1.0)

Executing: err_B1NT = geomAndNot(sjnp geomAnd(geomAnd(pwblk mv) subblk))
	   errorLayer(err_B1NT "B1NT : SJNP without PWBLK, SUBBLK and MV is not allowed")

Executing: err_B8NTa = geomAndNot(sjnp diff)

Executing: err_B8NT = geomAndNot(err_B8NTa geomOr(nhv1_sjgate_s1 nisj1_sjgate_s1))
	   errorLayer(err_B8NT "B8NT : SJNP without DIFF is not allowed")

Executing: err_B2NT = geomAnd(sjnp geomOr(hwtub nwell hvnwell hvpwell pimp hres mres))
	   errorLayer(err_B2NT "B2NT : SJNP overlap of HWTUB, NWELL, HVNWELL, HVPWELL, PIMP, HRES or MRES is not allowed")

Executing: err_B3NTa = geomAndNot(geomAnd(sjnp poly) nsj_ch1)

Executing: err_B3NTb = geomAndNot(geomAnd(sjnp nimp) nsj_ch1)

Executing: err_B3NT = geomOr(err_B3NTa err_B3NTb)
	   errorLayer(err_B3NT "B3NT : SJNP overlap of POLY1 or NIMP is not allowed")

Executing: err_B4NT = geomAnd(sjnp sjpn)
	   errorLayer(err_B4NT "B4NT : SJNP overlap of SJPN is not allowed")

Executing: err_W1NT = drc(sjnp (width < 2.0))
	   errorLayer(err_W1NT "W1NT : Minimum SJNP width = 2.0")

Executing: err_W2NT = drc(geomAndNot(sjnp dti_all) (width < 0.5))
	   errorLayer(err_W2NT "W2NT : Minimum SJNP_E width = 0.5")

Executing: drc(sjnp (sepNotch < 1.5) "S1NT : Minimum SJNP spacing/notch = 1.5")

Executing: drc(sjnp sjpn (sep < 2.0) "S1NTPT : Minimum SJNP spacing to SJPN = 2.0")

Executing: phv1_sjgate = geomAnd(geomStraddle(gate phv1_all) sjpn)

Executing: phv1_sjgate_s1 = geomSize(phv1_sjgate 1.0)

Executing: phv1_sjgate_s2 = geomAnd(geomSize(phv1_sjgate_s1 0.5) dti)

Executing: err_B1PT = geomAndNot(sjpn geomAnd(geomAnd(pwblk mv) subblk))
	   errorLayer(err_B1PT "B1PT : SJPN without PWBLK, SUBBLK and MV is not allowed")

Executing: err_B6PTa = geomAndNot(sjpn diff)

Executing: err_B6PT = geomAndNot(err_B6PTa geomOr(phv1_sjgate_s1 phv1_sjgate_s2))
	   errorLayer(err_B6PT "B6PT : SJPN without DIFF is not allowed")

Executing: err_B2PT = geomAnd(sjpn geomOr(hwtub nwell hvnwell hvpwell nimp hres mres))
	   errorLayer(err_B2PT "B2PT : SJPN overlap of HWTUB, NWELL, HVNWELL, HVPWELL, NIMP, HRES or MRES is not allowed")

Executing: phsj1_all_s1 = geomGrow(phsj1_all 0.0 1.0 0.0 1.0)

Executing: phsj1_all_s1e = geomSize(geomGetEdge(phsj1_all_s1 butting sjpn) 2.02)

Executing: phsj1_7_s1 = geomGrow(phsj1_7 0.0 2.0 0.0 2.0)

Executing: phsj1_10_s1 = geomGrow(geomOr(phsj1_10 phsj1_16c) 0.0 3.5 0.0 3.5)

Executing: phsj1_ch1 = geomSize(geomGetEdge(geomOr(phsj1_7_s1 phsj1_10_s1) butting sjpn)...

Executing: err_B3PTa = geomAndNot(geomAnd(sjpn poly) phsj1_all_s1e)

Executing: err_B3PTb = geomAndNot(geomAnd(sjpn pimp) phsj1_ch1)

Executing: err_B3PT = geomOr(err_B3PTa err_B3PTb)
	   errorLayer(err_B3PT "B3PT : SJPN overlap of POLY1 or PIMP is not allowed")

Executing: err_W1PT = drc(sjpn (width < 2.0))
	   errorLayer(err_W1PT "W1PT : Minimum SJPN width = 2.0")

Executing: err_W2PT = drc(geomAndNot(sjpn dti_all) (width < 0.5))
	   errorLayer(err_W2PT "W2PT : Minimum SJPN_E width = 0.5")

Executing: drc(sjpn (sepNotch < 1.5) "S1PT : Minimum SJPN spacing/notch = 1.5")

Executing: err_B1LV = geomAnd(lvt geomOr(mv dnc dpc pwblk hvnwell hvpwell subblk))
	   errorLayer(err_B1LV "B1LV : LVT overlap of MV,DNC,DPC,PWBLK,SUBBLK,HVNWELL or HVPWELL is not allowed")

Executing: err_B2LV = geomAnd(lvt geomOr(nwres rdn1 rdp1 qpve_w qpvf_w qpvg_w))
	   errorLayer(err_B2LV "B2LV : LVT overlap of rnw,rdn,rdp,qpve,qpvf,qpvg is not allowed")

Executing: lvtgate = geomAnd(gate lvt)

Executing: err_E1LVGA = drc(lvt lvtgate (enc < 0.35))
	   errorLayer(err_E1LVGA "E1LVGA : Minimum LVT enclosure of GATE = 0.35")

Executing: err_E2LVGA = drc(lvt geomGetEdge(lvtgate inside diff) (enc < 0.46))
	   errorLayer(err_E2LVGA "E2LVGA : Minimum LVT enclosure of GATE = 0.46")

Executing: err_S1LVGA = drc(lvt gate (sep < 0.35))
	   errorLayer(err_S1LVGA "S1LVGA : Minimum LVT spacing to GATE = 0.35")

Executing: err_S2LVGA = drc(lvt geomGetEdge(gate inside diff) (sep < 0.46))
	   errorLayer(err_S2LVGA "S2LVGA : Minimum LVT spacing to GATE = 0.46")

Executing: err_S1LVHN = drc(lvt hvnwell (sep < 1.0))
	   errorLayer(err_S1LVHN "S1LVHN : Minimum LVT spacing to HVNWELL = 1.0")

Executing: err_S1LVHP = drc(lvt hvpwell (sep < 1.0))
	   errorLayer(err_S1LVHP "S1LVHP : Minimum LVT spacing to HVPWELL = 1.0")

Executing: err_B1DL = geomAndNot(depl geomOr(ndf pwell4 pwell2))
	   errorLayer(err_B1DL "B1DL : DEPL is only allowed in PWELL2, PWELL4 or NDF")

Executing: err_B2DL = geomAnd(depl geomOr(dpc nbase pbase pzener sjnp sjpn))
	   errorLayer(err_B2DL "B2DL : DEPL overlap of DPC,NBASE,PBASE,PZENER,SJNP or SJPN is not allowed")

Executing: drc(depl (width < 0.6) "W1DL : Minimum DEPL width = 0.6")

Executing: drc(depl (sepNotch < 0.42) "S1DL : Minimum DEPL spacing/notch = 0.42")

Executing: drc(depl gate (sep < 0.2) "S1DLGA : Minimum DEPL spacing to GATE = 0.2")

Executing: drc(depl geomAndNot(gate ndhvta) (enc < 0.32) "E1DLGA : Minimum DEPL enclosur...

Executing: err_E1DLGA = geomGetEdge(depl inside geomAndNot(gate ndhvt_1))
	   errorLayer(err_E1DLGA "E1DLGA : Minimum DEPL enclosure of GATE = 0.32")

Executing: err_B1PX = geomAndNot(pdf tub2_pxta1)
	   errorLayer(err_B1PX "B1PX : PDF is only allowed for phvta,phvtb,phvu")

Executing: err_B2PX = geomAnd(pdf geomOr(dnc nzener pwell4))
	   errorLayer(err_B2PX "B2PX : PDF overlap of DNC,NZENER or PWELL4 is not allowed")

Executing: err_B3PX = geomAndNot(pdf geomOr(pwblk nwell))
	   errorLayer(err_B3PX "B3PX : PDF without PWBLK or NWELL is not allowed")

Executing: err_B4PX = geomAndNot(pdf geomAnd(mv subblk))
	   errorLayer(err_B4PX "B4PX : PDF without MV and SUBBLK is not allowed")

Executing: err_W1PX = drc(pdf (width < 2.0))
	   errorLayer(err_W1PX "W1PX : Minimum PDF width = 2.0")

Executing: err_W2PX = drc(geomAndNot(pdf dti_all) (width < 0.5))
	   errorLayer(err_W2PX "W2PX : Minimum PDF_E width = 0.5")

Executing: err_S1PX = drc(pdf (sepNotch < 1.5))
	   errorLayer(err_S1PX "S1PX : Minimum PDF spacing/notch = 1.5")

Executing: err_B1NX = geomAndNot(ndf tub2_nxta)
	   errorLayer(err_B1NX "B1NX : NDF is only allowed for nhvta,nhvtb,nhvu,ndhvt,ndhvta,dfwdnt,dfwdnu")

Executing: err_B2NX = geomAnd(ndf geomOr(pdf pzener))
	   errorLayer(err_B2NX "B2NX : NDF overlap of PDF or PZENER is not allowed")

Executing: err_B4NX = geomAndNot(ndf geomAnd(geomAnd(pwblk mv) subblk))
	   errorLayer(err_B4NX "B4NX : NDF without PWBLK, MV and SUBBLK is not allowed")

Executing: err_W1NX = drc(ndf (width < 2.0))
	   errorLayer(err_W1NX "W1NX : Minimum NDF width = 2.0")

Executing: err_W2NX = drc(geomAndNot(ndf dti_all) (width < 0.5))
	   errorLayer(err_W2NX "W2NX : Minimum NDF_E width = 0.5")

Executing: err_S1NX = drc(ndf (sepNotch < 1.0))
	   errorLayer(err_S1NX "S1NX : Minimum NDF spacing/notch = 1.0")

Executing: dnpa_pw4 = geomSize(dnpa 1.18)

Executing: dnpati_pw4 = geomSize(dnpati 1.44)

Executing: err_B1P4 = geomAndNot(pwell4 geomOr(dnpa_pw4 dnpati_pw4 tub2_nxta pw4_esd))
	   errorLayer(err_B1P4 "B1P4 : PWELL4 is only allowed for nhvta,nhvtb,nhvu,ndhvt,ndhvta,dfwdnt,dfwdnu,dnpa,dnpati")

Executing: err_B2P4 = geomAnd(pwell4 geomOr(nwell dpc hvpwell sjnp sjpn))
	   errorLayer(err_B2P4 "B2P4 : PWELL4 overlap of NWELL,DPC,HVPWELL,SJNP or SJPN is not allowed")

Executing: err_B4P4 = geomAndNot(pwell4 geomAnd(mv subblk))
	   errorLayer(err_B4P4 "B4P4 : PWELL4 without MV and SUBBLK is not allowed")

Executing: err_W1P4 = drc(pwell4 (width < 1.0))
	   errorLayer(err_W1P4 "W1P4 : Minimum PWELL4 width = 1.0")

Executing: err_W2P4 = drc(geomAndNot(pwell4 dti_all) (width < 0.5))
	   errorLayer(err_W2P4 "W2P4 : Minimum PWELL4_E width = 0.5")

Executing: err_S1P4 = drc(pwell4 (sepNotch < 1.0))
	   errorLayer(err_S1P4 "S1P4 : Minimum PWELL4 spacing/notch = 1.0")

Executing: err_S1P4DN = drc(pwell4 ndif (sep < 0.25))
	   errorLayer(err_S1P4DN "S1P4DN : Minimum PWELL4 spacing to NDIFF = 0.25")

Executing: err_E1P4DN = drc(pwell4 ndif (enc < 0.43))
	   errorLayer(err_E1P4DN "E1P4DN : Minimum PWELL4 enclosure of NDIFF = 0.43")

Executing: tub2_dfwdnut = geomEnclose(tub2_nxta dfwdnut)

Executing: err_E1P4DP = drc(geomAndNot(pwell4 tub2_dfwdnut) pdif (enc < 0.25))
	   errorLayer(err_E1P4DP "E1P4DP : Minimum PWELL4 enclosure of PDIFF = 0.25")

Executing: err_B1QP = geomAndNot(pbase qnv5)
	   errorLayer(err_B1QP "B1QP : PBASE is only allowed for qnv5")

Executing: err_B2QP = geomAnd(pbase geomOr(geomAndNot(nwell qnv5_nwell) geomOr(dpc pwblk...
	   errorLayer(err_B2QP "B2QP : PBASE overlap of DPC,PWBLK,NWELL,PZENER,NDF,PDF,PWELL4 or POLY1 is not allowed")

Executing: err_B3QP = geomAndNot(pbase geomAnd(mv subblk))
	   errorLayer(err_B3QP "B3QP : PBASE without MV and SUBBLK is not allowed")

Executing: err_W1QP = drc(pbase (width < 1.0))
	   errorLayer(err_W1QP "W1QP : Minimum PBASE width = 1.0")

Executing: err_W2QP = drc(geomAndNot(pbase dti_all) (width < 0.5))
	   errorLayer(err_W2QP "W2QP : Minimum PBASE_E width = 0.5")

Executing: err_S1QP = drc(pbase (sepNotch < 1.0))
	   errorLayer(err_S1QP "S1QP : Minimum PBASE spacing/notch = 1.0")

Executing: err_B1QN = geomAndNot(nbase qpv5)
	   errorLayer(err_B1QN "B1QN : NBASE is only allowed for qpv5")

Executing: err_B2QN = geomAnd(nbase geomOr(geomOr(dpc pwblk nwell poly) geomOr(pbase pze...
	   errorLayer(err_B2QN "B2QN : NBASE overlap of DPC,PWBLK,NWELL,PBASE,PZENER,NDF,PDF,PWELL4 or POLY1 is not allowed")

Executing: err_B3QN = geomAndNot(nbase geomAnd(mv subblk))
	   errorLayer(err_B3QN "B3QN : NBASE without MV and SUBBLK is not allowed")

Executing: err_W1QN = drc(nbase (width < 1.0))
	   errorLayer(err_W1QN "W1QN : Minimum NBASE width = 1.0")

Executing: err_W2QN = drc(geomAndNot(nbase dti_all) (width < 0.5))
	   errorLayer(err_W2QN "W2QN : Minimum NBASE_E width = 0.5")

Executing: err_S1QN = drc(nbase (sepNotch < 1.0))
	   errorLayer(err_S1QN "S1QN : Minimum NBASE spacing/notch = 1.0")

Executing: dza_pz = geomSize(dza 1.18)

Executing: dzati_pz = geomSize(dzati 1.44)

Executing: err_B1PZ = geomAnd(pzener geomOr(dpc pwblk nwell pwell4))
	   errorLayer(err_B1PZ "B1PZ : PZENER overlap of DPC,NWELL,PWBLK or PWELL4 is not allowed")

Executing: err_B2PZ = geomAndNot(pzener geomOr(dza_pz dzati_pz))
	   errorLayer(err_B2PZ "B2PZ : PZENER is only allowed for dza,dzati")

Executing: err_B3PZ = geomAndNot(pzener geomAnd(mv subblk))
	   errorLayer(err_B3PZ "B3PZ : PZENER without MV and SUBBLK is not allowed")

Executing: err_W1PZ = drc(pzener (width < 0.6))
	   errorLayer(err_W1PZ "W1PZ : Minimum PZENER width = 0.6")

Executing: err_W2PZ = drc(geomAndNot(pzener dti_all) (width < 0.5))
	   errorLayer(err_W2PZ "W2PZ : Minimum PZENER_E width = 0.5")

Executing: err_S1PZ = drc(pzener (sepNotch < 0.6))
	   errorLayer(err_S1PZ "S1PZ : Minimum PZENER spacing/notch = 0.6")

Executing: err_B1NZ = geomAndNot(geomAndNot(nzener nwell) pdiff)
	   errorLayer(err_B1NZ "B1NZ : NZENER without NWELL and PDIFF is not allowed")

Executing: err_B2NZ = geomAndNot(nzener dzb_ex3)
	   errorLayer(err_B2NZ "B2NZ : NZENER is only allowed for dzbti")

Executing: err_B3NZ = geomAnd(nzener geomOr(dnc pzener hvnwell nbur))
	   errorLayer(err_B3NZ "B3NZ : NZENER overlap of DNC, PZENER, NBUR or HVNWELL is not allowed")

Executing: err_B4NZ = geomAndNot(nzener geomAnd(mv subblk))
	   errorLayer(err_B4NZ "B4NZ : NZENER without MV and SUBBLK is not allowed")

Executing: err_W1NZ = drc(nzener (width < 0.6))
	   errorLayer(err_W1NZ "W1NZ : Minimum NZENER width = 0.6")

Executing: err_W2NZ = drc(geomAndNot(nzener dti_all) (width < 0.5))
	   errorLayer(err_W2NZ "W2NZ : Minimum NZENER_E width = 0.5")

Executing: err_S1NZ = drc(nzener (sepNotch < 0.6))
	   errorLayer(err_S1NZ "S1NZ : Minimum NZENER spacing/notch = 0.6")

Executing: err_B1NF = geomAndNot(nbuf geomAnd(geomAnd(geomAnd(pwblk diff) subblk) mv))
	   errorLayer(err_B1NF "B1NF : NBUF without PWBLK, DIFF, SUBBLK and MV is not allowed")

Executing: err_B2NF = geomAnd(nbuf geomOr(hwtub poly nimp sj depl pwell4))
	   errorLayer(err_B2NF "B2NF : NBUF overlap of HWTUB,POLY1,NIMP,SJNP,SJPN,DEPL,PWELL4 is not allowed")

Executing: err_B3NF = geomAndNot(nbuf nisj1_nbuf_f)
	   errorLayer(err_B3NF "B3NF : NBUF is only allowed for nisj1_16")

Executing: err_W1NF = drc(nbuf (width < 2.0))
	   errorLayer(err_W1NF "W1NF : Minimum NBUF width = 2.0")

Executing: nbuf1 = geomAndNot(nbuf dti_all)

Executing: err_W2NF = drc(nbuf1 (width < 0.5))
	   errorLayer(err_W2NF "W2NF : Minimum NBUF_E width = 0.5")

Executing: err_S1NF = drc(nbuf (sepNotch < 1.5))
	   errorLayer(err_S1NF "S1NF : Minimum NBUF spacing/notch = 1.5")

Executing: err_BDSC = geomOr(sci)
	   errorLayer(err_BDSC "BDSC : Not allowed to be used by customers")

Executing: err_BDPS = geomOr(pws)
	   errorLayer(err_BDPS "BDPS : Not allowed to be used by customers")

Executing: hsj16_sjnp_c = geomOr(geomStraddle(hsj16_sjnp dfwnsj1_16c) geomButting(hsj16_...

Executing: hsj16_sjnp_nc = geomAndNot(hsj16_sjnp hsj16_sjnp_c)

Executing: hsj1_sjnp = geomStraddle(sjnp geomOr(nisj_d nhv1_d dfwn1))

Executing: hsj1_sjnp_s10 = geomGrow(hsj1_sjnp -3.0 0 -3.0 0)

Executing: hsj7_sjnp_s11 = geomGrow(hsj7_sjnp 0.0 -0.5 0.0 -0.5)

Executing: hsj7_sjnp_s12 = geomAndNot(hsj7_sjnp geomOr(hsj1_sjnp_s10 hsj7_sjnp_s11))

Executing: hsj103_sjnp_s10 = geomGrow(hsj103_sjnp 0.0 -1.5 0.0 -1.5)

Executing: hsj16_sjnp_s10 = geomGrow(hsj16_sjnp_nc 0.0 -3.0 0.0 -3.0)

Executing: hsj16_sjnp_c_s10 = geomGrow(hsj16_sjnp_c 0.0 -1.5 0.0 -1.5)

Executing: hsj103_sjnp_s11 = geomGrow(hsj103_sjnp 0.0 -2.0 0.0 -2.0)

Executing: hsj16_sjnp_s11 = geomGrow(hsj16_sjnp_nc 0.0 -3.5 0.0 -3.5)

Executing: hsj16_sjnp_c_s11 = geomGrow(hsj16_sjnp_c 0.0 -2.0 0.0 -2.0)

Executing: hsj10_sjnp_s20 = geomGrow(hsj10_sjnp 0.0 -0.5 0.0 -0.5)

Executing: hsj13_sjnp_s20 = geomGrow(hsj13_sjnp 0.0 -0.5 0.0 -0.5)

Executing: hsj16_sjnp_s20 = geomGrow(hsj16_sjnp_nc 0.0 -1.5 0.0 -1.5)

Executing: hsj16_sjnp_s30 = geomGrow(hsj16_sjnp_nc 0.0 -2.0 0.0 -2.0)

Executing: hsj16_sjnp_s40 = geomGrow(hsj16_sjnp 0.0 -0.5 0.0 -0.5)

Executing: hsj10a_sjnp_s21 = geomGrow(hsj10a_sjnp -3.75 0.0 -3.75 0.0)

Executing: hsj10b_sjnp_s21 = geomGrow(hsj10b_sjnp -4.0 0.0 -4.0 0.0)

Executing: hsj10c_sjnp_s21 = geomGrow(hsj10c_sjnp -4.25 0.0 -4.25 0.0)

Executing: hsj10d_sjnp_s21 = geomGrow(hsj10d_sjnp -4.5 0.0 -4.5 0.0)

Executing: hsj10_sjnp_s21 = geomOr(hsj10a_sjnp_s21 hsj10b_sjnp_s21 hsj10c_sjnp_s21 hsj10...

Executing: hsj13a_sjnp_s21 = geomGrow(hsj13a_sjnp -4.875 0.0 -4.875 0.0)

Executing: hsj13b_sjnp_s21 = geomGrow(hsj13b_sjnp -5.25 0.0 -5.25 0.0)

Executing: hsj13c_sjnp_s21 = geomGrow(hsj13c_sjnp -5.625 0.0 -5.625 0.0)

Executing: hsj13d_sjnp_s21 = geomGrow(hsj13d_sjnp -6.0 0.0 -6.0 0.0)

Executing: hsj13_sjnp_s21 = geomOr(hsj13a_sjnp_s21 hsj13b_sjnp_s21 hsj13c_sjnp_s21 hsj13...

Executing: hsj16_sjnp_s21 = geomGrow(hsj16_sjnp -6.0 0.0 -6.0 0.0)

Executing: hsj16a_sjnp_s31 = geomGrow(hsj16a_sjnp -6.25 0.0 -6.25 0.0)

Executing: hsj16b_sjnp_s31 = geomGrow(hsj16b_sjnp -6.75 0.0 -6.75 0.0)

Executing: hsj16c_sjnp_s31 = geomGrow(hsj16c_sjnp -6.75 0.0 -6.75 0.0)

Executing: hsj16_sjnp_s31 = geomOr(hsj16a_sjnp_s31 hsj16b_sjnp_s31 hsj16c_sjnp_s31)

Executing: hsj16_sjnp_c_s21 = geomGrow(hsj16_sjnp_c -4.5 0.0 -4.5 0.0)

Executing: hsj103_sjnp_s12 = geomAndNot(hsj103_sjnp_s10 geomOr(hsj1_sjnp_s10 hsj103_sjnp...

Executing: hsj16_sjnp_s12 = geomAndNot(hsj16_sjnp_s10 geomOr(hsj1_sjnp_s10 hsj16_sjnp_s11))

Executing: hsj16_sjnp_c_s12 = geomAndNot(hsj16_sjnp_c_s10 geomOr(hsj1_sjnp_s10 hsj16_sjn...

Executing: hsj10_sjnp_s22 = geomAndNot(hsj10_sjnp geomOr(hsj10_sjnp_s21 hsj10_sjnp_s20))

Executing: hsj13_sjnp_s22 = geomAndNot(hsj13_sjnp geomOr(hsj13_sjnp_s21 hsj13_sjnp_s20))

Executing: hsj16_sjnp_s22 = geomAndNot(hsj16_sjnp_s20 geomOr(hsj16_sjnp_s21 hsj16_sjnp_s...

Executing: hsj16_sjnp_c_s22 = geomAndNot(hsj16_sjnp_c geomOr(hsj16_sjnp_s21 hsj16_sjnp_s...

Executing: hsj16_sjnp_s42 = geomAndNot(hsj16_sjnp_nc geomOr(hsj16_sjnp_s31 hsj16_sjnp_s40))

Executing: err_O1SANTa = geomAndNot(geomOr(hsj7_sjnp_s12 hsj103_sjnp_s12 hsj16_sjnp_s12 ...

Executing: err_O1SANTb = geomAnd(geomAndNot(geomAnd(hsj1_sjnp_s10 geomOr(hsj7_sjnp_s11 h...

Executing: err_O1SANT = geomOr(err_O1SANTa err_O1SANTb)
	   errorLayer(err_O1SANT "O1SANT : Fixed SALICIDE overlap of SJNP = 3.0")

Executing: err_O2SANTa = geomAndNot(hsj10_sjnp_s22 salicide)

Executing: err_O2SANTb = geomAnd(geomAndNot(geomAnd(hsj10_sjnp_s21 hsj10_sjnp_s20) hvtub...

Executing: err_O2SANT = geomOr(err_O2SANTa err_O2SANTb)
	   errorLayer(err_O2SANT "O2SANT : Fixed SALICIDE overlap of SJNP = 4.5")

Executing: hsj_sjnp_s21 = geomOr(hsj13_sjnp_s21 hsj16_sjnp_s21)

Executing: err_O3SANTa = geomAndNot(geomOr(hsj13_sjnp_s22 hsj16_sjnp_s22 hsj16_sjnp_c_s2...

Executing: err_O3SANTb = geomAnd(geomAndNot(geomAnd(hsj_sjnp_s21 geomOr(hsj13_sjnp_s20 h...

Executing: err_O3SANT = geomOr(err_O3SANTa err_O3SANTb)
	   errorLayer(err_O3SANT "O3SANT : Fixed SALICIDE overlap of SJNP = 6.0")

Executing: err_O4SANTa = geomAndNot(hsj16_sjnp_s42 salicide)

Executing: dti30_nhsj16 = geomAndNot(geomAndNot(hsj16_sjnp_nc hsj16_sjnp_s40) hsj16_sjnp...

Executing: err_O4SANTb = geomAnd(geomAndNot(geomAndNot(hsj16_sjnp_nc hsj16_sjnp_s40) hsj...

Executing: err_O4SANT = geomOr(err_O4SANTa err_O4SANTb)
	   errorLayer(err_O4SANT "O4SANT : Fixed SALICIDE overlap of SJNP = 6.75")

Executing: met1poly_1 = geomOr(met1 poly)

Executing: met1poly_nhsj = geomAnd(met1poly_1 geomOr(nhv1_sjnp1_sa dfwn1_sa nisj1_c16_sa1))

Executing: met1poly_sjnp = geomAnd(geomSize(geomSize(met1poly_nhsj 0.115) -0.115) sjnp)

Executing: met1poly_sjnp_a = geomAnd(geomAnd(geomSize(geomSize(met1poly_nhsj 0.14) -0.14...

Executing: met1poly_jnp = geomOr(met1poly_sjnp met1poly_sjnp_a)

Executing: err_O1F1NTa = geomAndNot(geomAndNot(hsj1_sjnp hsj1_sjnp_s10) met1poly_jnp)

Executing: err_O1F1NTb = geomAnd(hsj1_sjnp_s10 met1poly_jnp)

Executing: err_O1F1NT = geomOr(err_O1F1NTa err_O1F1NTb)
	   errorLayer(err_O1F1NT "O1F1NT : Fixed M1_FPLATE overlap of SJNP = 3.0")

Executing: met2poly_1 = geomOr(met2 poly)

Executing: met2poly_jnp2 = geomAnd(met2poly_1 geomAnd(geomOr(nhv1_sjnp1_sa dfwn1_sa nisj...

Executing: met2poly_jnp3 = geomAnd(met2poly_jnp2 hvtub)

Executing: met2poly_jnp4 = geomAndNot(met2poly_jnp2 met2poly_jnp3)

Executing: met2poly_jnp31 = geomSize(geomSize(met2poly_jnp3 0.115) -0.115)

Executing: met2poly_jnp41 = geomSize(geomSize(met2poly_jnp4 0.14) -0.14)

Executing: met2poly_jnp41_a = geomAnd(geomSize(geomSize(met2poly_jnp4 0.165) -0.165) dif...

Executing: met2poly_jnp = geomOr(met2poly_jnp31 met2poly_jnp41 met2poly_jnp41_a)

Executing: err_O1F2NTa = geomAndNot(geomAndNot(hsj10a_sjnp hsj10a_sjnp_s21) met2poly_jnp)

Executing: err_O1F2NTb = geomAnd(hsj10a_sjnp_s21 met2poly_jnp)

Executing: err_O1F2NT = geomOr(err_O1F2NTa err_O1F2NTb)
	   errorLayer(err_O1F2NT "O1F2NT : Fixed M2_FPLATE overlap SJNP = 3.75")

Executing: err_O2F2NTa = geomAndNot(geomAndNot(hsj10b_sjnp hsj10b_sjnp_s21) met2poly_jnp)

Executing: err_O2F2NTb = geomAnd(hsj10b_sjnp_s21 met2poly_jnp)

Executing: err_O2F2NT = geomOr(err_O2F2NTa err_O2F2NTb)
	   errorLayer(err_O2F2NT "O2F2NT : Fixed M2_FPLATE overlap SJNP = 4.0")

Executing: err_O3F2NTa = geomAndNot(geomAndNot(hsj10c_sjnp hsj10c_sjnp_s21) met2poly_jnp)

Executing: err_O3F2NTb = geomAnd(hsj10c_sjnp_s21 met2poly_jnp)

Executing: err_O3F2NT = geomOr(err_O3F2NTa err_O3F2NTb)
	   errorLayer(err_O3F2NT "O3F2NT : Fixed M2_FPLATE overlap SJNP = 4.25")

Executing: err_O4F2NTa = geomAndNot(geomAndNot(hsj10d_sjnp hsj10d_sjnp_s21) met2poly_jnp)

Executing: err_O4F2NTb = geomAnd(hsj10d_sjnp_s21 met2poly_jnp)

Executing: err_O4F2NT = geomOr(err_O4F2NTa err_O4F2NTb)
	   errorLayer(err_O4F2NT "O4F2NT : Fixed M2_FPLATE overlap SJNP = 4.5")

Executing: err_O4F2NTc = geomAndNot(geomAndNot(hsj16_sjnp_c hsj16_sjnp_c_s21) met2poly_jnp)

Executing: err_O4F2NTd = geomAnd(hsj16_sjnp_c_s21 met2poly_jnp)

Executing: err_O4F2NT_c = geomOr(err_O4F2NTc err_O4F2NTd)
	   errorLayer(err_O4F2NT_c "O4F2NT : Fixed M2_FPLATE overlap SJNP = 4.5")

Executing: err_O8F2NTa = geomAndNot(geomAndNot(hsj13d_sjnp hsj13d_sjnp_s21) met2poly_jnp)

Executing: err_O8F2NTb = geomAnd(hsj13d_sjnp_s21 met2poly_jnp)

Executing: err_O8F2NT = geomOr(err_O8F2NTa err_O8F2NTb)
	   errorLayer(err_O8F2NT "O8F2NT : Fixed M2_FPLATE overlap SJNP = 6.0")

Executing: err_O9F2NTa = geomAndNot(geomAndNot(geomAndNot(hsj16_sjnp hsj16_sjnp_s21) met...

Executing: err_O9F2NTb = geomAnd(hsj16_sjnp_s21 met2poly_jnp)

Executing: err_O8F2NT_1 = geomOr(err_O9F2NTa err_O9F2NTb)
	   errorLayer(err_O8F2NT_1 "O8F2NT : Fixed M2_FPLATE overlap SJNP = 6.0")

Executing: err_O2F3NTa = geomAndNot(geomAndNot(hsj16a_sjnp hsj16a_sjnp_s31) met3)

Executing: err_O2F3NTb = geomAnd(hsj16a_sjnp_s31 met3)

Executing: err_O2F3NT = geomOr(err_O2F3NTa err_O2F3NTb)
	   errorLayer(err_O2F3NT "O2F3NT : Fixed M3_FPLATE overlap of SJNP = 6.25")

Executing: err_O3F3NTa = geomAndNot(geomAndNot(hsj16b_sjnp hsj16b_sjnp_s31) met3)

Executing: err_O3F3NTb = geomAnd(hsj16b_sjnp_s31 met3)

Executing: err_O3F3NT = geomOr(err_O3F3NTa err_O3F3NTb)
	   errorLayer(err_O3F3NT "O3F3NT : Fixed M3_FPLATE overlap of SJNP = 6.75")

Executing: err_O4F3NTa = geomAndNot(geomAndNot(geomAndNot(hsj16c_sjnp hsj16c_sjnp_s31) m...

Executing: err_O4F3NTb = geomAnd(hsj16c_sjnp_s31 met3)

Executing: err_O4F3NT = geomOr(err_O4F3NTa err_O4F3NTb)
	   errorLayer(err_O4F3NT "O4F3NT : Fixed M3_FPLATE overlap of SJNP = 6.75")

Executing: err_O1F3NTa = geomAndNot(geomAndNot(hsj16_sjnp_c hsj16_sjnp_s21) met3)

Executing: err_O1F3NTb = geomAnd(geomAnd(hsj16_sjnp_c hsj16_sjnp_s21) met3)

Executing: err_O1F3NT = geomOr(err_O1F3NTa err_O1F3NTb)
	   errorLayer(err_O1F3NT "O1F3NT : Fixed M3_FPLATE overlap of SJNP = 6.0")

Executing: err_S2P1DF = drc(nhv1_poly geomAnd(act sjnp) (sep < 0.48))
	   errorLayer(err_S2P1DF "S2P1DF : Minimum POLY1 spacing to DRAIN DIFF = 0.48")

Executing: err_E3P1GA = drc(poly geomStraddle(ndif nhv1_gate) (enc < 0.52))
	   errorLayer(err_E3P1GA "E3P1GA : Minimum POLY1 extension beyond GATE = 0.52")

Executing: err_O1NTGAa = drc(nhv1_sjgate (width == 1.5))

Executing: err_O1NTGA = geomAndNot(nhv1_gate geomOr(nhsj1_all err_O1NTGAa))
	   errorLayer(err_O1NTGA "O1NTGA : Fixed SJNP overlap of GATE = 1.5")

Executing: err_W1GA = geomGetLength(geomGetEdge(geomOr(nhsj1_7 nhsj1_10) inside act) (ke...
	   errorLayer(err_W1GA "W1GA : Minimum GATE width = 10.0")

Executing: err_W26GA = geomGetLength(geomGetEdge(nhsj1_16c inside act) (keep < 20.0) con...
	   errorLayer(err_W26GA "W26GA : Minimum GATE width = 20.0")

Executing: err_W11GA = drc(nhv1_all (width < 0.5))
	   errorLayer(err_W11GA "W11GA : Minimum CHANNEL length = 0.5")

Executing: err_E3INDF = drc(nimp geomStraddle(act nmhsj_s) (enc < 0.14))
	   errorLayer(err_E3INDF "E3INDF : Minimum NIMP extension beyond SOURCE NDIFF = 0.14")

Executing: err_E3IPDF = drc(pimp geomInside(act geomStraddle(dtiholes1 nmhsj_s)) (enc < ...
	   errorLayer(err_E3IPDF "E3IPDF : Minimum PIMP extension beyond PDIFF = 0.14")

Executing: err_S4IPDN = drc(geomStraddle(act nmhsj_s) pimp (sep < 0.14))
	   errorLayer(err_S4IPDN "S4IPDN : Minimum PIMP spacing to NDIFF = 0.14")

Executing: err_B6NTa = geomGetNonRectangle(nhv1_all)
	   errorLayer(err_B6NTa "B6NT : Fixed orientation is 0 degree or 180 degree")

Executing: err_B6NTb1 = geomGrow(nhv1_all 0.01 0.0 0.01 0.0)

Executing: err_B6NTb = geomAndNot(err_B6NTb1 geomInside(err_B6NTb1 diff))
	   errorLayer(err_B6NTb "B6NT : Fixed orientation is 0 degree or 180 degree")

Executing: nhv1_alls = geomGrow(nhv1_all 0.0 2.0 0.0 2.0)

Executing: nhv1_s1 = geomSize(geomGetEdge(sjnp butting nhv1_alls) 0.5)

Executing: nhv1_s2 = geomSize(geomGetEdge(sjnp butting nhv1_alls) 0.505)

Executing: err_E1HBNTa = geomAndNot(nhv1_s1 subblk)

Executing: err_E1HBNTb = geomAnd(geomAndNot(nhv1_s2 nhv1_s1) subblk)

Executing: err_E1HBNT = geomOr(err_E1HBNTa err_E1HBNTb)
	   errorLayer(err_E1HBNT "E1HBNT : Fixed SUBBLK enclosure of SJNP = 0.5")

Executing: err_S4DF = drc(nhv1_gate geomAnd(act sjnp) (sep < 1.0))
	   errorLayer(err_S4DF "S4DF : Fixed DRAIN-EDGE-STI length = 1.0")

Executing: nhv1_pedge_1_5 = geomSize(nhsj_pedge -1.5)

Executing: nhv1_gate_s1 = geomAnd(geomAndNot(geomSize(geomAnd(gate nhv1_pedge_1_5) 1.0) ...

Executing: nhv1_gate_s3 = geomSize(geomGetEdge(nhv1_gate_s1 outside diff) 0.001)

Executing: err_S4DFa = geomAndNot(nhv1_gate_s3 geomAnd(nhv1_gate_s3 geomAnd(subblk nhv1_...
	   errorLayer(err_S4DFa "S4DF : Fixed DRAIN-EDGE-STI length = 1.0")

Executing: nhv1_g1 = geomGetEdge(nhv1_gate outside geomAndNot(nhv1_gate_s1 nhv1_pedge_1_...

Executing: nhv1_g1s = geomOr(geomSize(nhv1_g1 0.5) nhv1_gate)

Executing: nhv1_g2s = geomOr(geomSize(nhv1_g1 0.505) nhv1_gate)

Executing: err_S2GADT = geomAndNot(geomAndNot(nhv1_g2s nhv1_g1s) dti)
	   errorLayer(err_S2GADT "S2GADT : Fixed GATE spacing to DTI = 0.5")

Executing: nhv1_p1 = geomGetEdge(poly coincident nhv1_alls)

Executing: nhv1_p1s1 = geomSize(nhv1_p1 0.2)

Executing: nhv1_p1s2 = geomSize(nhv1_p1 0.205)

Executing: err_S1P1PCa = geomAnd(nhv1_p1s1 dpc)

Executing: err_S1P1PCb = geomAndNot(geomAndNot(nhv1_p1s2 nhv1_p1s1) dpc)

Executing: err_S1P1PC = geomOr(err_S1P1PCa err_S1P1PCb)
	   errorLayer(err_S1P1PC "S1P1PC : Fixed POLY1 spacing to DPC = 0.2")

Executing: nhv1_h1 = geomSize(nhv1_sjnp1_sa 1.0)

Executing: err_B3MV = geomAndNot(nhv1_h1 mv)
	   errorLayer(err_B3MV "B3MV : nhsj1_# without MV is not allowed")

Executing: nhv1_call_s = geomOr(nhv1_c103_s nhv1_c16_s nhv1_c7_s)

Executing: err_S1HPNTa = geomAnd(nhv1_s1 hvpwell)

Executing: err_S1HPNTb = geomAndNot(geomAndNot(nhv1_s2 nhv1_s1) hvpwell)

Executing: err_S1HPNT = geomOr(err_S1HPNTa err_S1HPNTb)
	   errorLayer(err_S1HPNT "S1HPNT : Fixed HVPWELL spacing to SJNP = 0.5")

Executing: dfwn_c7_s01 = geomAndNot(geomGrow(dfwn_c7_s0 0.0 0.005 0.0 0.005) dfwn_c7_s0)

Executing: dfwn_c10_s01 = geomAndNot(geomGrow(dfwn_c10_s0 0.0 0.005 0.0 0.005) dfwn_c10_s0)

Executing: dfwn_c16c_s01 = geomAndNot(geomGrow(dfwn_c16c_s0 0.0 0.005 0.0 0.005) dfwn_c1...

Executing: nhv1_c7_s0a = geomAnd(nhv1_c7_s0 pwblk)

Executing: nhv1_c10_s0a = geomAnd(nhv1_c10_s0 pwblk)

Executing: nhv1_c16c_s0a = geomAnd(nhv1_c16c_s0 pwblk)

Executing: nhv1_c7_s01 = geomAndNot(geomGrow(nhv1_c7_s0a 0.0 0.005 0.0 0.005) nhv1_c7_s0a)

Executing: nhv1_c10_s01 = geomAndNot(geomGrow(nhv1_c10_s0a 0.0 0.005 0.0 0.005) nhv1_c10...

Executing: nhv1_c16c_s01 = geomAndNot(geomGrow(nhv1_c16c_s0a 0.0 0.005 0.0 0.005) nhv1_c...

Executing: err_E1NTBTa = geomAndNot(geomAndNot(geomOr(dfwn_c7_s0 nhv1_c7_s0a) hvtub) sjnp)

Executing: err_E1NTBTb = geomAnd(geomOr(dfwn_c7_s01 nhv1_c7_s01) sjnp)

Executing: err_E1NTBT = geomOr(err_E1NTBTa err_E1NTBTb)
	   errorLayer(err_E1NTBT "E1NTBT : Fixed extension of SJNP beyond TUB = 1.5")

Executing: err_E2NTBTa = geomAndNot(geomAndNot(geomOr(dfwn_c10_s0 dfwn_c16c_s0 nhv1_c10_...

Executing: err_E2NTBTb = geomAnd(geomOr(dfwn_c10_s01 dfwn_c16c_s01 nhv1_c10_s01 nhv1_c16...

Executing: err_E2NTBT = geomOr(err_E2NTBTa err_E2NTBTb)
	   errorLayer(err_E2NTBT "E2NTBT : Fixed extension of SJNP beyond TUB = 3.0")

Executing: hsj16_sjpn_c = geomButting(hsj16_sjpn phsj1_16c)

Executing: hsj16_sjpn_nc = geomAndNot(hsj16_sjpn hsj16_sjpn_c)

Executing: hsj1_sjpn = geomStraddle(sjpn geomOr(phv1_d dfwp1))

Executing: hsj1_sjpn_s10 = geomGrow(hsj1_sjpn -3.0 0 -3.0 0)

Executing: hsj7_sjpn_s11 = geomGrow(hsj7_sjpn 0.0 -0.5 0.0 -0.5)

Executing: hsj7_sjpn_s12 = geomAndNot(hsj7_sjpn geomOr(hsj1_sjpn_s10 hsj7_sjpn_s11))

Executing: hsj103_sjpn_s10 = geomGrow(hsj103_sjpn 0.0 -1.5 0.0 -1.5)

Executing: hsj16_sjpn_s10 = geomGrow(hsj16_sjpn_nc 0.0 -3.0 0.0 -3.0)

Executing: hsj16_sjpn_c_s10 = geomGrow(hsj16_sjpn_c 0.0 -1.5 0.0 -1.5)

Executing: hsj103_sjpn_s11 = geomGrow(hsj103_sjpn 0.0 -2.0 0.0 -2.0)

Executing: hsj16_sjpn_s11 = geomGrow(hsj16_sjpn_nc 0.0 -3.5 0.0 -3.5)

Executing: hsj16_sjpn_c_s11 = geomGrow(hsj16_sjpn_c 0.0 -2.0 0.0 -2.0)

Executing: hsj10_sjpn_s20 = geomGrow(hsj10_sjpn 0.0 -0.5 0.0 -0.5)

Executing: hsj13_sjpn_s20 = geomGrow(hsj13_sjpn 0.0 -0.5 0.0 -0.5)

Executing: hsj16_sjpn_s20 = geomGrow(hsj16_sjpn_nc 0.0 -1.5 0.0 -1.5)

Executing: hsj16_sjpn_s30 = geomGrow(hsj16_sjpn_nc 0.0 -2.0 0.0 -2.0)

Executing: hsj16_sjpn_s40 = geomGrow(hsj16_sjpn 0.0 -0.5 0.0 -0.5)

Executing: hsj10a_sjpn_s21 = geomGrow(hsj10a_sjpn -3.75 0.0 -3.75 0.0)

Executing: hsj10b_sjpn_s21 = geomGrow(hsj10b_sjpn -4.0 0.0 -4.0 0.0)

Executing: hsj10c_sjpn_s21 = geomGrow(hsj10c_sjpn -4.25 0.0 -4.25 0.0)

Executing: hsj10d_sjpn_s21 = geomGrow(hsj10d_sjpn -4.5 0.0 -4.5 0.0)

Executing: hsj10_sjpn_s21 = geomOr(hsj10a_sjpn_s21 hsj10b_sjpn_s21 hsj10c_sjpn_s21 hsj10...

Executing: hsj13a_sjpn_s21 = geomGrow(hsj13a_sjpn -4.875 0.0 -4.875 0.0)

Executing: hsj13b_sjpn_s21 = geomGrow(hsj13b_sjpn -5.25 0.0 -5.25 0.0)

Executing: hsj13c_sjpn_s21 = geomGrow(hsj13c_sjpn -5.625 0.0 -5.625 0.0)

Executing: hsj13d_sjpn_s21 = geomGrow(hsj13d_sjpn -6.0 0.0 -6.0 0.0)

Executing: hsj13_sjpn_s21 = geomOr(hsj13a_sjpn_s21 hsj13b_sjpn_s21 hsj13c_sjpn_s21 hsj13...

Executing: hsj16_sjpn_s21 = geomGrow(hsj16_sjpn -6.0 0.0 -6.0 0.0)

Executing: hsj16a_sjpn_s31 = geomGrow(hsj16a_sjpn -6.25 0.0 -6.25 0.0)

Executing: hsj16b_sjpn_s31 = geomGrow(hsj16b_sjpn -6.75 0.0 -6.75 0.0)

Executing: hsj16c_sjpn_s31 = geomGrow(hsj16c_sjpn -7.25 0.0 -7.25 0.0)

Executing: hsj16_sjpn_s31 = geomOr(hsj16a_sjpn_s31 hsj16b_sjpn_s31 hsj16c_sjpn_s31)

Executing: hsj16_sjpn_c_s21 = geomGrow(hsj16_sjpn_c -4.5 0.0 -4.5 0.0)

Executing: hsj103_sjpn_s12 = geomAndNot(hsj103_sjpn_s10 geomOr(hsj1_sjpn_s10 hsj103_sjpn...

Executing: hsj16_sjpn_s12 = geomAndNot(hsj16_sjpn_s10 geomOr(hsj1_sjpn_s10 hsj16_sjpn_s11))

Executing: hsj16_sjpn_c_s12 = geomAndNot(hsj16_sjpn_c_s10 geomOr(hsj1_sjpn_s10 hsj16_sjp...

Executing: hsj10_sjpn_s22 = geomAndNot(hsj10_sjpn geomOr(hsj10_sjpn_s21 hsj10_sjpn_s20))

Executing: hsj13_sjpn_s22 = geomAndNot(hsj13_sjpn geomOr(hsj13_sjpn_s21 hsj13_sjpn_s20))

Executing: hsj16_sjpn_s22 = geomAndNot(hsj16_sjpn_s20 geomOr(hsj16_sjpn_s21 hsj16_sjpn_s...

Executing: hsj16_sjpn_c_s22 = geomAndNot(hsj16_sjpn_c geomOr(hsj16_sjpn_s21 hsj16_sjpn_s...

Executing: err_O1SAPTa = geomAndNot(geomOr(hsj7_sjpn_s12 hsj103_sjpn_s12 hsj16_sjpn_s12 ...

Executing: err_O1SAPTb = geomAnd(geomAndNot(geomAnd(hsj1_sjpn_s10 geomOr(hsj7_sjpn_s11 h...

Executing: err_O1SAPT = geomOr(err_O1SAPTa err_O1SAPTb)
	   errorLayer(err_O1SAPT "O1SAPT : Fixed SALICIDE overlap of SJPN = 3.0")

Executing: err_O2SAPTa = geomAndNot(hsj10_sjpn_s22 salicide)

Executing: err_O2SAPTb = geomAnd(geomAndNot(geomAnd(hsj10_sjpn_s21 hsj10_sjpn_s20) hvtub...

Executing: err_O2SAPT = geomOr(err_O2SAPTa err_O2SAPTb)
	   errorLayer(err_O2SAPT "O2SAPT : Fixed SALICIDE overlap of SJPN = 4.5")

Executing: hsj_sjpn_s21 = geomOr(hsj13_sjpn_s21 hsj16_sjpn_s21)

Executing: err_O3SAPTa = geomAndNot(geomOr(hsj13_sjpn_s22 hsj16_sjpn_s22 hsj16_sjpn_c_s2...

Executing: err_O3SAPTb = geomAnd(geomAndNot(geomAnd(hsj_sjpn_s21 geomOr(hsj13_sjpn_s20 h...

Executing: err_O3SAPT = geomOr(err_O3SAPTa err_O3SAPTb)
	   errorLayer(err_O3SAPT "O3SAPT : Fixed SALICIDE overlap of SJPN = 6.0")

Executing: err_O4SAPTa = geomAndNot(hsj16_sjpn_s22 salicide)

Executing: err_O4SAPTb = geomAnd(geomAndNot(geomAnd(hsj16_sjpn_s31 hsj16_sjpn_s20) hvtub...

Executing: err_O4SAPT = geomOr(err_O4SAPTa err_O4SAPTb)
	   errorLayer(err_O4SAPT "O4SAPT : Fixed SALICIDE overlap of SJPN = 6.25")

Executing: met1poly_phsj = geomAnd(met1poly_1 phv1_sjpn1_sa)

Executing: met1poly_sjpn = geomAnd(geomSize(geomSize(met1poly_phsj 0.115) -0.115) sjpn)

Executing: met1poly_jpn = geomOr(met1poly_sjpn)

Executing: err_O1F1PTa = geomAndNot(geomAndNot(hsj1_sjpn hsj1_sjpn_s10) met1poly_jpn)

Executing: err_O1F1PTb = geomAnd(hsj1_sjpn_s10 met1poly_jpn)

Executing: err_O1F1PT = geomOr(err_O1F1PTa err_O1F1PTb)
	   errorLayer(err_O1F1PT "O1F1PT : Fixed M1_FPLATE overlap of SJPN = 3.0")

Executing: met2poly_jpn2 = geomAnd(met2poly_1 geomAnd(phv1_sjpn1_sa sjpn))

Executing: met2poly_jpn3 = geomAnd(met2poly_jpn2 hvtub)

Executing: met2poly_jpn4 = geomAndNot(met2poly_jpn2 met2poly_jpn3)

Executing: met2poly_jpn31 = geomSize(geomSize(met2poly_jpn3 0.115) -0.115)

Executing: met2poly_jpn41 = geomSize(geomSize(met2poly_jpn4 0.14) -0.14)

Executing: met2poly_jpn41_a = geomAnd(geomSize(geomSize(met2poly_jpn4 0.165) -0.165) dif...

Executing: met2poly_jpn = geomOr(met2poly_jpn31 met2poly_jpn41 met2poly_jpn41_a)

Executing: err_O1F2PTa = geomAndNot(geomAndNot(hsj10a_sjpn hsj10a_sjpn_s21) met2poly_jpn)

Executing: err_O1F2PTb = geomAnd(hsj10a_sjpn_s21 met2poly_jpn)

Executing: err_O1F2PT = geomOr(err_O1F2PTa err_O1F2PTb)
	   errorLayer(err_O1F2PT "O1F2PT : Fixed M2_FPLATE overlap SJPN = 3.75")

Executing: err_O2F2PTa = geomAndNot(geomAndNot(hsj10b_sjpn hsj10b_sjpn_s21) met2poly_jpn)

Executing: err_O2F2PTb = geomAnd(hsj10b_sjpn_s21 met2poly_jpn)

Executing: err_O2F2PT = geomOr(err_O2F2PTa err_O2F2PTb)
	   errorLayer(err_O2F2PT "O2F2PT : Fixed M2_FPLATE overlap SJPN = 4.0")

Executing: err_O3F2PTa = geomAndNot(geomAndNot(hsj10c_sjpn hsj10c_sjpn_s21) met2poly_jpn)

Executing: err_O3F2PTb = geomAnd(hsj10c_sjpn_s21 met2poly_jpn)

Executing: err_O3F2PT = geomOr(err_O3F2PTa err_O3F2PTb)
	   errorLayer(err_O3F2PT "O3F2PT : Fixed M2_FPLATE overlap SJPN = 4.25")

Executing: err_O4F2PTa = geomAndNot(geomAndNot(hsj10d_sjpn hsj10d_sjpn_s21) met2poly_jpn)

Executing: err_O4F2PTb = geomAnd(hsj10d_sjpn_s21 met2poly_jpn)

Executing: err_O4F2PT = geomOr(err_O4F2PTa err_O4F2PTb)
	   errorLayer(err_O4F2PT "O4F2PT : Fixed M2_FPLATE overlap SJPN = 4.5")

Executing: err_O4F2PTc = geomAndNot(geomAndNot(hsj16_sjpn_c hsj16_sjpn_c_s21) met2poly_jpn)

Executing: err_O4F2PTd = geomAnd(hsj16_sjpn_c_s21 met2poly_jpn)

Executing: err_O4F2PT_c = geomOr(err_O4F2PTc err_O4F2PTd)
	   errorLayer(err_O4F2PT_c "O4F2PT : Fixed M2_FPLATE overlap SJPN = 4.5")

Executing: err_O2F3PTa = geomAndNot(geomAndNot(hsj16a_sjpn hsj16a_sjpn_s31) met3)

Executing: err_O2F3PTb = geomAnd(hsj16a_sjpn_s31 met3)

Executing: err_O2F3PT = geomOr(err_O2F3PTa err_O2F3PTb)
	   errorLayer(err_O2F3PT "O2F3PT : Fixed M3_FPLATE overlap of SJPN = 6.25")

Executing: err_O3F3PTa = geomAndNot(geomAndNot(hsj16b_sjpn hsj16b_sjpn_s31) met3)

Executing: err_O3F3PTb = geomAnd(hsj16b_sjpn_s31 met3)

Executing: err_O3F3PT = geomOr(err_O3F3PTa err_O3F3PTb)
	   errorLayer(err_O3F3PT "O3F3PT : Fixed M3_FPLATE overlap of SJPN = 6.75")

Executing: err_O1F3PTa = geomAndNot(geomAndNot(hsj16_sjpn_c hsj16_sjpn_s21) met3)

Executing: err_O1F3PTb = geomAnd(geomAnd(hsj16_sjpn_c hsj16_sjpn_s21) met3)

Executing: err_O1F3PT = geomOr(err_O1F3PTa err_O1F3PTb)
	   errorLayer(err_O1F3PT "O1F3PT : Fixed M3_FPLATE overlap of SJPN = 6.0")

Executing: err_S3P1DF = drc(phv1_poly geomAnd(act sjpn) (sep < 0.48))
	   errorLayer(err_S3P1DF "S3P1DF : Minimum POLY1 spacing to DRAIN DIFF = 0.48")

Executing: err_E4P1GA = drc(poly geomStraddle(ndif phv1_gate) (enc < 0.52))
	   errorLayer(err_E4P1GA "E4P1GA :Minimum POLY1 extension beyond GATE = 0.52")

Executing: err_O1PTGAa = drc(phv1_sjgate (width == 1.5))

Executing: err_O1PTGA = geomAndNot(phv1_gate geomOr(phsj1_all err_O1PTGAa))
	   errorLayer(err_O1PTGA "O1PTGA : Fixed SJPN overlap of GATE = 1.5")

Executing: err_W2GA = geomGetLength(geomGetEdge(geomOr(phsj1_7 phsj1_10) inside act) (ke...
	   errorLayer(err_W2GA "W2GA : Minimum GATE width = 10.0")

Executing: err_W26GAa = geomGetLength(geomGetEdge(phsj1_16c inside act) (keep < 20.0) co...
	   errorLayer(err_W26GAa "W26GA : Minimum GATE width = 20.0")

Executing: err_W12GA = drc(phv1_all (width < 0.5))
	   errorLayer(err_W12GA "W12GA : Minimum CHANNEL length = 0.5")

Executing: err_E4IPDF = drc(pimp geomStraddle(act pmhsj_s) (enc < 0.14))
	   errorLayer(err_E4IPDF "E4IPDF : Minimum PIMP extension beyond SOURCE PDIFF = 0.14")

Executing: err_E4INDF = geomAndNot(geomAnd(geomSize(geomInside(act geomStraddle(nwell pm...
	   errorLayer(err_E4INDF "E4INDF : Minimum NIMP extension beyond NDIFF = 0.14")

Executing: err_S4INDP = drc(geomStraddle(act pmhsj_s) nimp (sep < 0.14))
	   errorLayer(err_S4INDP "S4INDP : Minimum NIMP spacing to PDIFF = 0.14")

Executing: err_B8PTa = geomGetNonRectangle(phv1_all)
	   errorLayer(err_B8PTa "B8PT : Fixed orientation is 0 degree or 180 degree")

Executing: err_B8PTb1 = geomGrow(phv1_all 0.01 0.0 0.01 0.0)

Executing: err_B8PTb = geomAndNot(err_B8PTb1 geomInside(err_B8PTb1 diff))
	   errorLayer(err_B8PTb "B8PT : Fixed orientation is 0 degree or 180 degree")

Executing: err_E1HBPTa = geomAndNot(phv1_s1 subblk)

Executing: err_E1HBPTb = geomAnd(geomAndNot(phv1_s2 phv1_s1) subblk)

Executing: err_E1HBPT = geomOr(err_E1HBPTa err_E1HBPTb)
	   errorLayer(err_E1HBPT "E1HBPT : Fixed SUBBLK enclosure of SJPN = 0.5")

Executing: err_S5DF = drc(phv1_gate geomAnd(act sjpn) (sep < 1.0))
	   errorLayer(err_S5DF "S5DF : Fixed DRAIN-EDGE-STI length = 1.0")

Executing: phv1_pedge_1_5 = geomSize(phv1_pedge -1.5)

Executing: phv1_gate_s1 = geomAnd(geomAndNot(geomSize(geomAnd(gate phv1_pedge_1_5) 1.0) ...

Executing: phv1_gate_s3 = geomSize(geomGetEdge(phv1_gate_s1 outside diff) 0.001)

Executing: err_S5DFa = geomAndNot(phv1_gate_s3 geomAnd(phv1_gate_s3 geomAnd(subblk phv1_...
	   errorLayer(err_S5DFa "S5DF : Fixed DRAIN-EDGE-STI length = 1.0")

Executing: phv1_g1 = geomGetEdge(phv1_gate outside geomAndNot(phv1_gate_s1 phv1_pedge_1_...

Executing: phv1_g1s = geomOr(geomSize(phv1_g1 0.5) phv1_gate)

Executing: phv1_g2s = geomOr(geomSize(phv1_g1 0.505) phv1_gate)

Executing: err_S3GADT = geomAndNot(geomAndNot(phv1_g2s phv1_g1s) dti)
	   errorLayer(err_S3GADT "S3GADT : Fixed GATE spacing to DTI = 0.5")

Executing: err_S1HNPTa = geomAnd(phv1_s1 hvnwell)

Executing: err_S1HNPTb = geomAndNot(geomAndNot(phv1_s2 phv1_s1) hvnwell)

Executing: err_S1HNPT = geomOr(err_S1HNPTa err_S1HNPTb)
	   errorLayer(err_S1HNPT "S1HNPT : Fixed HVNWELL spacing to SJPN = 0.5")

Executing: phv1_p1 = geomGetEdge(poly coincident phv1_alls)

Executing: phv1_p1s1 = geomSize(phv1_p1 0.2)

Executing: phv1_p1s2 = geomSize(phv1_p1 0.205)

Executing: err_S1P1NCa = geomAnd(phv1_p1s1 dnc)

Executing: err_S1P1NCb = geomAndNot(geomAndNot(phv1_p1s2 phv1_p1s1) dnc)

Executing: err_S1P1NC = geomOr(err_S1P1NCa err_S1P1NCb)
	   errorLayer(err_S1P1NC "S1P1NC : Fixed POLY1 spacing to DNC = 0.2")

Executing: phv1_h1 = geomSize(phv1_sjpn1_sa 1.0)

Executing: err_B9MV = geomAndNot(phv1_h1 mv)
	   errorLayer(err_B9MV "B9MV : phsj1_# without MV is not allowed")

Executing: phv1_c7_s0a = geomAnd(phv1_c7_s0 pwblk)

Executing: phv1_c10_s0a = geomAnd(phv1_c10_s0 pwblk)

Executing: phv1_c16c_s0a = geomAnd(phv1_c16c_s0 pwblk)

Executing: phv1_c7_s01 = geomAndNot(geomGrow(phv1_c7_s0 0.0 0.005 0.0 0.005) phv1_c7_s0a)

Executing: phv1_c10_s01 = geomAndNot(geomGrow(phv1_c10_s0 0.0 0.005 0.0 0.005) phv1_c10_...

Executing: phv1_c16c_s01 = geomAndNot(geomGrow(phv1_c16c_s0 0.0 0.005 0.0 0.005) phv1_c1...

Executing: err_E1PTBTa = geomAndNot(geomAndNot(phv1_c7_s0a hvtub) sjpn)

Executing: err_E1PTBTb = geomAnd(phv1_c7_s01 sjpn)

Executing: err_E1PTBT = geomOr(err_E1PTBTa err_E1PTBTb)
	   errorLayer(err_E1PTBT "E1PTBT : Fixed extension of SJPN beyond TUB = 1.5")

Executing: err_E2PTBTa = geomAndNot(geomAndNot(geomOr(phv1_c10_s0a phv1_c16c_s0a) hvtub)...

Executing: err_E2PTBTb = geomAnd(geomOr(phv1_c10_s01 phv1_c16c_s01) sjpn)

Executing: err_E2PTBT = geomOr(err_E2PTBTa err_E2PTBTb)
	   errorLayer(err_E2PTBT "E2PTBT : Fixed extension of SJPN beyond TUB = 3.0")

Executing: hvpw_c7 = geomAnd(hvpwell geomEnclose(hvtub geomOr(nhv1_7 phv1_7 dfwnsj_7)))

Executing: hvpw_c10 = geomAnd(hvpwell geomEnclose(hvtub geomOr(nhv1_10 phv1_10 dfwnsj_10)))

Executing: hvpw_c16c = geomAnd(hvpwell geomEnclose(hvtub geomOr(nhsj1_16c phsj1_16c dfwn...

Executing: hvnw_c7 = geomAnd(hvnwell geomEnclose(hvtub geomOr(nhv1_7 phv1_7 dfwnsj_7)))

Executing: hvnw_c10 = geomAnd(hvnwell geomEnclose(hvtub geomOr(nhv1_10 phv1_10 dfwnsj_10)))

Executing: hvnw_c16c = geomAnd(hvnwell geomEnclose(hvtub geomOr(nhsj1_16c phsj1_16c dfwn...

Executing: hvpw_c7_s = geomGrow(hvpw_c7 0.0 1.5 0.0 1.5)

Executing: hvpw_c7_s1 = geomAndNot(geomGrow(hvpw_c7_s 0.0 0.005 0.0 0.005) hvpw_c7_s)

Executing: hvpw_c10_s = geomGrow(hvpw_c10 0.0 3.0 0.0 3.0)

Executing: hvpw_c10_s1 = geomAndNot(geomGrow(hvpw_c10_s 0.0 0.005 0.0 0.005) hvpw_c10_s)

Executing: hvpw_c16c_s = geomGrow(hvpw_c16c 0.0 3.0 0.0 3.0)

Executing: hvpw_c16c_s1 = geomAndNot(geomGrow(hvpw_c16c_s 0.0 0.005 0.0 0.005) hvpw_c16c_s)

Executing: hvnw_c7_s = geomGrow(hvnw_c7 0.0 1.5 0.0 1.5)

Executing: hvnw_c7_s1 = geomAndNot(geomGrow(hvnw_c7_s 0.0 0.005 0.0 0.005) hvnw_c7_s)

Executing: hvnw_c10_s = geomGrow(hvnw_c10 0.0 3.0 0.0 3.0)

Executing: hvnw_c10_s1 = geomAndNot(geomGrow(hvnw_c10_s 0.0 0.005 0.0 0.005) hvnw_c10_s)

Executing: hvnw_c16c_s = geomGrow(hvnw_c16c 0.0 3.0 0.0 3.0)

Executing: hvnw_c16c_s1 = geomAndNot(geomGrow(hvnw_c16c_s 0.0 0.005 0.0 0.005) hvnw_c16c_s)

Executing: err_E1HPBTa = geomAndNot(geomAndNot(hvpw_c7_s hvtub) hvpwell)

Executing: err_E1HPBTb = geomAnd(hvpw_c7_s1 hvpwell)

Executing: err_E1HPBT = geomOr(err_E1HPBTa err_E1HPBTb)
	   errorLayer(err_E1HPBT "E1HPBT : Fixed extension of HVPWELL beyond TUB = 1.5")

Executing: err_E2HPBTa = geomAndNot(geomAndNot(geomOr(hvpw_c10_s hvpw_c16c_s) hvtub) hvp...

Executing: err_E2HPBTb = geomAnd(geomOr(hvpw_c10_s1 hvpw_c16c_s1) hvpwell)

Executing: err_E2HPBT = geomOr(err_E2HPBTa err_E2HPBTb)
	   errorLayer(err_E2HPBT "E2HPBT : Fixed extension of HVPWELL beyond TUB = 3.0")

Executing: err_E1HNBTa = geomAndNot(geomAndNot(hvnw_c7_s hvtub) hvnwell)

Executing: err_E1HNBTb = geomAnd(hvnw_c7_s1 hvnwell)

Executing: err_E1HNBT = geomOr(err_E1HNBTa err_E1HNBTb)
	   errorLayer(err_E1HNBT "E1HNBT : Fixed extension of HVNWELL beyond TUB = 1.5")

Executing: err_E2HNBTa = geomAndNot(geomAndNot(geomOr(hvnw_c10_s hvnw_c16c_s) hvtub) hvn...

Executing: err_E2HNBTb = geomAnd(geomOr(hvnw_c10_s1 hvnw_c16c_s1) hvnwell)

Executing: err_E2HNBT = geomOr(err_E2HNBTa err_E2HNBTb)
	   errorLayer(err_E2HNBT "E2HNBT : Fixed extension of HVNWELL beyond TUB = 3.0")

Executing: err_B6NTc = geomGetNonRectangle(dfwn1)
	   errorLayer(err_B6NTc "B6NT : Fixed orientation is 0 degree or 180 degree")

Executing: err_B6NTd1 = geomGrow(dfwn1 0.0 0.01 0.0 0.01)

Executing: err_B6NTd = geomStraddle(err_B6NTd1 implant)
	   errorLayer(err_B6NTd "B6NT : Fixed orientation is 0 degree or 180 degree")

Executing: dfwn1_h1 = geomSize(dfwn1_sa 1.0)

Executing: err_B4MV = geomAndNot(dfwn1_h1 mv)
	   errorLayer(err_B4MV "B4MV : dfwnsj1_# without MV is not allowed")

Executing: dhw_nbur = geomInside(nbur dhw_all)

Executing: geomStamp(dhw_nbur hwntub)

Executing: err_B2NB = geomOverlap(dhw_nbur hwafer1 sameNet)
	   errorLayer(err_B2NB "B2NB : dhw# terminal (Cathode/Anode) short is not allowed")

Executing: geomHoles(hwptub)

Executing: hwptub1 = geomOr(hwptub hwptub_hole)

Executing: err_B4HN = geomAndNot(dhw_all hwptub1)
	   errorLayer(err_B4HN "B4HN : dhw# must be surrounded by HWPTUB")

Executing: dhw2a_pur = geomAnd(geomOverlap(nbur dhw2a) hvnwell)

Executing: dhw2_pur = geomAnd(geomOverlap(nbur dhw2) hvnwell)

Executing: dhw3_pur = geomAnd(geomOverlap(nbur dhw3) hvnwell)

Executing: dhw2a_s05b = geomSize(dhw2a_pur 0.505)

Executing: dhw2_s05b = geomSize(dhw2_pur 0.505)

Executing: dhw3_s05b = geomSize(dhw3_pur 0.505)

Executing: dhw_foxdti = geomOr(geomInside(foxdti_mring0 dhw_all) geomButting(foxdti_mrin...

Executing: err_B2DT = geomAndNot(dhw_foxdti geomAnd(pwblk subblk))
	   errorLayer(err_B2DT "B2DT : FOXDTI without PWBLK and SUBBLK is not allowed")

Executing: nbur_dfwnsj_1 = geomAnd(nbur dfwn1_h0)

Executing: nbur_nhv1sj_1 = geomAnd(nbur nhv1_h0)

Executing: nbur_phv1sj_1 = geomAnd(nbur phv1_h0)

Executing: nbur_nisj_1 = geomAnd(nbur nisj_h0)

Executing: nbur_hvdev = geomOr(nbur_dfwnsj_1 nbur_nhv1sj_1 nbur_phv1sj_1 nbur_nisj_1)

Executing: nbur_hvdev_str0 = geomGetLength(geomGetEdge(nbur_hvdev coincident salicide) (...

Executing: nbur_hvdev_str1 = geomSize(geomSize(nbur_hvdev_str0 6.0) 0.5)

Executing: nbur_hvdev_str = geomAnd(geomOr(nbur_hvdev_str1 nbur_hvdev) geomAnd(nbur foxd...

Executing: nbur_check = geomAndNot(nbur nbur_hvdev_str)

Executing: err_B3DT = geomAnd(dhw_foxdti geomOr(nwell dnc dpc nimp pimp hres mres hvnwel...
	   errorLayer(err_B3DT "B3DT : NWELL, DNC, DPC, NIMP, PIMP, HRES, MRES, HVNWELL, HVPWELL, SJNP, SJPN, NBUR over FOXDTI is not allowed")

Executing: hvtub_phsj = geomEnclose(hvtub phsj1_all)

Executing: phsj_b = geomAndNot(geomAnd(hvnwell geomEnclose(hvtub phsj1_all)) diff)

Executing: phsj_bs = geomAnd(dti geomSize(phsj_b 0.5))

Executing: nbur10 = geomAndNot(nbur_check geomSize(salicide 0.5))

Executing: nbur1_s05 = geomSize(nbur10 -0.5)

Executing: err_O1NBDTb = geomAnd(nbur1_s05 diffdti)
	   errorLayer(err_O1NBDTb "O1NBDT : Fixed NBUR overlap of DIFFDTI = 0.5")

Executing: dhw2a_stamp = geomOr(dhw2a)

Executing: geomStamp(dhw2a_stamp hwntub)

Executing: dhw2_stamp = geomOr(dhw2)

Executing: geomStamp(dhw2_stamp hwntub)

Executing: dhw3_stamp = geomOr(dhw3)

Executing: geomStamp(dhw3_stamp hwntub)

Executing: err_S2NB = drc(dhw2a_stamp (sep < 23) diffNet)
	   errorLayer(err_S2NB "S2NB : Minimum NBUR spacing (different net) = 23.0")

Executing: err_S3NB = drc(dhw2_stamp (sep < 27) diffNet)
	   errorLayer(err_S3NB "S3NB : Minimum NBUR spacing (different net) = 27.0")

Executing: err_S4NB = drc(dhw3_stamp (sep < 33) diffNet)
	   errorLayer(err_S4NB "S4NB : Minimum NBUR spacing (different net) = 33.0")

Executing: err_S6NB = drc(dhw2 dhw2a (sep < 27))
	   errorLayer(err_S6NB "S6NB : Minimum NBUR spacing to NBUR (dhw2a) = 27.0")

Executing: err_S7NB = drc(dhw3 geomOr(dhw2 dhw2a) (sep < 33))
	   errorLayer(err_S7NB "S7NB : Minimum NBUR spacing to NBUR (dhw2a or dhw2) = 33.0")

Executing: err_S3DTHW = drc(geomAnd(hwc dhw3) dti (sep < 5.0))
	   errorLayer(err_S3DTHW "S3DTHW : Minimum DTI spacing to HWC = 5.0")

Executing: hwc_hwptub = geomInside(hwc hwptub)

Executing: err_S1NBHW = drc(hwc_hwptub dhw2a (sep < 19.5))
	   errorLayer(err_S1NBHW "S1NBHW : Minimum NBUR spacing to HWC = 19.5")

Executing: err_S2NBHW = drc(hwc_hwptub dhw2 (sep < 23.5))
	   errorLayer(err_S2NBHW "S2NBHW : Minimum NBUR spacing to HWC = 23.5")

Executing: err_S3NBHW = drc(hwc_hwptub dhw3 (sep < 29.5))
	   errorLayer(err_S3NBHW "S3NBHW : Minimum NBUR spacing to HWC = 29.5")

Executing: dhw3_hwntub = geomAnd(hwntub dhw3)

Executing: err_W3TN = drc(dhw3_hwntub (width < 5.0))
	   errorLayer(err_W3TN "W3TN : Minimum HWNTUB width = 5.0")

Executing: err_W1TP = drc(hwptub (width < 7.0))
	   errorLayer(err_W1TP "W1TP : Minimum HWPTUB width = 7.0")

Executing: hwptub_dhw2 = geomAnd(hwptub geomEnclose(hwptub1 geomOr(dhw2 dhw3)))

Executing: err_W2TP = drc(hwptub_dhw2 (width < 9.0))
	   errorLayer(err_W2TP "W2TP : Minimum HWPTUB width = 9.0")

Executing: nbur_hvdev_str_s1 = geomAnd(geomSize(nbur_hvdev_str 0.5) nbur)

Executing: nbur_dfwn1 = geomButting(nbur_hvdev_str_s1 dfwn1_h0)

Executing: err_B7NT = geomAndNot(nbur_dfwn1 geomButting(nbur_dfwn1 hwntub))
	   errorLayer(err_B7NT "B7NT : Cathode NBUR must connect to HWNTUB")

Executing: err_M_HP_dfwn = geomAndNot(geomAndNot(geomEnclose(hvtub dfwn1) geomOr(dfwn1 d...
	   errorLayer(err_M_HP_dfwn "M_HP : Predefined area must have HVPWELL")

Executing: err_M_DF_dfwn = geomAndNot(geomEnclose(hvtub dfwn1) diff)
	   errorLayer(err_M_DF_dfwn "M_DF : Predefined area must have DIFF")

Executing: dfwn1_h11 = geomAndNot(dfwn1_h1 hvwell0)

Executing: dfwn_call_s = geomOr(dfwn_c7_s dfwn_c10_s dfwn_c16_s geomAnd(dfwn1_h11 dti))

Executing: err_M_HB_dfwn = geomAndNot(dfwn_call_s subblk)
	   errorLayer(err_M_HB_dfwn "M_HB : Predefined area must have SUBBLK")

Executing: err_M_NB_dfwn = geomAndNot(geomSize(geomGetEdge(dfwn_call_s coincident subblk...
	   errorLayer(err_M_NB_dfwn "M_NB : Predefined area must have NBUR")

Executing: nbur_nhsj1 = geomButting(nbur_hvdev_str_s1 nhv1_h0)

Executing: err_B5NT = geomAndNot(nbur_nhsj1 geomButting(nbur_nhsj1 hwntub))
	   errorLayer(err_B5NT "B5NT : DRAIN NBUR must connect to HWNTUB")

Executing: err_M_HP_nhsj = geomAndNot(geomAndNot(geomEnclose(hvtub nhsj1_all) geomOr(nhv...
	   errorLayer(err_M_HP_nhsj "M_HP : Predefined area must have HVPWELL")

Executing: nhsj_ex1 = geomAnd(geomOr(geomSize(geomGetEdge(nhv1_alls inside hvpwell) 0.2)...

Executing: nhsj_ex2 = geomOverlap(nhsj_ex1 nhsj1_7)

Executing: nhsj_ex3 = geomOverlap(nhsj_ex1 geomOr(nhsj1_10 nhsj1_16c))

Executing: nhsj_ex5 = geomOr(nhsj_ex2 geomSize(geomGetEdge(nhsj_ex2 butting dti) 1.5))

Executing: nhsj_ex6 = geomOr(nhsj_ex3 geomSize(geomGetEdge(nhsj_ex3 butting dti) 3.0))

Executing: err_M_PC_nhsj7 = geomAndNot(geomAndNot(geomOverlap(hvpw_c7_s nhsj1_7) nhsj_ex...

Executing: err_M_PC_nhsj10 = geomAndNot(geomAndNot(geomOr(geomOverlap(hvpw_c10_s nhsj1_1...

Executing: err_M_PC_nhsj = geomOr(err_M_PC_nhsj7 err_M_PC_nhsj10)
	   errorLayer(err_M_PC_nhsj "M_PC : Predefined area must have DPC")

Executing: nhsj_ex71 = geomSize(geomGetEdge(nhsj1_all coincident poly) 0.48)

Executing: nhsj_ex711 = geomSize(geomGetEdge(nhsj1_all coincident poly) 0.52)

Executing: nhsj_ex72 = geomAnd(geomInside(nhsj_ex711 ndiff1) geomInside(ndiff1 nhsj_ex711))

Executing: nhsj_ex73 = geomOutside(nhsj_ex71 nhsj_ex72)

Executing: nhsj_ex81 = geomSize(geomGetEdge(nhsj1_all coincident poly) 0.76)

Executing: nhsj_ex82 = geomSize(geomGetEdge(nhsj1_all coincident poly) 0.77)

Executing: nhsj_ex83 = geomEnclose(nhsj_ex81 nhsj_ex73)

Executing: nhsj_ex84 = geomEnclose(nhsj_ex82 nhsj_ex73)

Executing: nhsj_ex8 = geomAndNot(nhsj_ex84 nhsj_ex83)

Executing: nhsj_ex91 = geomSize(geomGetEdge(nhsj1_all coincident poly) 0.75)

Executing: nhsj_ex92 = geomEnclose(nhsj_ex91 nhsj_ex72)

Executing: nhsj_ex9 = geomAndNot(nhsj_ex92 nhsj_ex72)

Executing: err_M_DN_nhsj = geomAndNot(nhsj_ex71 ndiff1)
	   errorLayer(err_M_DN_nhsj "M_DN : Predefined area must have NDIFF")

Executing: err_M_DP_nhsj = geomAndNot(geomOr(nhsj_ex8 nhsj_ex9) pdiff1)
	   errorLayer(err_M_DP_nhsj "M_DP : Predefined area must have PDIFF")

Executing: nhv1_h11 = geomAndNot(nhv1_h1 hvwell0)

Executing: err_M_HB_nhsj = geomAndNot(geomOr(nhv1_call_s geomAnd(nhv1_h11 dti)) subblk)
	   errorLayer(err_M_HB_nhsj "M_HB : Predefined area must have SUBBLK")

Executing: err_M_NB_nhsj = geomAndNot(geomSize(geomGetEdge(nhv1_call_s coincident subblk...
	   errorLayer(err_M_NB_nhsj "M_NB : Predefined area must have NBUR")

Executing: nbur_phsj1 = geomButting(nbur_hvdev_str_s1 phv1_h0)

Executing: err_B5PT = geomAndNot(nbur_phsj1 geomButting(nbur_phsj1 hwntub))
	   errorLayer(err_B5PT "B5PT : SOURCE NBUR must connect to HWNTUB")

Executing: err_M_NW_phsj = geomAndNot(geomAndNot(hvtub_phsj phv1_d) nwell)
	   errorLayer(err_M_NW_phsj "M_NW : Predefined area must have NWELL")

Executing: err_M_NB_phsj = geomAndNot(geomAndNot(hvtub_phsj phv1_d) nbur)
	   errorLayer(err_M_NB_phsj "M_NB : Predefined area must have NBUR")

Executing: phsj_ex1 = geomAnd(geomOr(geomSize(geomGetEdge(phv1_alls inside hvnwell) 0.2)...

Executing: phsj_ex2 = geomOverlap(phsj_ex1 phsj1_7)

Executing: phsj_ex3 = geomOverlap(phsj_ex1 geomOr(phsj1_10 phsj1_16c))

Executing: phsj_ex5 = geomOr(phsj_ex2 geomSize(geomGetEdge(phsj_ex2 butting dti) 1.5))

Executing: phsj_ex6 = geomOr(phsj_ex3 geomSize(geomGetEdge(phsj_ex3 butting dti) 3.0))

Executing: err_M_NC_phsj7 = geomAndNot(geomAndNot(geomSize(geomOverlap(hvnw_c7_s phsj1_7...

Executing: err_M_NC_phsj10 = geomAndNot(geomAndNot(geomSize(geomOr(geomOverlap(hvnw_c10_...

Executing: err_M_NC_phsj = geomOr(err_M_NC_phsj7 err_M_NC_phsj10)
	   errorLayer(err_M_NC_phsj "M_NC : Predefined area must have DNC")

Executing: phsj_ex71 = geomSize(geomGetEdge(phsj1_all coincident poly) 0.48)

Executing: phsj_ex711 = geomSize(geomGetEdge(phsj1_all coincident poly) 0.52)

Executing: phsj_ex72 = geomAnd(geomInside(phsj_ex711 ndiff1) geomInside(ndiff1 phsj_ex711))

Executing: phsj_ex73 = geomOutside(phsj_ex71 phsj_ex72)

Executing: phsj_ex81 = geomSize(geomGetEdge(phsj1_all coincident poly) 0.76)

Executing: phsj_ex82 = geomSize(geomGetEdge(phsj1_all coincident poly) 0.77)

Executing: phsj_ex83 = geomEnclose(phsj_ex81 phsj_ex73)

Executing: phsj_ex84 = geomEnclose(phsj_ex82 phsj_ex73)

Executing: phsj_ex8 = geomAndNot(phsj_ex84 phsj_ex83)

Executing: phsj_ex91 = geomSize(geomGetEdge(phsj1_all coincident poly) 0.75)

Executing: phsj_ex92 = geomEnclose(phsj_ex91 phsj_ex72)

Executing: phsj_ex9 = geomAndNot(phsj_ex92 phsj_ex72)

Executing: err_M_DP_phsj = geomAndNot(phsj_ex71 pdiff1)
	   errorLayer(err_M_DP_phsj "M_DP : Predefined area must have PDIFF")

Executing: err_M_DN_phsj = geomAndNot(geomOr(phsj_ex8 phsj_ex9) ndiff1)
	   errorLayer(err_M_DN_phsj "M_DN : Predefined area must have NDIFF")

Executing: phv1_h11 = geomAndNot(phv1_h1 hvwell0)

Executing: phv1_call_s = geomOr(phv1_c7_s phv1_c10_s phv1_c16_s)

Executing: err_M_HB_phsj = geomAndNot(geomOr(phv1_call_s geomAnd(phv1_h11 dti)) subblk)
	   errorLayer(err_M_HB_phsj "M_HB : Predefined area must have SUBBLK")

Executing: err_M_HP_phsj = geomAndNot(geomSize(geomGetEdge(phv1_call_s coincident subblk...
	   errorLayer(err_M_HP_phsj "M_HP : Predefined area must have HVPWELL")

Executing: nbur_nisj1 = geomButting(nbur_hvdev_str_s1 nisj_h0)

Executing: err_B9NT = geomAndNot(nbur_nisj1 geomButting(nbur_nisj1 hwntub))
	   errorLayer(err_B9NT "B9NT : Collector NBUR must connect to HWNTUB")

Executing: nisj1_pedge_1_5 = geomSize(nisj_pedge -1.5)

Executing: nisj1_s1 = geomSize(geomGetEdge(sjnp butting nisj1_alls) 0.5)

Executing: nisj1_s2 = geomSize(geomGetEdge(sjnp butting nisj1_alls) 0.505)

Executing: err_B4NFa = geomGetNonRectangle(nisj1_16)
	   errorLayer(err_B4NFa "B4NF : Fixed orientation is 0 degree or 180 degree")

Executing: err_B4NFb1 = geomGrow(nisj1_16 0.01 0.0 0.01 0.0)

Executing: err_B4NFb = geomAndNot(err_B4NFb1 geomInside(err_B4NFb1 diff))
	   errorLayer(err_B4NFb "B4NF : Fixed orientation is 0 degree or 180 degree")

Executing: nisj1_h1 = geomSize(nisj1_c16_sa1 5.0)

Executing: err_B7MV = geomAndNot(nisj1_h1 mv)
	   errorLayer(err_B7MV "B7MV : nisj1_16 without MV is not allowed")

Executing: err_W25GAa = drc(nisj1_16 (width == 1.0))

Executing: err_W25GA = geomAndNot(nisj1_16 err_W25GAa)
	   errorLayer(err_W25GA "W25GA : Fixed CHANNEL length = 1.0")

Executing: err_W27GA = geomGetLength(geomGetEdge(nisj1_all inside act) (keep < 20.0) con...
	   errorLayer(err_W27GA "W27GA : Minimum GATE width = 20.0")

Executing: err_S6DF = drc(nisj1_gate geomAnd(act sjnp) (sep < 1.0))
	   errorLayer(err_S6DF "S6DF : Fixed Collector-EDGE-STI length = 1.0")

Executing: nisj1_gate_s1 = geomAnd(geomAndNot(geomSize(geomAnd(gate nisj1_pedge_1_5) 1.0...

Executing: nisj1_gate_s3 = geomSize(geomGetEdge(nisj1_gate_s1 outside diff) 0.001)

Executing: err_S6DFa = geomAndNot(nisj1_gate_s3 geomAnd(nisj1_gate_s3 geomAnd(subblk nis...
	   errorLayer(err_S6DFa "S6DF : Fixed Collector-EDGE-STI length = 1.0")

Executing: err_S1HPNTai = geomAnd(nisj1_s1 hvpwell)

Executing: err_S1HPNTbi = geomAndNot(geomAndNot(nisj1_s2 nisj1_s1) hvpwell)

Executing: err_S1HPNTi = geomOr(err_S1HPNTai err_S1HPNTbi)
	   errorLayer(err_S1HPNTi "S1HPNT : Fixed HVPWELL spacing to SJNP = 0.5")

Executing: err_E1HBNTai = geomAndNot(nisj1_s1 subblk)

Executing: err_E1HBNTbi = geomAnd(geomAndNot(nisj1_s2 nisj1_s1) subblk)

Executing: err_E1HBNTi = geomOr(err_E1HBNTai err_E1HBNTbi)
	   errorLayer(err_E1HBNTi "E1HBNT : Fixed SUBBLK enclosure of SJNP = 0.5")

Executing: nisj1_p1 = geomGetEdge(poly coincident nisj1_alls)

Executing: nisj1_p1s1 = geomSize(nisj1_p1 0.2)

Executing: nisj1_p1s2 = geomSize(nisj1_p1 0.205)

Executing: err_S1P1PCai = geomAnd(nisj1_p1s1 dpc)

Executing: err_S1P1PCbi = geomAndNot(geomAndNot(nisj1_p1s2 nisj1_p1s1) dpc)

Executing: err_S1P1PCi = geomOr(err_S1P1PCai err_S1P1PCbi)
	   errorLayer(err_S1P1PCi "S1P1PC : Fixed POLY1 spacing to DPC = 0.2")

Executing: nisj1_g1 = geomGetEdge(nisj1_gate outside geomAndNot(nisj1_gate_s1 nisj1_pedg...

Executing: nisj1_g1s = geomOr(geomSize(nisj1_g1 0.5) nisj1_gate)

Executing: nisj1_g2s = geomOr(geomSize(nisj1_g1 0.505) nisj1_gate)

Executing: err_S2GADTi = geomAndNot(geomAndNot(nisj1_g2s nisj1_g1s) dti)
	   errorLayer(err_S2GADTi "S2GADT : Fixed GATE spacing to DTI = 0.5")

Executing: err_S4P1DF = drc(nisj1_poly geomAnd(act sjnp) (sep < 0.48))
	   errorLayer(err_S4P1DF "S4P1DF : Minimum POLY1 spacing to Collector DIFF = 0.48")

Executing: err_E3P1GAi = drc(poly geomStraddle(diff nisj1_gate) (enc < 0.52))
	   errorLayer(err_E3P1GAi "E3P1GA : Minimum POLY1 extension beyond GATE = 0.52")

Executing: nisj_tub_ex0 = geomEnclose(hvtub nisj1_16)

Executing: hvpw_c16 = geomAnd(hvpwell nisj_tub_ex0)

Executing: hvpw_c16_s = geomGrow(hvpw_c16 0.0 4.5 0.0 4.5)

Executing: hvpw_c16_s1 = geomAndNot(geomGrow(hvpw_c16_s 0.0 0.005 0.0 0.005) hvpw_c16_s)

Executing: err_E3HPBTa = geomAndNot(geomAndNot(hvpw_c16_s hvtub) hvpwell)

Executing: err_E3HPBTb = geomAnd(hvpw_c16_s1 hvpwell)

Executing: err_E3HPBT = geomOr(err_E3HPBTa err_E3HPBTb)
	   errorLayer(err_E3HPBT "E3HPBT : Fixed extension of HVPWELL beyond TUB = 4.5")

Executing: nisj1_c16_s0a = geomAnd(nisj1_c16_s0 pwblk)

Executing: nisj1_c16_s01 = geomAndNot(geomGrow(nisj1_c16_s0a 0.0 0.005 0.0 0.005) nisj1_...

Executing: err_E3NTBTa = geomAndNot(geomAndNot(nisj1_c16_s0a hvtub) sjnp)

Executing: err_E3NTBTb = geomAnd(nisj1_c16_s01 sjnp)

Executing: err_E3NTBT = geomOr(err_E3NTBTa err_E3NTBTb)
	   errorLayer(err_E3NTBT "E3NTBT : Fixed extension of SJNP beyond TUB = 4.5")

Executing: nisj1_c16_sa1a = geomAndNot(nisj1_c16_sa1 sjnp)

Executing: nisj1_c16_sa11 = geomAndNot(geomGrow(nisj1_c16_sa1a 0.0 0.005 0.0 0.005) nisj...

Executing: err_E1NFBTa = geomAndNot(geomAndNot(nisj1_c16_sa1a hvtub) nbuf)

Executing: err_E1NFBTb = geomAnd(nisj1_c16_sa11 nbuf)

Executing: err_E1NFBT = geomOr(err_E1NFBTa err_E1NFBTb)
	   errorLayer(err_E1NFBT "E1NFBT : Fixed extension of NBUF beyond TUB = 4.5")

Executing: err_O1NTGAia = drc(nisj1_sjgate (width == 1.5))

Executing: err_O1NTGAi = geomAndNot(nisj1_gate geomOr(nisj1_all err_O1NTGAia))
	   errorLayer(err_O1NTGAi "O1NTGA : Fixed SJNP overlap of GATE = 1.5")

Executing: nisj1_ga_ex1 = geomGetEdge(nisj1_16 coincident poly)

Executing: nisj1_ex10 = geomSize(nisj1_ga_ex1 0.52)

Executing: nisj1_ex11 = geomSize(geomGetEdge(nisj1_ex10 coincident diff) -0.5)

Executing: nisj1_ex1 = geomAndNot(nisj1_ex10 nisj1_ex11)

Executing: nisj1_ex20 = geomSize(nisj1_ga_ex1 0.75)

Executing: nisj1_ex2 = geomAndNot(nisj1_ex20 nisj1_ex10)

Executing: nisj1_ex12 = geomAnd(nisj1_ex1 ndif)

Executing: nisj1_ex13 = geomAnd(nisj1_ex1 pdif)

Executing: nisj1_ex121 = geomGetRectangle(nisj1_ex12 (length == 1.0) (width == 0.52))

Executing: nisj1_ex131 = geomGetRectangle(nisj1_ex13 (length == 1.0) (width == 0.52))

Executing: err_W3IN = geomAndNot(nisj1_ex12 nisj1_ex121)
	   errorLayer(err_W3IN "W3IN : Fixed Emitter NDIFF sequment size = 1.0x0.52")

Executing: err_W4IP = geomAndNot(nisj1_ex13 nisj1_ex131)
	   errorLayer(err_W4IP "W4IP : Fixed Emitter PDIFF sequment size = 1.0x0.52")

Executing: err_M_DN_nisj = geomButting(nisj1_ex13 nisj1_ex11)
	   errorLayer(err_M_DN_nisj "M_DN : Predefined area must have NDIFF")

Executing: err_M_DP_nisj = geomAndNot(geomOr(nisj1_ex2 nisj1_ex11) pdif)
	   errorLayer(err_M_DP_nisj "M_DP : Predefined area must have PDIFF")

Executing: nisj1_ex21 = geomSize(geomGetEdge(nisj1_c16_s butting nbuf) 4.0)

Executing: nisj1_ex22 = geomSize(geomGetEdge(nisj1_c16_s butting nbuf) 5.5)

Executing: nisj1_ex23 = geomAndNot(nisj1_ex22 nisj1_ex21)

Executing: err_M_IP_nisj = geomAndNot(nisj1_ex23 pimp)
	   errorLayer(err_M_IP_nisj "M_IP : Predefined area must have PIMP")

Executing: err_N_IP_nisj = geomAnd(geomAndNot(nisj1_c16_sa0 nisj1_ex23) pimp)
	   errorLayer(err_N_IP_nisj "N_IP : Predefined area must not have PIMP")

Executing: err_M_NF_nisj = geomAndNot(nisj1_nbuf_f nbuf)
	   errorLayer(err_M_NF_nisj "M_NF : Predefined area must have NBUF")

Executing: err_B5NF = geomAndNot(nisj1_nbuf_f geomOr(met1 met2 met3))
	   errorLayer(err_B5NF "B5NF : NBUF without MET1, MET2, M3_FPLATE is not allowed")

Executing: nisj1_nbuf_ex1 = geomGrow(nisj1_nbuf_f 0 -0.5 0 -0.5)

Executing: nisj1_nbuf_ex2 = geomGrow(nisj1_nbuf_f 0 -1.5 0 -1.5)

Executing: nisj1_nbuf_ex3 = geomGrow(nisj1_nbuf_f 0 -2.0 0 -2.0)

Executing: nisj1_nbuf_ex4 = geomGrow(nisj1_nbuf_f 0 -3.0 0 -3.0)

Executing: nisj1_nbuf_ex5 = geomGrow(nisj1_nbuf_f 0 -3.5 0 -3.5)

Executing: err_O1SANFa = geomAndNot(geomAndNot(nisj1_nbuf_f nisj1_nbuf_ex1) salicide)

Executing: err_O1SANFb = geomAndNot(geomAndNot(nisj1_nbuf_ex2 nisj1_nbuf_ex3) salicide)

Executing: err_O1SANFc = geomAndNot(geomAndNot(nisj1_nbuf_ex4 nisj1_nbuf_ex5) salicide)

Executing: err_O1SANF = geomOr(err_O1SANFa err_O1SANFb err_O1SANFc)
	   errorLayer(err_O1SANF "O1SANF : Fixed SALICIDE overlap of NBUF = 7.0")

Executing: nisj1_nbuf_ex10 = geomOr(nisj1_nbuf_f geomSize(nisj1_nbuf_edg 3.5))

Executing: nisj1_nbuf_ex11 = geomSize(nisj1_nbuf_ex10 0.5)

Executing: nisj1_nbuf_ex12 = geomGrow(nisj1_nbuf_ex11 0 4.0 0 4.0)

Executing: err_M_NB_nisj = geomAndNot(nisj1_nbuf_ex12 nbur)
	   errorLayer(err_M_NB_nisj "M_NB : Predefined area must have NBUR")

Executing: nisj_tub_ex1 = geomOr(nisj_h0 hvpw_c16_s)

Executing: nisj_tub_ex2 = geomGrow(nisj_tub_ex1 0 4.5 0 4.5)

Executing: err_N_NB_nisj = geomAnd(geomAndNot(nisj_tub_ex2 nisj1_nbuf_ex12) nbur)
	   errorLayer(err_N_NB_nisj "N_NB : Predefined area must not have NBUR")

Executing: err_M_HP_nisj = geomAndNot(geomAndNot(nisj_tub_ex0 nisj_h0) hvpwell)
	   errorLayer(err_M_HP_nisj "M_HP : Predefined area must have HVPWELL")

Executing: hvpw_s1_ex0 = geomGrow(hvpw_c16_s -0.7 0 -0.7 0)

Executing: err_M_PC_nisj = geomAndNot(hvpw_s1_ex0 dpc)
	   errorLayer(err_M_PC_nisj "M_PC : Predefined area must have DPC")

Executing: dti10_nhsj7 = geomAndNot(geomAndNot(hsj7_sjnp hsj7_sjnp_s11) hsj7_sjnp_s12)

Executing: dti11_nhsj7 = geomAndNot(dti10_nhsj7 dti)

Executing: dti10_nhsj10 = geomAndNot(geomAndNot(hsj103_sjnp_s10 hsj103_sjnp_s11) hsj103_...

Executing: dti11_nhsj10 = geomAnd(dti10_nhsj10 dti)

Executing: dti13_nhsj10 = geomEnclose(dti10_nhsj10 dti11_nhsj10 (keep < 3))

Executing: dti20_nhsj10 = geomAndNot(geomAndNot(hsj10_sjnp hsj10_sjnp_s20) hsj10_sjnp_s22)

Executing: dti21_nhsj10 = geomAndNot(dti20_nhsj10 dti)

Executing: dti_nhsj10 = geomOr(dti13_nhsj10 dti21_nhsj10)

Executing: dti10_nhsj16c = geomAndNot(geomAndNot(hsj16_sjnp_c_s10 hsj16_sjnp_c_s11) hsj1...

Executing: dti11_nhsj16c = geomAnd(dti10_nhsj16c dti)

Executing: dti13_nhsj16c = geomEnclose(dti10_nhsj16c dti11_nhsj16c (keep < 7))

Executing: dti20_nhsj16c = geomAndNot(geomAndNot(hsj16_sjnp_c hsj16_sjnp_s40) hsj16_sjnp...

Executing: dti21_nhsj16c = geomAnd(dti20_nhsj16c dti)

Executing: dti23_nhsj16c = geomEnclose(dti20_nhsj16c dti21_nhsj16c (keep < 3))

Executing: dti_nhsj16c = geomOr(dti13_nhsj16c dti23_nhsj16c)

Executing: dti10_nhsj16 = geomAndNot(geomAndNot(hsj16_sjnp_s10 hsj16_sjnp_s11) hsj16_sjn...

Executing: dti11_nhsj16 = geomAnd(dti10_nhsj16 dti)

Executing: dti13_nhsj16 = geomEnclose(dti10_nhsj16 dti11_nhsj16 (keep < 7))

Executing: dti20_nhsj16 = geomAndNot(geomAndNot(hsj16_sjnp_s20 hsj16_sjnp_s30) hsj16_sjn...

Executing: dti21_nhsj16 = geomAnd(dti20_nhsj16 dti)

Executing: dti23_nhsj16 = geomEnclose(dti20_nhsj16 dti21_nhsj16 (keep < 3))

Executing: dti31_nhsj16 = geomAnd(dti30_nhsj16 dti)

Executing: dti33_nhsj16 = geomEnclose(dti30_nhsj16 dti31_nhsj16 (keep < 2))

Executing: dti_nhsj16 = geomOr(dti13_nhsj16 dti23_nhsj16 dti33_nhsj16)

Executing: err_M_DT_nhsj = geomOr(dti_nhsj16c dti_nhsj16 dti_nhsj10 dti11_nhsj7)
	   errorLayer(err_M_DT_nhsj "M_DT : Predefined area must have DTI")

Executing: dti10_phsj7 = geomAndNot(geomAndNot(hsj7_sjpn hsj7_sjpn_s11) hsj7_sjpn_s12)

Executing: dti11_phsj7 = geomAndNot(dti10_phsj7 dti)

Executing: dti10_phsj10 = geomAndNot(geomAndNot(hsj103_sjpn_s10 hsj103_sjpn_s11) hsj103_...

Executing: dti11_phsj10 = geomAnd(dti10_phsj10 dti)

Executing: dti13_phsj10 = geomEnclose(dti10_phsj10 dti11_phsj10 (keep < 3))

Executing: dti20_phsj10 = geomAndNot(geomAndNot(hsj10_sjpn hsj10_sjpn_s20) hsj10_sjpn_s22)

Executing: dti21_phsj10 = geomAndNot(dti20_phsj10 dti)

Executing: dti_phsj10 = geomOr(dti13_phsj10 dti21_phsj10)

Executing: dti10_phsj16c = geomAndNot(geomAndNot(hsj16_sjpn_c_s10 hsj16_sjpn_c_s11) hsj1...

Executing: dti11_phsj16c = geomAnd(dti10_phsj16c dti)

Executing: dti13_phsj16c = geomEnclose(dti10_phsj16c dti11_phsj16c (keep < 7))

Executing: dti20_phsj16c = geomAndNot(geomAndNot(hsj16_sjpn_c hsj16_sjpn_s40) hsj16_sjpn...

Executing: dti21_phsj16c = geomAnd(dti20_phsj16c dti)

Executing: dti23_phsj16c = geomEnclose(dti20_phsj16c dti21_phsj16c (keep < 3))

Executing: dti_phsj16c = geomOr(dti13_phsj16c dti23_phsj16c)

Executing: err_M_DT_phsj = geomOr(dti_phsj16c dti_phsj10 dti11_phsj7)
	   errorLayer(err_M_DT_phsj "M_DT : Predefined area must have DTI")

Executing: dfwdpa_diff = geomAnd(act dfwdp_tub2)

Executing: err_E5INDF = drc(nimp dfwdpa_diff (enc < 0.14))
	   errorLayer(err_E5INDF "E5INDF : Minimum NIMP enclosure of ACTIVE = 0.14")

Executing: err_E5IPDF = drc(pimp dfwdpa_diff (enc < 0.14))
	   errorLayer(err_E5IPDF "E5IPDF : Minimum PIMP enclosure of ACTIVE = 0.14")

Executing: nmva_nw0 = geomStraddle(geomAnd(tub nwell) nmva2_all)

Executing: nmva_nw0a = geomAnd(geomSize(geomGetEdge(nmva_nw0 butting dti) 0.5) nwell)

Executing: nmva_nw = geomOr(nmva_nw0 nmva_nw0a)

Executing: err_B5MV = geomAndNot(geomEnclose(dtiholes1 nmva) mv)
	   errorLayer(err_B5MV "B5MV : nmva without MV is not allowed")

Executing: nmva_ch = geomGetEdge(nmva_nw butting nmva_all)

Executing: nmva_ch_s1 = geomSize(nmva_ch 0.5)

Executing: nmva_ch_s2 = geomSize(nmva_ch 0.505)

Executing: err_W3GAa = geomAndNot(nmva_ch_s1 nmva_all)

Executing: err_W3GAb = geomAnd(geomAndNot(nmva_ch_s2 nmva_ch_s1) nmva_all)

Executing: err_W3GA = geomOr(err_W3GAa err_W3GAb)
	   errorLayer(err_W3GA "W3GA : Fixed CHANNEL length = 0.5")

Executing: err_W4GA = geomGetLength(geomGetEdge(nmva2 coincident poly) (keep < 1.0) cont...
	   errorLayer(err_W4GA "W4GA : Minimum CHANNEL width = 1.0")

Executing: err_O1NWGAa = drc(nmva_nw nmva2_all (ovlp == 0.3))

Executing: err_O1NWGA = geomAndNot(geomAnd(nmva_nw nmva2_all) err_O1NWGAa)
	   errorLayer(err_O1NWGA "O1NWGA : Fixed NWELL overlap of GATE = 0.3")

Executing: nmva_nsd = geomInside(ndiff1 nmva_nw)

Executing: nmva_s1 = geomSize(geomGetEdge(nmva_nw inside nmva2_all) -0.7)

Executing: nmva_s2 = geomSize(geomGetEdge(nmva_s1 butting ndiff1) -0.4)

Executing: err_S3DF = geomXor(geomAndNot(nmva_s1 nmva2_all) nmva_s2)
	   errorLayer(err_S3DF "S3DF : Fixed DRAIN-EDGE-STI length = 0.4")

Executing: err_S1P1DN = drc(poly nmva_nsd (sep < 0.2))
	   errorLayer(err_S1P1DN "S1P1DN : Minimum POLY1 spacing to DRAIN NDIFF = 0.2")

Executing: err_E2P1GA = drc(poly geomStraddle(ndif nmva2_all) (enc < 0.2))
	   errorLayer(err_E2P1GA "E2P1GA : Minimum POLY1 extension beyond GATE = 0.2")

Executing: nmva_p1 = geomSize(geomGetEdge(nwell inside nmva2) -0.5)

Executing: nmva_p2 = geomOr(nmva_p1 nmva)

Executing: nmva_p3 = geomSize(geomGetEdge(nmva_p2 inside poly) 1.0)

Executing: err_E10P1GA = geomAndNot(nmva_p3 poly)
	   errorLayer(err_E10P1GA "E10P1GA : Minimum POLY1 extension beyond GATE = 1.0")

Executing: err_E3NWDN = drc(nwell nmva_nsd (enc < 0.5))
	   errorLayer(err_E3NWDN "E3NWDN : Minimum NWELL enclosure of DRAIN NDIFF = 0.5")

Executing: geomGetEdge(nmva2 coincident nmva_p2 coincident diff)

Executing: nmva_g1 = geomGetEdge(nmva2 coincident nmva_p2 coincident diff)

Executing: nmva_g1s = geomOr(geomSize(nmva_g1 0.5) nmva2_all)

Executing: nmva_g2s = geomOr(geomSize(nmva_g1 0.505) nmva2_all)

Executing: err_S4GADT = geomAndNot(geomAndNot(nmva_g2s nmva_g1s) dti)
	   errorLayer(err_S4GADT "S4GADT : Fixed GATE spacing to DTI = 0.5")

Executing: nmva2_10 = geomOr(nmva nmva_s1 nmva_s2)

Executing: nmva2_11 = geomOr(nmva2_10 geomAndNot(geomButtOrOver(act nmva2_10) dti))

Executing: nmva2_12 = geomSize(nmva2_11 0.5)

Executing: M_DT_nmva = geomGetEdge(nmva2_12 outside dti)
	   errorLayer(M_DT_nmva "M_DT : Predefined area must have DTI")

Executing: err_B8MV = geomAndNot(geomEnclose(dtiholes1 pmva) mv)
	   errorLayer(err_B8MV "B8MV : pmva without MV is not allowed")

Executing: err_W9GAa = drc(pmva (width == 0.5))

Executing: err_W9GA = geomAndNot(pmva err_W9GAa)
	   errorLayer(err_W9GA "W9GA : Fixed CHANNEL length = 0.5")

Executing: err_W10GA = geomGetLength(geomGetEdge(pmva2 coincident poly) (keep < 1.0) con...
	   errorLayer(err_W10GA "W10GA : Minimum CHANNEL width = 1.0")

Executing: pmva_s1 = geomSize(geomGetEdge(nwell inside pmva2) 0.7)

Executing: pmva_s2 = geomSize(geomGetEdge(pmva_s1 butting pdiff1) -0.4)

Executing: err_S8DF = geomXor(geomAndNot(pmva_s1 pmva2) pmva_s2)
	   errorLayer(err_S8DF "S8DF : Fixed DRAIN-EDGE-STI length = 0.4")

Executing: err_S3P1DP = drc(geomStraddle(poly pmva) pdif (sep < 0.2))
	   errorLayer(err_S3P1DP "S3P1DP : Minimum POLY1 spacing to DRAIN PDIFF = 0.2")

Executing: err_E9P1GA = drc(poly geomStraddle(pdif pmva_gate) (enc < 0.2))
	   errorLayer(err_E9P1GA "E9P1GA : Minimum POLY1 extension beyond GATE = 0.2")

Executing: pmva_p1 = geomSize(geomGetEdge(nwell inside pmva2) 0.8)

Executing: pmva_p2 = geomOr(pmva_p1 pmva)

Executing: pmva_p3 = geomSize(geomGetEdge(pmva_p2 inside poly) 1.0)

Executing: err_E11P1GA = geomAndNot(pmva_p3 poly)
	   errorLayer(err_E11P1GA "E11P1GA : Minimum POLY1 extension beyond GATE = 1.0")

Executing: pmva_nw0 = geomStraddle(geomAnd(tub nwell) pmva2)

Executing: pmva_nw0a = geomAnd(geomSize(geomGetEdge(pmva_nw0 butting dti) 0.5) nwell)

Executing: pmva_nw = geomOr(pmva_nw0 pmva_nw0a)

Executing: pmva_so = geomInside(pdiff1 pmva_nw)

Executing: err_E3NWDP = drc(nwell pmva_so (enc < 0.5))
	   errorLayer(err_E3NWDP "E3NWDP : Minimum NWELL enclosure of SOURCE PDIFF = 0.5")

Executing: err_O2PWGAa = drc(geomAndNot(pmva2_all nwell) (width == 0.3))

Executing: err_O2PWGA = geomAndNot(geomAndNot(pmva2_all pmva_gate) err_O2PWGAa)
	   errorLayer(err_O2PWGA "O2PWGA : Fixed PWELL overlap of GATE = 0.3")

Executing: geomGetEdge(pmva2_all coincident pmva_p2 coincident diff)

Executing: pmva_g1 = geomGetEdge(pmva2_all coincident pmva_p2 coincident diff)

Executing: pmva_g1s = geomOr(geomSize(pmva_g1 0.5) pmva2_all)

Executing: pmva_g2s = geomOr(geomSize(pmva_g1 0.505) pmva2_all)

Executing: err_S4GADTa = geomAndNot(geomAndNot(pmva_g2s pmva_g1s) dti)
	   errorLayer(err_S4GADTa "S4GADT : Fixed GATE spacing to DTI = 0.5")

Executing: pmva2_10 = geomOr(pmva pmva_s1 pmva_s2 pmva_so)

Executing: pmva2_11 = geomOr(pmva2_10 geomAndNot(geomButtOrOver(act pmva2_10) dti))

Executing: pmva2_12 = geomSize(pmva2_11 0.5)

Executing: M_DT_pmva = geomGetEdge(pmva2_12 outside dti)
	   errorLayer(M_DT_pmva "M_DT : Predefined area must have DTI")

Executing: qpv_emi = geomOr(qpva_w qpvb_w qpvc_w)

Executing: qpv_emi_s1 = geomSize(qpv_emi 1.33)

Executing: qpv_emi_s2 = geomSize(qpv_emi 1.335)

Executing: err_E1HBNWa = geomAndNot(qpv_emi_s1 subblk)

Executing: err_E1HBNWb = geomAndNot(geomAnd(geomAndNot(qpv_emi_s2 qpv_emi_s1) subblk) dti)

Executing: err_E1HBNW = geomOr(err_E1HBNWa err_E1HBNWb)
	   errorLayer(err_E1HBNW "E1HBNW : Fixed SUBBLK enclosure of NWELL = 1.33")

Executing: drc(gate (width < 0.18) "W4P1 : Minimum GATE length = 0.18")

Executing: err_W3DF = geomGetLength(geomGetEdge(gate coincident poly) (keep < 0.22) cont...
	   errorLayer(err_W3DF "W3DF : Minimum GATE width = 0.22")

Executing: nel_edge = geomGetEdge(nel inside ndif)

Executing: pel_edge = geomGetEdge(pel0 inside pdif)

Executing: drcnel = drc(nel_edge (width < 0.22) (shielded gate))

Executing: drcpel = drc(pel_edge (width < 0.22) (shielded gate))

Executing: err_W6P1 = geomOr(drcnel drcpel)
	   errorLayer(err_W6P1 "W6P1 : Minimum GATE length = 0.22")

Executing: ndiffa_mv = geomAnd(ndif mv)

Executing: pdiffa_mv = geomAnd(pdif mv)

Executing: ngate_mv_edge = geomGetEdge(nem1 inside ndiffa_mv)

Executing: pgate_mv_edge = geomGetEdge(pem10a inside pdiffa_mv)

Executing: drcngate_mv = drc(ngate_mv_edge (width < 0.5) (shielded gate))

Executing: drcpgate_mv = drc(pgate_mv_edge (width < 0.5) (shielded gate))

Executing: err_W8P1 = geomOr(drcngate_mv drcpgate_mv)
	   errorLayer(err_W8P1 "W8P1 : Minimum GATE length = 0.5")

Executing: pemti_mv_edge = geomGetEdge(pemti inside pdiffa_mv)

Executing: err_W8P1a = drc(pemti_mv_edge (width < 0.5) (shielded gate))
	   errorLayer(err_W8P1a "W8P1 : Minimum GATE length = 0.5")

Executing: mosvc_all = geomOr(mosvc1 mosvci1)

Executing: mosvc1_edge = geomGetEdge(mosvc1 inside ndif)

Executing: mosvc1_edges = geomSize(mosvc1_edge 0.001)

Executing: mosvci1_edge = geomGetEdge(mosvci1 inside pdif)

Executing: mosvci1_edges = geomSize(mosvci1_edge 0.001)

Executing: err_B5GA = geomGetNonRectangle(mosvc_all)
	   errorLayer(err_B5GA "B5GA : Only rectangular GATE is allowed")

Executing: gp_mosvc1 = drc(mosvc1_edges (sep < 2.0) opposite)

Executing: gp_mosvci1 = drc(mosvci1_edges (sep < 2.0) opposite)

Executing: err_W22GA = geomAnd(geomOr(gp_mosvc1 gp_mosvci1) mosvc_all)
	   errorLayer(err_W22GA "W22GA : Minimum GATE length = 2.0")

Executing: err_W23GA = drc(mosvc_all (width < 2.0))
	   errorLayer(err_W23GA "W23GA : Minimum GATE width = 2.0")

Executing: ngate_nn_edge = geomGetEdge(nngate1 inside ndif)

Executing: err_W3P1 = drc(ngate_nn_edge (width < 1.0) (shielded gate))
	   errorLayer(err_W3P1 "W3P1 : Minimum GATE length = 1.0")

Executing: err_W6DF = geomGetLength(geomGetEdge(nngate1 coincident poly) (keep < 1.0) co...
	   errorLayer(err_W6DF "W6DF : Minimum GATE width = 1.0")

Executing: err_B3GA = geomGetNonRectangle(nngate1)
	   errorLayer(err_B3GA "B3GA : Only rectangular GATE inside PWBLK is allowed")

Executing: ngate_dpl_edge = geomGetEdge(ndm inside ndif)

Executing: err_W18GA = drc(ngate_dpl_edge (width < 0.7) (shielded gate))
	   errorLayer(err_W18GA "W18GA : Minimum GATE length = 0.7")

Executing: drc(ndm (width < 0.44) "W19GA : Minimum GATE width = 0.44")

Executing: err_B2M1 = geomAnd(geomOr(cont via1) met1res)
	   errorLayer(err_B2M1 "B2M1 : CONT or VIA1 are not allowed within rm1")

Executing: err_B2M2 = geomAnd(via1 met2res)
	   errorLayer(err_B2M2 "B2M2 : VIA1 is not allowed within rm2")

Executing: err_B2MT = geomAnd(vtp mtpres)
	   errorLayer(err_B2MT "B2MT : VIATP is not allowed within rmtp")

Executing: err_B4M2 = geomAnd(via2 met2res)
	   errorLayer(err_B4M2 "B4M2 : VIA2 is not allowed within rm2")

Executing: err_B2M3 = geomAnd(via2 met3res)
	   errorLayer(err_B2M3 "B2M3 : VIA2 is not allowed within rm3")

Executing: err_B4M3 = geomAnd(via3 met3res)
	   errorLayer(err_B4M3 "B4M3 : VIA3 is not allowed within rm3")

Executing: err_B2M4 = geomAnd(via3 met4res)
	   errorLayer(err_B2M4 "B2M4 : VIA3 is not allowed within rm4")

Executing: err_B3M4 = geomAnd(vtp met4res)
	   errorLayer(err_B3M4 "B3M4 : VIATP is not allowed within rm4")

Executing: err_B3MT = geomAnd(vtpl mtpres)
	   errorLayer(err_B3MT "B3MT : VIATPL is not allowed within rmtp")

Executing: err_B2ML = geomAnd(vtpl mtplres)
	   errorLayer(err_B2ML "B2ML : VIATPL is not allowed within rmtpl")

Executing: rdn_edge = geomSize(geomGetEdge(rdn1 coincident ndif) 0.001)

Executing: err_W4DFab = drc(rdn_edge (sep < 0.42) opposite)

Executing: err_W4DFa = geomAnd(err_W4DFab rdn1)

Executing: rdp_edge = geomSize(geomGetEdge(rdp1 coincident pdif) 0.001)

Executing: err_W4DFbb = drc(rdp_edge (sep < 0.42) opposite)

Executing: err_W4DFb = geomAnd(err_W4DFbb rdp1)

Executing: err_W4DF = geomOr(err_W4DFa err_W4DFb)
	   errorLayer(err_W4DF "W4DF : Minimum width = 0.42")

Executing: err_B2CT = geomAnd(rpp1s cont)
	   errorLayer(err_B2CT "B2CT : CONT is not allowed within rpp1s#")

Executing: err_W15P1a = drc(rnp1 (width < 0.42))

Executing: err_W15P1b = drc(geomAndNot(rpp1 cfg_p12) (width < 0.42))

Executing: err_W15P1 = geomOr(err_W15P1a err_W15P1b)
	   errorLayer(err_W15P1 "W15P1 : Minimum rnp1#, rpp1# width = 0.42")

Executing: drc(nimp rnp1 (enc < 0.18) "E1INP1 : Minimum NIMP extension beyond rnp1# = 0....

Executing: err_E1IPP1 = geomOr(drc(pimp rpp1 (enc < 0.18)) drc(pimp rpp1s (enc < 0.18)))
	   errorLayer(err_E1IPP1 "E1IPP1 : Minimum PIMP extension beyond rpp1# or rpp1s# = 0.18")

Executing: err_S1INP1 = geomOr(drc(nimp rpp1 (sep < 0.26)) drc(nimp rpp1s (sep < 0.26)))
	   errorLayer(err_S1INP1 "S1INP1 : Minimum NIMP spacing to rpp1# or rpp1s# = 0.26")

Executing: drc(pimp rnp1 (sep < 0.26) "S1IPP1 : Minimum PIMP spacing to rnp1# = 0.26")

Executing: err_B4P1 = geomStraddle(rnp1_3 nwell)
	   errorLayer(err_B4P1 "B4P1 : rnp1_3 crossing NWELL edge is not allowed")

Executing: err_B6P1 = geomAnd(rnp1_3 rnw1)
	   errorLayer(err_B6P1 "B6P1 : rnp1_3 overlap of rnw/rnw5 is not allowed")

Executing: err_B7P1 = geomStraddle(rpp1_3 nwell)
	   errorLayer(err_B7P1 "B7P1 : rpp1_3 crossing NWELL edge is not allowed")

Executing: err_B9P1 = geomAnd(rpp1_3 rnw1)
	   errorLayer(err_B9P1 "B9P1 : rpp1_3 overlap of rnw/rnw5 is not allowed")

Executing: err_B5P1 = geomStraddle(rpp1s_3 nwell)
	   errorLayer(err_B5P1 "B5P1 : rpp1s_3 crossing NWELL edge is not allowed")

Executing: err_B8P1 = geomAnd(rpp1s_3 rnw1)
	   errorLayer(err_B8P1 "B8P1 : rpp1s_3 overlap of rnw/rnw5 is not allowed")

Executing: err_B1MR = geomAnd(mres diff)
	   errorLayer(err_B1MR "B1MR : MRES overlap of DIFF is not allowed")

Executing: err_B2MR = geomAndNot(mres sblk)
	   errorLayer(err_B2MR "B2MR : MRES without SBLK is not allowed")

Executing: err_B3MR = geomAnd(mres implant)
	   errorLayer(err_B3MR "B3MR : MRES overlap of NIMP or PIMP is not allowed")

Executing: err_W1MR = drc(mres (width < 0.44))
	   errorLayer(err_W1MR "W1MR : Minimum MRES width = 0.44")

Executing: drc(mres (sepNotch < 0.44) "S1MR : Minimum MRES spacing/notch = 0.44")

Executing: drc(mres diff (sep < 0.32) "S1MRDF : Minimum MRES spacing to DIFF = 0.32")

Executing: drc(mres poly (sep < 0.32) "S1MRP1 : Minimum MRES spacing to POLY1 = 0.32")

Executing: err_B4MR = geomAnd(hres mres)
	   errorLayer(err_B4MR "B4MR : HRES overlap of MRES is not allowed")

Executing: err_B6MR = geomStraddle(rpp1k1_3 nwell)
	   errorLayer(err_B6MR "B6MR : rpp1k1_3 crossing NWELL edge is not allowed")

Executing: err_B7MR = geomStraddle(rpp1k1_3 rnw1)
	   errorLayer(err_B7MR "B7MR : rpp1k1_3 overlap of rnw/rnw5 is not allowed")

Executing: err_B8MR = geomStraddle(rpp1k1a_3 nwell)
	   errorLayer(err_B8MR "B8MR : rpp1k1a_3 crossing NWELL edge is not allowed")

Executing: err_B9MR = geomStraddle(rpp1k1a_3 rnw1)
	   errorLayer(err_B9MR "B9MR : rpp1k1a_3 overlap of rnw/rnw5 is not allowed")

Executing: err_S6P1DF = drc(geomOverlap(poly rpp1k1a_0) diff (sep < 1.3))
	   errorLayer(err_S6P1DF "S6P1DF : Minimum POLY1 sapcing to DIFF = 1.3")

Executing: rpp1k1_edge = geomSize(geomGetEdge(rpp1k1 coincident poly) 0.001)

Executing: err_W16P1a = drc(rpp1k1_edge (sep < 0.42) opposite)

Executing: err_W16P1 = geomAnd(err_W16P1a rpp1k1)
	   errorLayer(err_W16P1 "W16P1 : Minimum rpp1k1# width = 0.42")

Executing: err_E1MRP1 = drc(mres geomGetEdge(rpp1k1 coincident poly) (enc < 0.18))
	   errorLayer(err_E1MRP1 "E1MRP1 : Minimum MRES extension beyond rpp1k1# = 0.18")

Executing: rp_ext = geomSize(geomGetEdge(rpp1k1 inside poly) 0.22)

Executing: rp_exta = geomSize(geomGetEdge(rpp1k1a_0 inside poly) 0.22)

Executing: rp_ext0 = geomAndNot(rp_ext rp_exta)

Executing: err_E1SBMR = geomXor(rp_ext geomAndNot(geomAnd(geomOverlap(poly mres) sblk) r...
	   errorLayer(err_E1SBMR "E1SBMR : Fixed SBLK extension beyond MRES in direction of POLY1 = 0.22")

Executing: err_E2IPP1 = drc(pimp geomGetEdge(rp_ext0 outside rpp1k1) (enc < 0.18))
	   errorLayer(err_E2IPP1 "E2IPP1 : Minimum PIMP extension beyond rpp1k1_ext = 0.18")

Executing: err_E2IPP1a = geomAndNot(rp_ext0 pimp)
	   errorLayer(err_E2IPP1a "E2IPP1 : Minimum PIMP extension beyond rpp1k1_ext = 0.18")

Executing: err_E3IPP1 = drc(pimp geomGetEdge(rp_exta outside rpp1k1) (enc < 0.18))
	   errorLayer(err_E3IPP1 "E3IPP1 : Minimum PIMP extension beyond rpp1k1a_ext = 0.18")

Executing: err_E3IPP1a = geomAndNot(rp_exta pimp)
	   errorLayer(err_E3IPP1a "E3IPP1 : Minimum PIMP extension beyond rpp1k1a_ext = 0.18")

Executing: err_S3INP1 = drc(nimp geomOr(geomAndNot(rpp1k1 rpp1k1a_0) rp_ext0) (sep < 0.26))
	   errorLayer(err_S3INP1 "S3INP1 : Minimum NIMP spacing to rpp1k1 OR rpp1k1_ext = 0.26")

Executing: err_S4INP1 = drc(nimp geomOr(rpp1k1a_0 rp_exta) (sep < 0.26))
	   errorLayer(err_S4INP1 "S4INP1 : Minimum NIMP spacing to rpp1k1a OR rpp1k1_ext = 0.26")

Executing: err_B1HR = geomAnd(hres diff)
	   errorLayer(err_B1HR "B1HR : HRES overlap of DIFF is not allowed")

Executing: err_B2HR = geomAnd(rnp1h nimp)
	   errorLayer(err_B2HR "B2HR : NIMP overlap of rnp1h# (resistor body) is not allowed")

Executing: err_B3HR = geomAnd(hres pimp)
	   errorLayer(err_B3HR "B3HR : PIMP overlap of HRES is not allowed")

Executing: err_B4HR = geomStraddle(poly hres)
	   errorLayer(err_B4HR "B4HR : POLY1 crossing HRES edge is not allowed")

Executing: err_B6HR = geomStraddle(nimp hres)
	   errorLayer(err_B6HR "B6HR : NIMP crossing HRES edge is not allowed")

Executing: err_B7HR = geomAnd(rnp1h met1dg)
	   errorLayer(err_B7HR "B7HR : MET1 overlap of rnp1h# (resistor body) is not allowed")

Executing: err_B10HR = geomStraddle(rnp1h_3 nwell)
	   errorLayer(err_B10HR "B10HR : rnp1h_3 crossing NWELL edge is not allowed")

Executing: err_B11HR = geomStraddle(rnp1h_3 rnw1)
	   errorLayer(err_B11HR "B11HR : rnp1h_3 overlap of rnw/rnw5 is not allowed")

Executing: err_W1HR = drc(hres (width < 0.44))
	   errorLayer(err_W1HR "W1HR : Minimum HRES width = 0.44")

Executing: err_W2HR = drc(rnp1h (width < 0.42))
	   errorLayer(err_W2HR "W2HR : Minimum rnp1h# width = 0.42")

Executing: err_W3HR = geomGetLength(geomGetEdge(rnp1h coincident poly) (keep < 5.0) cont...
	   errorLayer(err_W3HR "W3HR : Minimum rnp1h# length = 5.0")

Executing: drc(hres (sepNotch < 0.44) "S1HR : Minimum HRES spacing/notch = 0.44")

Executing: drc(hres diff (sep < 0.32) "S1HRDF : Minimum HRES spacing to DIFF = 0.32")

Executing: drc(hres poly (sep < 0.32) "S1HRP1 : Minimum HRES spacing to POLY1 = 0.32")

Executing: drc(hres nimp (sep < 0.44) shielded "S1HRIN : Minimum HRES spacing to NIMP = ...

Executing: drc(hres pimp (sep < 0.44) "S1HRIP : Minimum HRES spacing to PIMP = 0.44")

Executing: drc(hres poly (enc < 0.18) "E1HRP1 : Minimum HRES enclosure of POLY1 = 0.18")

Executing: polyresm_ho = geomOverlap(poly rnp1h)

Executing: polyres_ho_t = geomAndNot(polyresm_ho rnp1h)

Executing: drc(nimp polyresm_ho (enc < 0.18) "E2INP1 : Minimum NIMP extension beyond POL...

Executing: drc(nimp polyresm_ho (sep < 0.18) "S2INP1 : Minimum NIMP (in SBLK) spacing to...

Executing: err_B5HR = geomAndNot(polyres_ho_t nimp)
	   errorLayer(err_B5HR "B5HR : rnp1h# terminal without NIMP is not allowed")

Executing: N_CT_pfuse = geomAnd(pfuse12 cont)
	   errorLayer(N_CT_pfuse "N_CT : Predefined area must not have CONT")

Executing: err_B2P1a = geomAnd(pfuse met1)

Executing: err_B2P1b = geomAnd(pfuse met2)

Executing: err_B2P1c = geomAnd(pfuse met3)

Executing: err_B2P1d = geomAnd(pfuse met4)

Executing: err_B2P1f = geomAnd(pfuse mtp)

Executing: err_B2P1g = geomAnd(pfuse mtpl)

Executing: err_B2P1 = geomOr(err_B2P1a err_B2P1b err_B2P1c err_B2P1d err_B2P1f err_B2P1g)
	   errorLayer(err_B2P1 "B2P1 : pfuse overlap of MET1, MET2, MET3, MET4, METTP or METTPL is not allowed")

Executing: err_B12P1 = geomAnd(pfuse geomOr(sblk diff dti))
	   errorLayer(err_B12P1 "B12P1 : pfuse overlap of SBLK or DIFF is not allowed")

Executing: err_B13P1b = geomAndNot(pfuse blkall)

Executing: err_B13P1c = geomAndNot(pfuse nimp)

Executing: err_B13P1 = geomOr(err_B13P1b err_B13P1c)
	   errorLayer(err_B13P1 "B13P1 : pfuse without NIMP and BLKALL is not allowed")

Executing: err_B14P1 = geomAnd(dti pfuse)
	   errorLayer(err_B14P1 "B14P1 : pfuse overlap of DTI is not allowed")

Executing: err_S1P1DT = drc(pfuse dti (sep < 1.7))
	   errorLayer(err_S1P1DT "S1P1DT : Minimum pfuse spacing to DTI = 1.7")

Executing: pfuse_nw1 = geomStraddle(nwell pfuse)

Executing: err_E1NWP1 = geomXor(pfuse_nw1 pfuse_nw2)
	   errorLayer(err_E1NWP1 "E1NWP1 : Fixed NWELL enclosure of pfuse = 1.7")

Executing: err_E1BAP1 = drc(blkall pfuse (enc < 1.7))
	   errorLayer(err_E1BAP1 "E1BAP1 : Minimum BLKALL enclosure of pfuse = 1.7")

Executing: err_E3INP1 = drc(nimp geomStraddle(poly pfuse) (enc < 0.3))
	   errorLayer(err_E3INP1 "E3INP1 : Minimum NIMP enclosure of POLY1 = 0.3")

Executing: pfuse_edge = geomGetEdge(pfuse coincident poly)

Executing: err_S1DFP1 = drc(diff pfuse (sep < 2.0))
	   errorLayer(err_S1DFP1 "S1DFP1 : Minimum DIFF spacing to pfuse = 2.0")

Executing: err_S2SBP1 = drc(sblk pfuse (sep < 2.0))
	   errorLayer(err_S2SBP1 "S2SBP1 : Minimum SBLK spacing to pfuse = 2.0")

Executing: err_S2P1 = drc(pfuse_edge poly (sep < 2.0))
	   errorLayer(err_S2P1 "S2P1 : Minimum POLY1 spacing to pfuse = 2.0")

Executing: err_S1M1P1 = drc(met1 pfuse_edge (sep < 0.8))
	   errorLayer(err_S1M1P1 "S1M1P1 : Minimum MET1 spacing to pfuse = 0.8")

Executing: err_S1M2P1 = drc(met2 pfuse_edge (sep < 0.8))
	   errorLayer(err_S1M2P1 "S1M2P1 : Minimum MET2 spacing to pfuse = 0.8")

Executing: err_S1M3P1 = drc(met3 pfuse_edge (sep < 1.7))
	   errorLayer(err_S1M3P1 "S1M3P1 : Minimum MET3 spacing to pfuse = 1.7")

Executing: err_S1M4P1 = drc(met4 pfuse_edge (sep < 1.7))
	   errorLayer(err_S1M4P1 "S1M4P1 : Minimum MET4 spacing to pfuse = 1.7")

Executing: err_S1MTP1 = drc(mtp pfuse_edge (sep < 1.7))
	   errorLayer(err_S1MTP1 "S1MTP1 : Minimum METTP spacing to pfuse = 1.7")

Executing: err_S1MLP1 = drc(mtpl pfuse_edge (sep < 1.7))
	   errorLayer(err_S1MLP1 "S1MLP1 : Minimum METTPL spacing to pfuse = 1.7")

Executing: rnw_edge = geomSize(geomGetEdge(rnw1 coincident nwell) 0.001)

Executing: err_W2NWa = drc(rnw_edge (sep < 2.0) opposite)

Executing: err_W2NW = geomAnd(err_W2NWa rnw1)
	   errorLayer(err_W2NW "W2NW : Minimum width = 2.0")

Executing: rxw_edge0 = geomGetEdge(rxw coincident nwell)

Executing: rxw2ti_21 = geomGetEdge(geomAndNot(rxw2ti geomSize(rxw_edge0 -0.22)) coincide...

Executing: rxw2ti_22 = geomSize(rxw2ti_21 0.76)

Executing: rxw2ti_2 = geomOr(rxw2ti_22 rxw2ti_1)

Executing: M_DF_rxw2ti = geomAndNot(rxw2ti_2 diff)
	   errorLayer(M_DF_rxw2ti "M_DF : Predefined area must have DIFF")

Executing: rxw_edge = geomSize(rxw_edge0 0.001)

Executing: err_W3NWa = drc(rxw_edge (sep < 2.0) opposite)

Executing: err_W3NW = geomAnd(err_W3NWa rxw)
	   errorLayer(err_W3NW "W3NW : Minimum width = 2.0")

Executing: err_E2HBNW = geomAndNot(rxw subblk)
	   errorLayer(err_E2HBNW "E2HBNW : Minimum SUBBLK enclosure of NWELL = 1.0")

Executing: err_E2HBNWa = drc(subblk rxw (enc < 1.0))
	   errorLayer(err_E2HBNWa "E2HBNW : Minimum SUBBLK enclosure of NWELL = 1.0")

Executing: dti_rxw2ti = geomEnclose(tub rxw2ti_nw)

Executing: dti_rxw2ti_s = geomSize(dti_rxw2ti -0.5)

Executing: dti_rxw2ti_s1 = geomSize(dti_rxw2ti -0.6)

Executing: rxw2ti_ex3 = geomAnd(rxw2ti_2 dti_rxw2ti_s)

Executing: rxw2ti_act0 = geomAndNot(geomSize(geomSize(geomAnd(geomOr(ptap rxw2ti_ex3) dt...

Executing: rxw2ti_act = geomOr(rxw2ti_act0 rxw2ti_22)

Executing: rxw2ti_act_s = geomAndNot(geomSize(rxw2ti_act 0.82) rxw2ti_1)

Executing: rxw2ti_act_s10 = geomSize(rxw2ti_act 0.825)

Executing: rxw2ti_act_s11 = geomOverlap(rxw2ti_act_s10 rxw2ti_1 (keep == 1))

Executing: rxw2ti_act_s12 = geomAndNot(rxw2ti_act_s11 geomOr(rxw2ti_act_s rxw2ti_1))

Executing: rxw2ti_act_s13 = geomAndNot(geomAndNot(rxw2ti_act_s10 rxw2ti_act_s11) rxw2ti_...

Executing: rxw2ti_act_s1 = geomOr(rxw2ti_act_s12 rxw2ti_act_s13)

Executing: rxw2ti_eg = geomGetEdge(rxw2ti_nw inside diff)

Executing: rxw2ti_eg_s1 = geomSize(rxw2ti_eg 0.6)

Executing: rxw2ti_eg_s2 = geomSize(rxw2ti_eg 0.605)

Executing: err_B2NWa = geomAndNot(geomAndNot(rxw2ti_eg_s2 rxw2ti_eg_s1) dti)

Executing: err_B2NWb = geomAndNot(rxw2ti_act_s1 dti)

Executing: err_B2NW = geomOr(err_B2NWa err_B2NWb)
	   errorLayer(err_B2NW "B2NW : DTI ring is required for rxw2ti")

Executing: err_B3NW = geomAnd(rxw2ti nimp)
	   errorLayer(err_B3NW "B3NW : NIMP overlap of rxw2ti (resistor body) is not allowed")

Executing: rxw2ti_t = geomAndNot(rxw2ti rxw)

Executing: err_B4NW = geomAndNot(rxw2ti_t nimp)
	   errorLayer(err_B4NW "B4NW : rxw2ti terminal without NIMP is not allowed")

Executing: err_B5NW = geomAnd(rxw2ti geomOr(met1 met2))
	   errorLayer(err_B5NW "B5NW : MET1 or MET2 overlap of rxw2ti (resistor body) is not allowed")

Executing: err_B6MV = geomAndNot(geomSize(dti_rxw2ti 1.0) mv)
	   errorLayer(err_B6MV "B6MV : rxw2ti without MV is not allowed")

Executing: err_B7NW = geomAndNot(rxw2ti geomAnd(blkm1 blkm2))
	   errorLayer(err_B7NW "B7NW : rxw2ti without MET1BLK and MET2BLK is not allowed")

Executing: rxw2ti_30 = geomGetEdge(rxw2ti_1 inside diff)

Executing: rxw2ti_31 = geomSize(rxw2ti_30 0.765)

Executing: rxw2ti_3 = geomAndNot(rxw2ti_31 rxw2ti_2)

Executing: err_E1DFNW = geomAnd(rxw2ti_3 diff)
	   errorLayer(err_E1DFNW "E1DFNW : Fixed DIFF extension beyond NW_VERIFY = 0.76")

Executing: M_DN_rxw2ti = geomAndNot(rxw2ti_22 ndif)
	   errorLayer(M_DN_rxw2ti "M_DN : Predefined area must have NDIFF")

Executing: rxw2ti_dtir = geomAnd(geomSize(dti_rxw2ti 1.0) dti)

Executing: rxw2ti_s22 = geomSize(rxw2ti 0.22)

Executing: rxw2ti_act_s2 = geomOr(geomAndNot(geomAndNot(dti_rxw2ti geomSize(rxw2ti_act 0...

Executing: rxw2ti_act_s3 = geomAndNot(geomSize(rxw2ti_act 0.22) geomOr(rxw2ti_1 rxw2ti_s...

Executing: M_SB_rxw2ti = geomAndNot(geomOr(rxw2ti_1 rxw2ti_dtir rxw2ti_act_s2) sblk)
	   errorLayer(M_SB_rxw2ti "M_SB : Predefined area must have SBLK")

Executing: N_SB_rxw2ti = geomAnd(rxw2ti_act_s3 sblk)
	   errorLayer(N_SB_rxw2ti "N_SB : Predefined area must not have SBLK")

Executing: N_NW_rxw2ti = geomAnd(geomAndNot(dti_rxw2ti dti_rxw2ti_s1) nwell)
	   errorLayer(N_NW_rxw2ti "N_NW : Predefined area must not have NWELL")

Executing: err_E1MVP4 = drc(mv geomCat(dnpa_pw4 dnpati_pw4) (enc < 0.5))
	   errorLayer(err_E1MVP4 "E1MVP4 : Minimum MV enclosure of PWELL4 = 0.5")

Executing: err_E1MVPZ = drc(mv geomCat(dza_pz dzati_pz) (enc < 0.5))
	   errorLayer(err_E1MVPZ "E1MVPZ : Minimum MV enclosure of PZENER = 0.5")

Executing: err_E1HBDN = drc(subblk geomOr(dnpa_all dza_all) (enc < 1.68))
	   errorLayer(err_E1HBDN "E1HBDN : Minimum SUBBLK enclosure of NDIFF = 1.68")

Executing: M_HB_dio1 = geomAndNot(geomOr(dnpa_all dza_all) subblk)
	   errorLayer(M_HB_dio1 "M_HB : Predefined area must have SUBBLK")

Executing: M_DT_dzati = geomGetEdge(geomEnclose(geomOr(dza_5 geomOverlap(ptap dza_5)) dz...
	   errorLayer(M_DT_dzati "M_DT : Predefined area must have DTI")

Executing: M_DT_dnpati = geomGetEdge(geomEnclose(geomOr(dnpa_5 geomOverlap(ptap dnpa_5))...
	   errorLayer(M_DT_dnpati "M_DT : Predefined area must have DTI")

Executing: dzb_ex1 = geomSize(dzb_ed1 1.2)

Executing: dzb_tub_s = geomSize(dzb_tub 0.5)

Executing: dzb_ex1_s1 = geomOr(dzb_ex1 geomSize(geomGetEdge(dzb_ex1 coincident dzb_tub) ...

Executing: M_SB_dzb = geomAndNot(dzb_ex1_s1 sblk)
	   errorLayer(M_SB_dzb "M_SB : Predefined area must have SBLK")

Executing: N_SB_dzb = geomAnd(geomAndNot(dzb_tub dzb_ex1_s1) sblk)
	   errorLayer(N_SB_dzb "N_SB : Predefined area must not have SBLK")

Executing: M_NZ_dzb = geomAndNot(dzb_ex3 nzener)
	   errorLayer(M_NZ_dzb "M_NZ : Predefined area must have NZENER")

Executing: N_DP_dzb = geomAnd(dzb_ex42 pdif)
	   errorLayer(N_DP_dzb "N_DP : Predefined area must not have PDIFF")

Executing: N_DN_dzb = geomAnd(geomAndNot(dzb_ex2_s1 geomOr(dzb51 geomSize(geomGetEdge(dz...
	   errorLayer(N_DN_dzb "N_DN : Predefined area must not have NDIFF")

Executing: dzb_nw_s1 = geomOr(dzb_nw geomSize(geomGetEdge(dzb_nw coincident dzb_tub) 0.5))

Executing: M_NW_dzb = geomAndNot(dzb_nw nwell)
	   errorLayer(M_NW_dzb "M_NW : Predefined area must have NWELL")

Executing: M_MV_dzb = geomAndNot(dzb_tub_s mv)
	   errorLayer(M_MV_dzb "M_MV : Predefined area must have MV")

Executing: M_HB_dzb = geomAndNot(dzb_tub_s subblk)
	   errorLayer(M_HB_dzb "M_HB : Predefined area must have SUBBLK")

Executing: N_P4_dzb = geomAnd(dzb_tub_s pwell4)
	   errorLayer(N_P4_dzb "N_P4 : Predefined area must not have PWELL4")

Executing: geomGetEdge(dzb_ex2 coincident ndif inside tub)

Executing: dzb_ex21 = geomSize(dzb_ex20 1.18)

Executing: dzb_ex22 = geomSize(dzb_ex20 0.36)

Executing: dzb_ex24 = geomAndNot(dzb_ex21 dzb_ex22)

Executing: dzb_ex24_s1 = geomSize(geomGetEdge(dzb_ex24 coincident tub) 0.5)

Executing: dzb_ex23 = geomOr(dzb_ex2 dzb_ex21)

Executing: M_DT_dzb = geomGetEdge(dzb_ex23 outside dti)
	   errorLayer(M_DT_dzb "M_DT : Predefined area must have DTI")

Executing: M_DP_dzb = geomAndNot(geomOr(dzb_ex4 dzb_ex24) pdif)
	   errorLayer(M_DP_dzb "M_DP : Predefined area must have PDIFF")

Executing: M_DF_dzb = geomAndNot(geomOr(dzb_ex2_s1 dzb_ex24_s1) diff)
	   errorLayer(M_DF_dzb "M_DF : Predefined area must have DIFF")

Executing: nimp1 = geomAnd(nimp tub2_nxta1)

Executing: pimp1 = geomAnd(pimp tub2_nxta1)

Executing: nimp2_ndh = geomStraddle(geomAnd(nimp tub2_nxta1) ndhvt_all)

Executing: pimp2_ndh = geomStraddle(geomAnd(pimp tub2_nxta1) ndhvt_all)

Executing: err_S2IN = drc(nimp1 (sepNotch < 0.42))
	   errorLayer(err_S2IN "S2IN : Minimum NIMP spacing/notch = 0.42")

Executing: err_W2IP = drc(pimp1 (width < 0.42))
	   errorLayer(err_W2IP "W2IP : Minimum PIMP width = 0.42")

Executing: err_S3IN = drc(nimp2_ndh (sepNotch < 0.42))
	   errorLayer(err_S3IN "S3IN : Minimum NIMP spacing/notch = 0.42")

Executing: err_W3IP = drc(pimp2_ndh (width < 0.42))
	   errorLayer(err_W3IP "W3IP : Minimum PIMP width = 0.42")

Executing: err_W5GA = drc(ndhvt (width < 0.5))
	   errorLayer(err_W5GA "W5GA : Minimum CHANNEL length = 0.5")

Executing: err_W6GA = geomGetLength(geomGetEdge(ndhvt_1 inside act) (keep < 3.0))
	   errorLayer(err_W6GA "W6GA : Minimum GATE width = 3.0")

Executing: err_W17GA = drc(nhvta (width < 0.4))
	   errorLayer(err_W17GA "W17GA : Minimum CHANNEL length = 0.4")

Executing: err_W7GA = drc(geomOr(nhvtb nhvu) (width < 0.5))
	   errorLayer(err_W7GA "W7GA : Minimum CHANNEL length = 0.5")

Executing: err_W8GA = geomGetLength(geomGetEdge(nhv_xta1 inside act) (keep < 3.0))
	   errorLayer(err_W8GA "W8GA : Minimum GATE width = 3.0")

Executing: err_W15GAa = geomGetLength(geomGetEdge(geomOr(nhvta ndhvta) coincident act in...
	   errorLayer(err_W15GAa "W15GA : Maximum CHANNEL length = 1.5")

Executing: err_W16GAa = geomGetLength(geomGetEdge(geomOr(nhvtb nhvu) coincident act insi...
	   errorLayer(err_W16GAa "W16GA : Maximum CHANNEL length = 25.0")

Executing: err_W20GA = drc(ndhvta (width < 0.4))
	   errorLayer(err_W20GA "W20GA : Minimum CHANNEL length = 0.4")

Executing: err_W21GA = geomGetLength(geomGetEdge(ndhvt coincident act inside pwell4) (ke...
	   errorLayer(err_W21GA "W21GA : Maximum CHANNEL length = 5.0")

Executing: nhvt_eg = geomGetEdge(nhv_xta coincident ndif)

Executing: nhvt_eg_s1 = geomOr(geomSize(nhvt_eg 0.5) nhv_xta)

Executing: nhvt_eg_s2 = geomOr(geomSize(nhvt_eg 0.505) nhv_xta)

Executing: err_S5GADT = geomAndNot(geomAndNot(nhvt_eg_s2 nhvt_eg_s1) dti)
	   errorLayer(err_S5GADT "S5GADT : Fixed GATE spacing to DTI = 0.5")

Executing: err_E2DNP1 = drc(ndif geomGetEdge(nhvta coincident poly) (enc < 0.27))
	   errorLayer(err_E2DNP1 "E2DNP1 : Minimum NDIFF extension beyond POLY1 = 0.27")

Executing: err_B10MV = geomAndNot(geomSize(tub_nhvta 1.0) mv)
	   errorLayer(err_B10MV "B10MV : nhvta without MV is not allowed")

Executing: err_B11HB = geomAndNot(geomSize(tub_nhvta 1.0) subblk)
	   errorLayer(err_B11HB "B11HB : nhvta without SUBBLK is not allowed")

Executing: nhvta_ndf = geomStraddle(geomAnd(ndf tub) nhvta_1)

Executing: nhvta_ndf_1 = geomAnd(geomOr(nhvta_ndf geomSize(geomGetEdge(nhvta_ndf coincid...

Executing: nhvta_s1 = geomSize(geomGetEdge(nhvta_ndf inside nhvta_1) -1.8)

Executing: nhvta_s2 = geomSize(geomGetEdge(nhvta_s1 butting ndif) -1.25)

Executing: err_S9DF = geomXor(geomAndNot(nhvta_s1 nhvta_1) nhvta_s2)
	   errorLayer(err_S9DF "S9DF : Fixed DRAIN-EDGE-STI length = 1.25")

Executing: nhvta_nsd_a = geomInside(ndif tub_nhvta)

Executing: nhvta_nsd = geomOutside(nhvta_nsd_a poly)

Executing: err_S2P1DN = drc(poly nhvta_nsd (sep < 0.65))
	   errorLayer(err_S2P1DN "S2P1DN : Minimum POLY1 spacing to DRAIN NDIFF = 0.65")

Executing: nhvta_poly = geomAnd(geomOr(nhvta_s1 nhvta) poly)

Executing: nhvta_eg2 = geomGetEdge(nhvta_poly inside poly)

Executing: nhvta_eg2_s1 = geomSize(nhvta_eg2 1.0)

Executing: nhvta_eg2_s2 = geomAndNot(geomSize(nhvta_eg2_s1 0.005) geomOr(nhvta_s1 nhvta_...

Executing: err_E12P1GAa = geomAndNot(nhvta_eg2_s1 poly)

Executing: err_E12P1GAb = geomAnd(nhvta_eg2_s2 poly)

Executing: err_E12P1GA = geomOr(err_E12P1GAa err_E12P1GAb)
	   errorLayer(err_E12P1GA "E12P1GA : Fixed POLY1 extension beyond GATE = 1.0")

Executing: err_E1P1DN = drc(poly geomStraddle(ndif nhvta_1) (enc < 0.6))
	   errorLayer(err_E1P1DN "E1P1DN : Minimum POLY1 extension beyond NDIFF = 0.6")

Executing: err_E1NXDNa = geomAndNot(geomStraddle(ndiff nhvta_ndf) nhvta_nsd)
	   errorLayer(err_E1NXDNa "E1NXDN : Minimum NDF enclosure of DRAIN NDIFF = 1.8")

Executing: err_E1NXDN = drc(ndf nhvta_nsd (enc < 1.8))
	   errorLayer(err_E1NXDN "E1NXDN : Minimum NDF enclosure of DRAIN NDIFF = 1.8")

Executing: nhvta_ex1 = geomGetEdge(geomOr(nhvta_nsd nhvta_s1) inside ndf)

Executing: nhvta_ex1_s = geomSize(nhvta_ex1 2.5)

Executing: nhvta_ex61 = geomGetEdge(nhvta_nsd butting nhvta_s2)

Executing: nhvta_ex62 = geomGetEdge(nhvta_nsd outside nhvta_s2)

Executing: nhvta_ex63 = geomSize(nhvta_ex61 0.5)

Executing: nhvta_ex64 = geomSize(nhvta_ex61 0.505)

Executing: nhvta_ex60 = geomOr(nhvta_nsd nhvta_ex63)

Executing: nhvta_ex65 = geomAndNot(geomSize(geomSize(nhvta_ex62 1.5) 0.5) nhvta_ex60)

Executing: nhvta_ex66 = geomAndNot(geomSize(nhvta_ex65 0.005) nhvta_ex60)

Executing: err_E1M1DNa = geomAndNot(nhvta_ex60 met1)
	   errorLayer(err_E1M1DNa "E1M1DN : Fixed MET1 enclosure of DRAIN NDIFF = 0.5")

Executing: err_E1M1DNb = geomAnd(geomAndNot(nhvta_ex64 nhvta_ex63) met1)
	   errorLayer(err_E1M1DNb "E1M1DN : Fixed MET1 enclosure of DRAIN NDIFF = 0.5")

Executing: nhvta_ex67 = geomSize(nhvta_ex60 1.3)

Executing: err_E2M1DNa = geomAndNot(nhvta_ex65 met1)
	   errorLayer(err_E2M1DNa "E2M1DN : Fixed MET1 enclosure of DRAIN NDIFF = 2.0")

Executing: err_E2M1DNb = geomAnd(geomAndNot(nhvta_ex66 nhvta_ex65) met1)
	   errorLayer(err_E2M1DNb "E2M1DN : Fixed MET1 enclosure of DRAIN NDIFF = 2.0")

Executing: err_S7M1 = drc(geomOr(nhvta_ex65 nhvta_ex60) met1 (sep < 0.28))
	   errorLayer(err_S7M1 "S7M1 : Minimum MET1 of DRAIN NDIFF spacing to MET1 = 0.28")

Executing: nhvta_ex40 = geomOr(nhvta_eg2_s1 nhvta_poly)

Executing: nhvta_ex4_s1 = geomSize(nhvta_ex4 0.18)

Executing: nhvta_ex4_s2 = geomSize(nhvta_ex4 0.185)

Executing: err_E1PBP1 = geomOr(geomAndNot(nhvta_ex4_s1 pwblk) geomAnd(geomAndNot(nhvta_e...
	   errorLayer(err_E1PBP1 "E1PBP1 : Fixed PWBLK enclosure of POLY1 in SOURCE region = 0.18")

Executing: nhvta_ex3 = drc(ndf nhvta_1 (ovlp == 0.55))

Executing: err_O1NXGA = geomAndNot(geomAnd(ndf nhvta_1) nhvta_ex3)
	   errorLayer(err_O1NXGA "O1NXGA : Fixed NDF overlap of GATE = 0.55")

Executing: M_NX_nhvta = geomAndNot(geomOr(nhvta_ex1_s nhvta_ex67) ndf)
	   errorLayer(M_NX_nhvta "M_NX : Predefined area must have NDF")

Executing: N_P4_nhvta = geomAnd(geomOr(nhvta_ex1_s nhvta_ex67) pwell4)
	   errorLayer(N_P4_nhvta "N_P4 : Predefined area must not have PWELL4")

Executing: nhvta_ex71 = geomAndNot(tub_nhvta_s10 nhvta_ndf_1)

Executing: nhvta_ex81 = geomAndNot(nhvta_ex71 geomOr(poly dti))

Executing: nhvta_ex82 = geomSize(geomGetLength(geomGetEdge(nhvta_ex81 butting dti) (keep...

Executing: nhvta_ex83 = geomAndNot(nhvta_ex81 nhvta_ex82)

Executing: M_DF_nhvta = geomAndNot(nhvta_ex83 diff)
	   errorLayer(M_DF_nhvta "M_DF : Predefined area must have DIFF")

Executing: nhvta_ex72 = geomSize(geomGetLength(geomGetEdge(geomOr(diff M_DF_nhvta) insid...

Executing: nhvta_ex7 = geomOr(nhvta_ex71 nhvta_ex72)

Executing: M_P4_nhvta = geomAndNot(nhvta_ex7 pwell4)
	   errorLayer(M_P4_nhvta "M_P4 : Predefined area must have PWELL4")

Executing: N_NX_nhvta = geomAnd(nhvta_ex7 ndf)
	   errorLayer(N_NX_nhvta "N_NX : Predefined area must not have NDF")

Executing: err_B11MV = geomAndNot(geomSize(tub_nhvtb 1.0) mv)
	   errorLayer(err_B11MV "B11MV : nhvtb without MV is not allowed")

Executing: err_B3HB = geomAndNot(geomSize(tub_nhvtb 1.0) subblk)
	   errorLayer(err_B3HB "B3HB : nhvtb without SUBBLK is not allowed")

Executing: nhvtb_ndf = geomStraddle(geomAnd(ndf tub) nhvtb_1)

Executing: nhvtb_ndf_1 = geomAnd(geomOr(nhvtb_ndf geomSize(geomGetEdge(nhvtb_ndf coincid...

Executing: nhvtb_s1 = geomSize(geomGetEdge(nhvtb_ndf inside nhvtb_1) -3.05)

Executing: nhvtb_s2 = geomSize(geomGetEdge(nhvtb_s1 butting ndif) -2.4)

Executing: err_S10DF = geomXor(geomAndNot(nhvtb_s1 nhvtb_1) nhvtb_s2)
	   errorLayer(err_S10DF "S10DF : Fixed DRAIN-EDGE-STI length = 2.4")

Executing: nhvtb_nsd_a = geomInside(ndif tub_nhvtb)

Executing: nhvtb_nsd = geomOutside(nhvtb_nsd_a poly)

Executing: err_S3P1DN = drc(poly nhvtb_nsd (sep < 1.55))
	   errorLayer(err_S3P1DN "S3P1DN : Minimum POLY1 spacing to DRAIN NDIFF = 1.55")

Executing: nhvtb_poly = geomAnd(geomOr(nhvtb_s1 nhvtb) poly)

Executing: nhvtb_eg2 = geomGetEdge(nhvtb_poly inside poly)

Executing: nhvtb_eg2_s1 = geomSize(nhvtb_eg2 1.0)

Executing: nhvtb_eg2_s2 = geomAndNot(geomSize(nhvtb_eg2_s1 0.005) geomOr(nhvtb_s1 nhvtb_...

Executing: err_E12P1GAa_b = geomAndNot(nhvtb_eg2_s1 poly)

Executing: err_E12P1GAb_b = geomAnd(nhvtb_eg2_s2 poly)

Executing: err_E12P1GA_b = geomOr(err_E12P1GAa_b err_E12P1GAb_b)
	   errorLayer(err_E12P1GA_b "E12P1GA : Fixed POLY1 extension beyond GATE = 1.0")

Executing: err_E2P1DN = drc(poly geomStraddle(ndif nhvtb_1) (enc < 0.85))
	   errorLayer(err_E2P1DN "E2P1DN : Minimum POLY1 extension beyond NDIFF = 0.85")

Executing: err_E2NXDNa = geomAndNot(geomStraddle(ndiff nhvtb_ndf) nhvtb_nsd)
	   errorLayer(err_E2NXDNa "E2NXDN : Minimum NDF enclosure of DRAIN NDIFF = 2.5")

Executing: err_E2NXDN = drc(ndf nhvtb_nsd (enc < 2.5))
	   errorLayer(err_E2NXDN "E2NXDN : Minimum NDF enclosure of DRAIN NDIFF = 2.5")

Executing: nhvtb_ex1 = geomGetEdge(geomOr(nhvtb_nsd nhvtb_s1) inside ndf)

Executing: nhvtb_ex1_s = geomAndNot(geomSize(nhvtb_ex1 2.5) tub)

Executing: nhvtb_ex61 = geomGetEdge(nhvtb_nsd butting nhvtb_s2)

Executing: nhvtb_ex62 = geomGetEdge(nhvtb_nsd outside nhvtb_s2)

Executing: nhvtb_ex63 = geomSize(nhvtb_ex61 0.5)

Executing: nhvtb_ex64 = geomSize(nhvtb_ex61 0.505)

Executing: nhvtb_ex60 = geomOr(nhvtb_nsd nhvtb_ex63)

Executing: nhvtb_ex65 = geomAndNot(geomSize(geomSize(nhvtb_ex62 1.5) 0.5) nhvtb_ex60)

Executing: nhvtb_ex66 = geomAndNot(geomSize(nhvtb_ex65 0.005) nhvtb_ex60)

Executing: err_E1M1DNa_b = geomAndNot(nhvtb_ex60 met1)
	   errorLayer(err_E1M1DNa_b "E1M1DN : Fixed MET1 enclosure of DRAIN NDIFF = 0.5")

Executing: err_E1M1DNb_b = geomAnd(geomAndNot(nhvtb_ex64 nhvtb_ex63) met1)
	   errorLayer(err_E1M1DNb_b "E1M1DN : Fixed MET1 enclosure of DRAIN NDIFF = 0.5")

Executing: err_E2M1DNa_b = geomAndNot(nhvtb_ex65 met1)
	   errorLayer(err_E2M1DNa_b "E2M1DN : Fixed MET1 enclosure of DRAIN NDIFF = 2.0")

Executing: err_E2M1DNb_b = geomAnd(geomAndNot(nhvtb_ex66 nhvtb_ex65) met1)
	   errorLayer(err_E2M1DNb_b "E2M1DN : Fixed MET1 enclosure of DRAIN NDIFF = 2.0")

Executing: nhvtb_ex40 = geomOr(nhvtb_eg2_s1 nhvtb_poly)

Executing: nhvtb_ex4_s1 = geomSize(nhvtb_ex4 0.23)

Executing: nhvtb_ex4_s2 = geomSize(nhvtb_ex4 0.235)

Executing: err_E2PBP1 = geomOr(geomAndNot(nhvtb_ex4_s1 pwblk) geomAnd(geomAndNot(nhvtb_e...
	   errorLayer(err_E2PBP1 "E2PBP1 : Fixed PWBLK enclosure of POLY1 in SOURCE region = 0.23")

Executing: nhvtb_ndf_ex1 = geomGetEdge(nhvtb_ndf inside tub)

Executing: nhvtb_ndf_ex1_s1 = geomSize(nhvtb_ndf_ex1 -0.1)

Executing: nhvtb_ndf_ex1_s2 = geomSize(nhvtb_ndf_ex1 -0.105)

Executing: err_O1NXP4 = geomOr(geomAndNot(nhvtb_ndf_ex1_s1 pwell4) geomAnd(geomAndNot(nh...
	   errorLayer(err_O1NXP4 "O1NXP4 : Fixed NDF overlap of PWELL4 = 0.1")

Executing: err_O2NXGAa = drc(ndf nhvtb_1 (ovlp == 0.65))

Executing: err_O2NXGA = geomAndNot(geomAnd(ndf nhvtb_1) err_O2NXGAa)
	   errorLayer(err_O2NXGA "O2NXGA : Fixed NDF overlap of GATE = 0.65")

Executing: M_NX_nhvtb = geomAndNot(nhvtb_ex1_s ndf)
	   errorLayer(M_NX_nhvtb "M_NX : Predefined area must have NDF")

Executing: N_P4_nhvtb = geomAnd(geomSize(nhvtb_ndf_1 -0.1) pwell4)
	   errorLayer(N_P4_nhvtb "N_P4 : Predefined area must not have PWELL4")

Executing: nhvtb_ex71 = geomAndNot(tub_nhvtb_s10 geomAndNot(nhvtb_ndf_1 nhvtb_ndf_ex1_s1))

Executing: nhvtb_ex81 = geomAndNot(nhvtb_ex71 geomOr(poly dti))

Executing: nhvtb_ex82 = geomSize(geomGetLength(geomGetEdge(nhvtb_ex81 butting dti) (keep...

Executing: nhvtb_ex83 = geomAndNot(nhvtb_ex81 nhvtb_ex82)

Executing: M_DF_nhvtb = geomAndNot(nhvtb_ex83 diff)
	   errorLayer(M_DF_nhvtb "M_DF : Predefined area must have DIFF")

Executing: nhvtb_ex72 = geomSize(geomGetLength(geomGetEdge(geomOr(diff M_DF_nhvtb) insid...

Executing: nhvtb_ex7 = geomOr(nhvtb_ex71 nhvtb_ex72)

Executing: M_P4_nhvtb = geomAndNot(nhvtb_ex7 pwell4)
	   errorLayer(M_P4_nhvtb "M_P4 : Predefined area must have PWELL4")

Executing: err_B12MV = geomAndNot(geomSize(tub_nhvu 1.0) mv)
	   errorLayer(err_B12MV "B12MV : nhvu without MV is not allowed")

Executing: err_B4HB = geomAndNot(geomSize(tub_nhvu 1.0) subblk)
	   errorLayer(err_B4HB "B4HB : nhvu without SUBBLK is not allowed")

Executing: nhvu_ndf = geomStraddle(geomAnd(ndf tub) nhvu_1)

Executing: nhvu_ndf_1 = geomAnd(geomOr(nhvu_ndf geomSize(geomGetEdge(nhvu_ndf coincident...

Executing: nhvu_s1 = geomSize(geomGetEdge(nhvu_ndf inside nhvu_1) -5.1)

Executing: nhvu_s2 = geomSize(geomGetEdge(nhvu_s1 butting ndif) -4.45)

Executing: err_S11DF = geomXor(geomAndNot(nhvu_s1 nhvu_1) nhvu_s2)
	   errorLayer(err_S11DF "S11DF : Fixed DRAIN-EDGE-STI length = 4.45")

Executing: nhvu_nsd_a = geomInside(ndif tub_nhvu)

Executing: nhvu_nsd = geomOutside(nhvu_nsd_a poly)

Executing: err_S4P1DN = drc(poly nhvu_nsd (sep < 2.6))
	   errorLayer(err_S4P1DN "S4P1DN : Minimum POLY1 spacing to DRAIN NDIFF = 2.6")

Executing: nhvu_poly = geomAnd(geomOr(nhvu_s1 nhvu) poly)

Executing: nhvu_eg2 = geomGetEdge(nhvu_poly inside poly)

Executing: nhvu_eg2_s1 = geomSize(nhvu_eg2 1.0)

Executing: nhvu_eg2_s2 = geomAndNot(geomSize(nhvu_eg2_s1 0.005) geomOr(nhvu_s1 nhvu_1 nh...

Executing: err_E12P1GAa_u = geomAndNot(nhvu_eg2_s1 poly)

Executing: err_E12P1GAb_u = geomAnd(nhvu_eg2_s2 poly)

Executing: err_E12P1GA_u = geomOr(err_E12P1GAa_u err_E12P1GAb_u)
	   errorLayer(err_E12P1GA_u "E12P1GA : Fixed POLY1 extension beyond GATE = 1.0")

Executing: nhvu_s3 = geomSize(geomGetEdge(nhvu_ndf inside nhvu_1) -2.5)

Executing: err_E3P1DN = geomAndNot(nhvu_s3 poly)
	   errorLayer(err_E3P1DN "E3P1DN : Minimum POLY1 extension beyond NDIFF = 1.85")

Executing: err_E2NXDNa_u = geomAndNot(geomStraddle(ndiff nhvu_ndf) nhvu_nsd)
	   errorLayer(err_E2NXDNa_u "E2NXDN : Minimum NDF enclosure of DRAIN NDIFF = 2.5")

Executing: err_E2NXDN_u = drc(ndf nhvu_nsd (enc < 2.5))
	   errorLayer(err_E2NXDN_u "E2NXDN : Minimum NDF enclosure of DRAIN NDIFF = 2.5")

Executing: nhvu_ex1 = geomGetEdge(geomOr(nhvu_nsd nhvu_s1) inside ndf)

Executing: nhvu_ex1_s = geomAndNot(geomSize(nhvu_ex1 2.5) tub)

Executing: nhvu_ex61 = geomGetEdge(nhvu_nsd butting nhvu_s2)

Executing: nhvu_ex62 = geomGetEdge(nhvu_nsd outside nhvu_s2)

Executing: nhvu_ex63 = geomSize(nhvu_ex61 0.5)

Executing: nhvu_ex64 = geomSize(nhvu_ex61 0.505)

Executing: nhvu_ex60 = geomOr(nhvu_nsd nhvu_ex63)

Executing: nhvu_ex65 = geomAndNot(geomSize(geomSize(nhvu_ex62 1.5) 0.5) nhvu_ex60)

Executing: nhvu_ex66 = geomAndNot(geomSize(nhvu_ex65 0.005) nhvu_ex60)

Executing: err_E1M1DNa_u = geomAndNot(nhvu_ex60 met1)
	   errorLayer(err_E1M1DNa_u "E1M1DN : Fixed MET1 enclosure of DRAIN NDIFF = 0.5")

Executing: err_E1M1DNb_u = geomAnd(geomAndNot(nhvu_ex64 nhvu_ex63) met1)
	   errorLayer(err_E1M1DNb_u "E1M1DN : Fixed MET1 enclosure of DRAIN NDIFF = 0.5")

Executing: err_E2M1DNa_u = geomAndNot(nhvu_ex65 met1)
	   errorLayer(err_E2M1DNa_u "E2M1DN : Fixed MET1 enclosure of DRAIN NDIFF = 2.0")

Executing: err_E2M1DNb_u = geomAnd(geomAndNot(nhvu_ex66 nhvu_ex65) met1)
	   errorLayer(err_E2M1DNb_u "E2M1DN : Fixed MET1 enclosure of DRAIN NDIFF = 2.0")

Executing: nhvu_ex40 = geomOr(nhvu_eg2_s1 nhvu_poly)

Executing: nhvu_ex4_s1 = geomSize(nhvu_ex4 0.23)

Executing: nhvu_ex4_s2 = geomSize(nhvu_ex4 0.235)

Executing: err_E2PBP1_u = geomOr(geomAndNot(nhvu_ex4_s1 pwblk) geomAnd(geomAndNot(nhvu_e...
	   errorLayer(err_E2PBP1_u "E2PBP1 : Fixed PWBLK enclosure of POLY1 in SOURCE region = 0.23")

Executing: nhvu_ndf_ex1 = geomGetEdge(nhvu_ndf inside tub)

Executing: nhvu_ndf_ex1_s1 = geomSize(nhvu_ndf_ex1 -0.1)

Executing: nhvu_ndf_ex1_s2 = geomSize(nhvu_ndf_ex1 -0.105)

Executing: err_O1NXP4_u = geomOr(geomAndNot(nhvu_ndf_ex1_s1 pwell4) geomAnd(geomAndNot(n...
	   errorLayer(err_O1NXP4_u "O1NXP4 : Fixed NDF overlap of PWELL4 = 0.1")

Executing: err_O2NXGAa_u = drc(ndf nhvu_1 (ovlp == 0.65))

Executing: err_O2NXGA_u = geomAndNot(geomAnd(ndf nhvu_1) err_O2NXGAa_u)
	   errorLayer(err_O2NXGA_u "O2NXGA : Fixed NDF overlap of GATE = 0.65")

Executing: M_NX_nhvu = geomAndNot(nhvu_ex1_s ndf)
	   errorLayer(M_NX_nhvu "M_NX : Predefined area must have NDF")

Executing: N_P4_nhvu = geomAnd(geomSize(nhvu_ndf_1 -0.1) pwell4)
	   errorLayer(N_P4_nhvu "N_P4 : Predefined area must not have PWELL4")

Executing: nhvu_ex71 = geomAndNot(tub_nhvu_s10 geomAndNot(nhvu_ndf_1 nhvu_ndf_ex1_s1))

Executing: nhvu_ex81 = geomAndNot(nhvu_ex71 geomOr(poly dti))

Executing: nhvu_ex82 = geomSize(geomGetLength(geomGetEdge(nhvu_ex81 butting dti) (keep <...

Executing: nhvu_ex83 = geomAndNot(nhvu_ex81 nhvu_ex82)

Executing: M_DF_nhvu = geomAndNot(nhvu_ex83 diff)
	   errorLayer(M_DF_nhvu "M_DF : Predefined area must have DIFF")

Executing: nhvu_ex72 = geomSize(geomGetLength(geomGetEdge(geomOr(diff M_DF_nhvu) inside ...

Executing: nhvu_ex7 = geomOr(nhvu_ex71 nhvu_ex72)

Executing: M_P4_nhvu = geomAndNot(nhvu_ex7 pwell4)
	   errorLayer(M_P4_nhvu "M_P4 : Predefined area must have PWELL4")

Executing: err_E2DNP1_t = drc(ndif geomGetEdge(ndhvta coincident poly) (enc < 0.27))
	   errorLayer(err_E2DNP1_t "E2DNP1 : Minimum NDIFF extension beyond POLY1 = 0.27")

Executing: err_B18MV = geomAndNot(geomSize(tub_ndhvt 1.0) mv)
	   errorLayer(err_B18MV "B18MV : ndhvt without MV is not allowed")

Executing: err_B10HB = geomAndNot(geomSize(tub_ndhvt 1.0) subblk)
	   errorLayer(err_B10HB "B10HB : ndvht without SUBBLK is not allowed")

Executing: err_B19MV = geomAndNot(geomSize(tub_ndhvta 1.0) mv)
	   errorLayer(err_B19MV "B19MV : ndhvta without MV is not allowed")

Executing: err_B12HB = geomAndNot(geomSize(tub_ndhvta 1.0) subblk)
	   errorLayer(err_B12HB "B12HB : ndvhta without SUBBLK is not allowed")

Executing: ndhvt_1a = geomEnclose(ndhvt_1 ndhvta)

Executing: ndhvt_1b = geomEnclose(ndhvt_1 ndhvt)

Executing: ndhvt_ndf = geomStraddle(geomAnd(ndf tub) ndhvt_1b)

Executing: ndhvt_ndf_1 = geomAnd(geomOr(ndhvt_ndf geomSize(geomGetEdge(ndhvt_ndf coincid...

Executing: ndhvta_ndf = geomStraddle(geomAnd(ndf tub) ndhvt_1a)

Executing: ndhvta_ndf_1 = geomAnd(geomOr(ndhvta_ndf geomSize(geomGetEdge(ndhvta_ndf coin...

Executing: ndhvt_s1 = geomSize(geomGetEdge(ndhvt_ndf inside ndhvt_1b) -3.05)

Executing: ndhvt_s2 = geomSize(geomGetEdge(ndhvt_s1 butting ndif) -2.4)

Executing: err_S17DF = geomXor(geomAndNot(ndhvt_s1 ndhvt_1) ndhvt_s2)
	   errorLayer(err_S17DF "S17DF : Fixed DRAIN-EDGE-STI length = 2.4")

Executing: ndhvta_s1 = geomSize(geomGetEdge(ndhvta_ndf inside ndhvt_1a) -1.8)

Executing: ndhvta_s2 = geomSize(geomGetEdge(ndhvta_s1 butting ndif) -1.25)

Executing: err_S7DF = geomXor(geomAndNot(ndhvta_s1 ndhvt_1a) ndhvta_s2)
	   errorLayer(err_S7DF "S7DF : Fixed DRAIN-EDGE-STI length = 1.25")

Executing: ndhvt_nsd_a = geomInside(ndif tub_ndhvt)

Executing: ndhvt_nsd = geomOutside(ndhvt_nsd_a poly)

Executing: err_S10P1DN = drc(poly ndhvt_nsd (sep < 1.55))
	   errorLayer(err_S10P1DN "S10P1DN : Minimum POLY1 spacing to DRAIN NDIFF = 1.55")

Executing: ndhvta_nsd_a = geomInside(ndif tub_ndhvta)

Executing: ndhvta_nsd = geomOutside(ndhvta_nsd_a poly)

Executing: err_S7P1DN = drc(poly ndhvta_nsd (sep < 0.65))
	   errorLayer(err_S7P1DN "S7P1DN : Minimum POLY1 spacing to DRAIN NDIFF = 0.65")

Executing: ndhvt_poly = geomAnd(geomOr(ndhvt_s1 ndhvt) poly)

Executing: ndhvt_eg2 = geomGetEdge(ndhvt_poly inside poly)

Executing: ndhvt_eg2_s1 = geomSize(ndhvt_eg2 1.0)

Executing: ndhvt_eg2_s2 = geomAndNot(geomSize(ndhvt_eg2_s1 0.005) geomOr(ndhvt_s1 ndhvt_...

Executing: err_E12P1GAa_t = geomAndNot(ndhvt_eg2_s1 poly)

Executing: err_E12P1GAb_t = geomAnd(ndhvt_eg2_s2 poly)

Executing: err_E12P1GA_t = geomOr(err_E12P1GAa_t err_E12P1GAb_t)
	   errorLayer(err_E12P1GA_t "E12P1GA : Fixed POLY1 extension beyond GATE = 1.0")

Executing: ndhvta_poly = geomAnd(geomOr(ndhvta_s1 ndhvta) poly)

Executing: ndhvta_eg2 = geomGetEdge(ndhvta_poly inside poly)

Executing: ndhvta_eg2_s1 = geomSize(ndhvta_eg2 1.0)

Executing: ndhvta_eg2_s2 = geomAndNot(geomSize(ndhvta_eg2_s1 0.005) geomOr(ndhvta_s1 ndh...

Executing: err_E12P1GAa_ta = geomAndNot(ndhvta_eg2_s1 poly)

Executing: err_E12P1GAb_ta = geomAnd(ndhvta_eg2_s2 poly)

Executing: err_E12P1GA_ta = geomOr(err_E12P1GAa_ta err_E12P1GAb_ta)
	   errorLayer(err_E12P1GA_ta "E12P1GA : Fixed POLY1 extension beyond GATE = 1.0")

Executing: err_E2P1DN_t = drc(poly geomStraddle(ndif ndhvt_1b) (enc < 0.85))
	   errorLayer(err_E2P1DN_t "E2P1DN : Minimum POLY1 extension beyond NDIFF = 0.85")

Executing: err_E6P1DN = drc(poly geomStraddle(ndif ndhvt_1a) (enc < 0.6))
	   errorLayer(err_E6P1DN "E6P1DN : Minimum POLY1 extension beyond NDIFF = 0.6")

Executing: err_E2NXDNa_t = geomAndNot(geomStraddle(ndiff ndhvt_ndf) ndhvt_nsd)
	   errorLayer(err_E2NXDNa_t "E2NXDN : Minimum NDF enclosure of DRAIN NDIFF = 2.5")

Executing: err_E2NXDN_t = drc(ndf ndhvt_nsd (enc < 2.5))
	   errorLayer(err_E2NXDN_t "E2NXDN : Minimum NDF enclosure of DRAIN NDIFF = 2.5")

Executing: err_E1NXDNa_t = geomAndNot(geomStraddle(ndiff ndhvta_ndf) ndhvta_nsd)
	   errorLayer(err_E1NXDNa_t "E1NXDN : Minimum NDF enclosure of DRAIN NDIFF = 1.8")

Executing: err_E1NXDN_t = drc(ndf ndhvta_nsd (enc < 1.8))
	   errorLayer(err_E1NXDN_t "E1NXDN : Minimum NDF enclosure of DRAIN NDIFF = 1.8")

Executing: ndhvt_ex1 = geomGetEdge(geomOr(ndhvt_nsd ndhvt_s1) inside ndf)

Executing: ndhvt_ex1_s = geomAndNot(geomSize(ndhvt_ex1 2.5) tub)

Executing: ndhvta_ex1 = geomGetEdge(geomOr(ndhvta_nsd ndhvta_s1) inside ndf)

Executing: ndhvta_ex1_s = geomAndNot(geomSize(ndhvta_ex1 2.5) tub)

Executing: ndhvt_ex61 = geomGetEdge(ndhvt_nsd butting ndhvt_s2)

Executing: ndhvt_ex62 = geomGetEdge(ndhvt_nsd outside ndhvt_s2)

Executing: ndhvt_ex63 = geomSize(ndhvt_ex61 0.5)

Executing: ndhvt_ex64 = geomSize(ndhvt_ex61 0.505)

Executing: ndhvt_ex60 = geomOr(ndhvt_nsd ndhvt_ex63)

Executing: ndhvt_ex65 = geomAndNot(geomSize(geomSize(ndhvt_ex62 1.5) 0.5) ndhvt_ex60)

Executing: ndhvt_ex66 = geomAndNot(geomSize(ndhvt_ex65 0.005) ndhvt_ex60)

Executing: err_E1M1DNa_t = geomAndNot(ndhvt_ex60 met1)
	   errorLayer(err_E1M1DNa_t "E1M1DN : Fixed MET1 enclosure of DRAIN NDIFF = 0.5")

Executing: err_E1M1DNb_t = geomAnd(geomAndNot(ndhvt_ex64 ndhvt_ex63) met1)
	   errorLayer(err_E1M1DNb_t "E1M1DN : Fixed MET1 enclosure of DRAIN NDIFF = 0.5")

Executing: err_E2M1DNa_t = geomAndNot(ndhvt_ex65 met1)
	   errorLayer(err_E2M1DNa_t "E2M1DN : Fixed MET1 enclosure of DRAIN NDIFF = 2.0")

Executing: err_E2M1DNb_t = geomAnd(geomAndNot(ndhvt_ex66 ndhvt_ex65) met1)
	   errorLayer(err_E2M1DNb_t "E2M1DN : Fixed MET1 enclosure of DRAIN NDIFF = 2.0")

Executing: ndhvta_ex61 = geomGetEdge(ndhvta_nsd butting ndhvta_s2)

Executing: ndhvta_ex62 = geomGetEdge(ndhvta_nsd outside ndhvta_s2)

Executing: ndhvta_ex63 = geomSize(ndhvta_ex61 0.5)

Executing: ndhvta_ex64 = geomSize(ndhvta_ex61 0.505)

Executing: ndhvta_ex60 = geomOr(ndhvta_nsd ndhvta_ex63)

Executing: ndhvta_ex65 = geomAndNot(geomSize(geomSize(ndhvta_ex62 1.5) 0.5) ndhvta_ex60)

Executing: ndhvta_ex66 = geomAndNot(geomSize(ndhvta_ex65 0.005) ndhvta_ex60)

Executing: err_E1M1DNa_ta = geomAndNot(ndhvta_ex60 met1)
	   errorLayer(err_E1M1DNa_ta "E1M1DN : Fixed MET1 enclosure of DRAIN NDIFF = 0.5")

Executing: err_E1M1DNb_ta = geomAnd(geomAndNot(ndhvta_ex64 ndhvta_ex63) met1)
	   errorLayer(err_E1M1DNb_ta "E1M1DN : Fixed MET1 enclosure of DRAIN NDIFF = 0.5")

Executing: ndhvta_ex67 = geomSize(ndhvta_ex60 1.3)

Executing: err_E2M1DNa_ta = geomAndNot(ndhvta_ex65 met1)
	   errorLayer(err_E2M1DNa_ta "E2M1DN : Fixed MET1 enclosure of DRAIN NDIFF = 2.0")

Executing: err_E2M1DNb_ta = geomAnd(geomAndNot(ndhvta_ex66 ndhvta_ex65) met1)
	   errorLayer(err_E2M1DNb_ta "E2M1DN : Fixed MET1 enclosure of DRAIN NDIFF = 2.0")

Executing: err_S7M1a = drc(geomOr(ndhvta_ex65 ndhvta_ex60) met1 (sep < 0.28))
	   errorLayer(err_S7M1a "S7M1 : Minimum MET1 of DRAIN NDIFF spacing to MET1 = 0.28")

Executing: ndhvt_ex40 = geomOr(ndhvt_eg2_s1 ndhvt_poly)

Executing: ndhvt_ex4_s1 = geomSize(ndhvt_ex4 0.23)

Executing: ndhvt_ex4_s2 = geomSize(ndhvt_ex4 0.235)

Executing: err_E2PBP1_t = geomOr(geomAndNot(ndhvt_ex4_s1 pwblk) geomAnd(geomAndNot(ndhvt...
	   errorLayer(err_E2PBP1_t "E2PBP1 : Fixed PWBLK enclosure of POLY1 in SOURCE region = 0.23")

Executing: ndhvta_ex40 = geomOr(ndhvta_eg2_s1 ndhvta_poly)

Executing: ndhvta_ex4_s1 = geomSize(ndhvta_ex4 0.18)

Executing: ndhvta_ex4_s2 = geomSize(ndhvta_ex4 0.185)

Executing: err_E1PBP1a = geomOr(geomAndNot(ndhvta_ex4_s1 pwblk) geomAnd(geomAndNot(ndhvt...
	   errorLayer(err_E1PBP1a "E1PBP1 : Fixed PWBLK enclosure of POLY1 in SOURCE region = 0.18")

Executing: ndhvt_ndf_ex1 = geomGetEdge(ndhvt_ndf inside tub)

Executing: ndhvt_ndf_ex1_s1 = geomSize(ndhvt_ndf_ex1 -0.1)

Executing: ndhvt_ndf_ex1_s2 = geomSize(ndhvt_ndf_ex1 -0.105)

Executing: err_O1NXP4t = geomOr(geomAndNot(ndhvt_ndf_ex1_s1 pwell4) geomAnd(geomAndNot(n...
	   errorLayer(err_O1NXP4t "O1NXP4 : Fixed NDF overlap of PWELL4 = 0.1")

Executing: err_O2NXGAa_t = drc(ndf ndhvt_1b (ovlp == 0.65))

Executing: err_O2NXGA_t = geomAndNot(geomAnd(ndf ndhvt_1b) err_O2NXGAa_t)
	   errorLayer(err_O2NXGA_t "O2NXGA : Fixed NDF overlap of GATE = 0.65")

Executing: ndhvta_ex3 = drc(ndf ndhvt_1a (ovlp == 0.55))

Executing: err_O1NXGA_t = geomAndNot(geomAnd(ndf ndhvt_1a) ndhvta_ex3)
	   errorLayer(err_O1NXGA_t "O1NXGA : Fixed NDF overlap of GATE = 0.55")

Executing: M_NX_ndhvt = geomAndNot(ndhvt_ex1_s ndf)
	   errorLayer(M_NX_ndhvt "M_NX : Predefined area must have NDF")

Executing: N_P4_ndhvt = geomAnd(geomSize(ndhvt_ndf_1 -0.1) pwell4)
	   errorLayer(N_P4_ndhvt "N_P4 : Predefined area must not have PWELL4")

Executing: ndhvt_ex71 = geomAndNot(tub_ndhvt_s10 geomAndNot(ndhvt_ndf_1 ndhvt_ndf_ex1_s1))

Executing: ndhvt_ex81 = geomAndNot(ndhvt_ex71 geomOr(poly dti))

Executing: ndhvt_ex82 = geomSize(geomGetLength(geomGetEdge(ndhvt_ex81 butting dti) (keep...

Executing: ndhvt_ex83 = geomAndNot(ndhvt_ex81 ndhvt_ex82)

Executing: M_DF_ndhvt = geomAndNot(ndhvt_ex83 diff)
	   errorLayer(M_DF_ndhvt "M_DF : Predefined area must have DIFF")

Executing: ndhvt_ex72 = geomSize(geomGetLength(geomGetEdge(geomOr(diff M_DF_ndhvt) insid...

Executing: ndhvt_ex7 = geomOr(ndhvt_ex71 ndhvt_ex72)

Executing: M_P4_ndhvt = geomAndNot(ndhvt_ex7 pwell4)
	   errorLayer(M_P4_ndhvt "M_P4 : Predefined area must have PWELL4")

Executing: ndhvt_dl1 = geomSize(geomGetEdge(ndhvt coincident poly) 0.32)

Executing: ndhvt_dl2 = geomSize(geomGetEdge(ndhvt inside gate) 0.3)

Executing: ndhvt_dl3 = geomOr(ndhvt_dl1 ndhvt_dl2 ndhvt)

Executing: ndhvt_dl4 = geomSize(geomGetEdge(ndhvt_dl3 coincident act) 2.5)

Executing: ndhvt_dl = geomOr(ndhvt_dl3 ndhvt_dl4)

Executing: M_DL_ndhvt = geomAndNot(ndhvt_dl depl)
	   errorLayer(M_DL_ndhvt "M_DL : Predefined area must have DEPL")

Executing: M_NX_ndhvta = geomAndNot(geomOr(ndhvta_ex1_s ndhvta_ex67) ndf)
	   errorLayer(M_NX_ndhvta "M_NX : Predefined area must have NDF")

Executing: N_P4_ndhvta = geomAnd(geomOr(ndhvta_ex1_s ndhvta_ex67) pwell4)
	   errorLayer(N_P4_ndhvta "N_P4 : Predefined area must not have PWELL4")

Executing: ndhvta_ex71 = geomAndNot(tub_ndhvta_s10 ndhvta_ndf_1)

Executing: ndhvta_ex81 = geomAndNot(ndhvta_ex71 geomOr(poly dti))

Executing: ndhvta_ex82 = geomSize(geomGetLength(geomGetEdge(ndhvta_ex81 butting dti) (ke...

Executing: ndhvta_ex83 = geomAndNot(ndhvta_ex81 ndhvta_ex82)

Executing: M_DF_ndhvta = geomAndNot(ndhvta_ex83 diff)
	   errorLayer(M_DF_ndhvta "M_DF : Predefined area must have DIFF")

Executing: ndhvta_ex72 = geomSize(geomGetLength(geomGetEdge(geomOr(diff M_DF_ndhvta) ins...

Executing: ndhvta_ex7 = geomOr(ndhvta_ex71 ndhvta_ex72)

Executing: M_P4_ndhvta = geomAndNot(ndhvta_ex7 pwell4)
	   errorLayer(M_P4_ndhvta "M_P4 : Predefined area must have PWELL4")

Executing: N_NX_ndhvta = geomAnd(ndhvta_ex7 ndf)
	   errorLayer(N_NX_ndhvta "N_NX : Predefined area must not have NDF")

Executing: ndhvta_dl1 = geomSize(geomGetEdge(ndhvta coincident poly) 0.27)

Executing: ndhvta_dl2 = geomSize(geomGetEdge(ndhvta inside gate) 0.3)

Executing: ndhvta_dl3 = geomOr(ndhvta_dl1 ndhvta_dl2 ndhvta)

Executing: ndhvta_dl4 = geomSize(geomGetEdge(ndhvta_dl3 coincident act) 2.5)

Executing: ndhvta_dl = geomOr(ndhvta_dl3 ndhvta_dl4)

Executing: M_DL_ndhvta = geomAndNot(ndhvta_dl depl)
	   errorLayer(M_DL_ndhvta "M_DL : Predefined area must have DEPL")

Executing: err_B13MV = geomAndNot(geomSize(tub_dfwdnt 1.0) mv)
	   errorLayer(err_B13MV "B13MV : dfwdnt without MV is not allowed")

Executing: err_B5HB = geomAndNot(geomSize(tub_dfwdnt 1.0) subblk)
	   errorLayer(err_B5HB "B5HB : dfwdnt without SUBBLK is not allowed")

Executing: dfwdnt_ndf = geomStraddle(geomAnd(ndf tub) dfwdnt_1)

Executing: dfwdnt_ndf_1 = geomAnd(geomOr(dfwdnt_ndf geomSize(geomGetEdge(dfwdnt_ndf coin...

Executing: dfwdnt_g1 = geomOverlap(dfwdnut_gate dfwdnt)

Executing: dfwdnt_g = geomAnd(dfwdnt_g1 pwell4)

Executing: dfwdnt_s1 = geomSize(geomGetEdge(dfwdnt_ndf inside dfwdnt_g1) -3.05)

Executing: dfwdnt_s2 = geomSize(geomGetEdge(dfwdnt_s1 butting ndif) -2.4)

Executing: err_S12DF = geomXor(geomAndNot(dfwdnt_s1 dfwdnt_g1) dfwdnt_s2)
	   errorLayer(err_S12DF "S12DF : Fixed CATHODE-EDGE-STI length = 2.4")

Executing: dfwdnt_nsd_a = geomInside(ndif tub_dfwdnt)

Executing: dfwdnt_nsd = geomOutside(dfwdnt_nsd_a poly)

Executing: err_S5P1DN = drc(poly dfwdnt_nsd (sep < 1.55))
	   errorLayer(err_S5P1DN "S5P1DN : Minimum POLY1 spacing to Cathode NDIFF = 1.55")

Executing: dfwdnt_poly = geomAnd(geomOr(dfwdnt_s1 dfwdnt_g) poly)

Executing: dfwdnt_eg2 = geomGetEdge(dfwdnt_poly inside poly)

Executing: dfwdnt_eg2_s1 = geomSize(dfwdnt_eg2 1.0)

Executing: dfwdnt_eg2_s2 = geomAndNot(geomSize(dfwdnt_eg2_s1 0.005) geomOr(dfwdnt_s1 dfw...

Executing: err_E1P1DFa = geomAndNot(dfwdnt_eg2_s1 poly)

Executing: err_E1P1DFb = geomAnd(dfwdnt_eg2_s2 poly)

Executing: err_E1P1DF = geomOr(err_E1P1DFa err_E1P1DFb)
	   errorLayer(err_E1P1DF "E1P1DF : Fixed POLY1 extension beyond ACTIVE = 1.0")

Executing: err_E4P1DN = drc(poly geomStraddle(ndif dfwdnt_g1) (enc < 0.85))
	   errorLayer(err_E4P1DN "E4P1DN : Minimum POLY1 extension beyond NDIFF = 0.85")

Executing: err_E4NXDNa = geomAndNot(geomStraddle(ndiff dfwdnt_ndf) dfwdnt_nsd)
	   errorLayer(err_E4NXDNa "E4NXDN : Minimum NDF enclosure of Cathode NDIFF = 2.5")

Executing: err_E4NXDN = drc(ndf dfwdnt_nsd (enc < 2.5))
	   errorLayer(err_E4NXDN "E4NXDN : Minimum NDF enclosure of Cathode NDIFF = 2.5")

Executing: dfwdnt_ex1 = geomGetEdge(geomOr(dfwdnt_nsd dfwdnt_s1) inside ndf)

Executing: dfwdnt_ex1_s = geomAndNot(geomSize(dfwdnt_ex1 2.5) tub)

Executing: dfwdnt_p1 = geomGetEdge(dfwdnt_ndf_1 inside dfwdnt_g1)

Executing: dfwdnt_p11a = geomSize(geomGetEdge(geomStraddle(poly dfwdnt) butting diffdti)...

Executing: dfwdnt_p11 = geomGetEdge(dfwdnt_ndf_1 inside geomOr(poly dfwdnt_p11a))

Executing: dfwdnt_p1_s1 = geomSize(dfwdnt_p1 0.1)

Executing: dfwdnt_p1_s2 = geomSize(dfwdnt_p1 0.4)

Executing: dfwdnt_p11_s1 = geomSize(dfwdnt_p11 0.1)

Executing: dfwdnt_p11_s2 = geomSize(dfwdnt_p11 0.105)

Executing: err_O1P1DP = geomAndNot(geomAndNot(dfwdnt_p1_s2 dfwdnt_p1_s1) pdif)
	   errorLayer(err_O1P1DP "O1P1DP : Minimum POLY1 overlap PDIFF = 0.3")

Executing: err_E1INNXa = geomAndNot(dfwdnt_p11_s1 nimp)

Executing: err_E1INNXb = geomAnd(geomAndNot(dfwdnt_p11_s2 dfwdnt_p11_s1) nimp)

Executing: err_E1INNX = geomOr(err_E1INNXa err_E1INNXb)
	   errorLayer(err_E1INNX "E1INNX : Fixed NIMP enclosure of NDF = 0.1")

Executing: dfwdnt_ex61 = geomGetEdge(dfwdnt_nsd butting dfwdnt_s2)

Executing: dfwdnt_ex62 = geomGetEdge(dfwdnt_nsd outside dfwdnt_s2)

Executing: dfwdnt_ex63 = geomSize(dfwdnt_ex61 0.5)

Executing: dfwdnt_ex64 = geomSize(dfwdnt_ex61 0.505)

Executing: dfwdnt_ex60 = geomOr(dfwdnt_nsd dfwdnt_ex63)

Executing: dfwdnt_ex65 = geomAndNot(geomSize(geomSize(dfwdnt_ex62 1.5) 0.5) dfwdnt_ex60)

Executing: dfwdnt_ex66 = geomAndNot(geomSize(dfwdnt_ex65 0.005) dfwdnt_ex60)

Executing: err_E3M1DNa = geomAndNot(dfwdnt_ex60 met1)
	   errorLayer(err_E3M1DNa "E3M1DN : Fixed MET1 enclosure of Cathode NDIFF = 0.5")

Executing: err_E3M1DNb = geomAnd(geomAndNot(dfwdnt_ex64 dfwdnt_ex63) met1)
	   errorLayer(err_E3M1DNb "E3M1DN : Fixed MET1 enclosure of Cathode NDIFF = 0.5")

Executing: err_E4M1DNa = geomAndNot(dfwdnt_ex65 met1)
	   errorLayer(err_E4M1DNa "E4M1DN : Fixed MET1 enclosure of Cathode NDIFF = 2.0")

Executing: err_E4M1DNb = geomAnd(geomAndNot(dfwdnt_ex66 dfwdnt_ex65) met1)
	   errorLayer(err_E4M1DNb "E4M1DN : Fixed MET1 enclosure of Cathode NDIFF = 2.0")

Executing: dfwdnt_ex40 = geomOr(dfwdnt_eg2_s1 dfwdnt_poly)

Executing: dfwdnt_ex4_s1 = geomSize(dfwdnt_ex4 0.23)

Executing: dfwdnt_ex4_s2 = geomSize(dfwdnt_ex4 0.235)

Executing: err_E3PBP1 = geomOr(geomAndNot(dfwdnt_ex4_s1 pwblk) geomAnd(geomAndNot(dfwdnt...
	   errorLayer(err_E3PBP1 "E3PBP1 : Fixed PWBLK enclosure of POLY1 in Anode region = 0.23")

Executing: dfwdnt_ndf_ex1 = geomGetEdge(dfwdnt_ndf inside tub)

Executing: dfwdnt_ndf_ex1_s1 = geomSize(dfwdnt_ndf_ex1 -0.1)

Executing: dfwdnt_ndf_ex1_s2 = geomSize(dfwdnt_ndf_ex1 -0.105)

Executing: err_O2NXP4 = geomOr(geomAndNot(dfwdnt_ndf_ex1_s1 pwell4) geomAnd(geomAndNot(d...
	   errorLayer(err_O2NXP4 "O2NXP4 : Fixed NDF overlap of PWELL4 = 0.1")

Executing: err_O3NXGAa = drc(ndf dfwdnt_g1 (ovlp == 0.65))

Executing: err_O3NXGA = geomAndNot(geomAnd(ndf dfwdnt_g1) err_O3NXGAa)
	   errorLayer(err_O3NXGA "O3NXGA : Fixed NDF overlap of GATE Anode = 0.65")

Executing: dfwdnt_ex30 = geomOr(geomAndNot(geomAnd(geomSize(geomGetEdge(dfwdnt_g1 inside...

Executing: dfwdnt_ex3a = geomSize(dfwdnt_ex3 0.5)

Executing: dfwdnt_ex3b = geomSize(geomGetLength(geomGetEdge(dfwdnt_ex3a butting dti) (ke...

Executing: dfwdnt_ex3ab = geomOr(dfwdnt_ex3a dfwdnt_ex3b)

Executing: dfwdnt_ex31 = geomGetLength(geomGetEdge(dfwdnt_ex3ab butting diff) (keep > 0.5))

Executing: dfwdnt_ex3_s0 = geomSize(dfwdnt_ex31 -2.5)

Executing: dfwdnt_ex3_s1 = geomSize(geomGetEdge(dfwdnt_ex3_s0 butting geomOr(dfwdnt_ex1_...

Executing: dfwdnt_mpw41 = geomOr(dfwdnt_ex3_s0 dfwdnt_ex3_s1)

Executing: dfwdnt_nsd_ed1 = geomGetEdge(geomOr(dfwdnt_nsd dfwdnt_s2) outside dfwdnt_g1)

Executing: dfwdnt_diff12 = geomSize(dfwdnt_nsd_ed1 0.5)

Executing: dfwdnt_diff11 = geomSize(dfwdnt_nsd_ed1 0.505)

Executing: dfwdnt_diff21 = geomSize(dfwdnt_ex3 0.505)

Executing: dfwdnt_diff32 = geomSize(dfwdnt_eg2 0.5)

Executing: dfwdnt_diff31 = geomSize(dfwdnt_eg2 0.505)

Executing: dfwdnt_diff1 = geomAndNot(dfwdnt_diff11 dfwdnt_diff12)

Executing: dfwdnt_diff2 = geomAndNot(dfwdnt_diff21 dfwdnt_diff22)

Executing: dfwdnt_diff3 = geomAndNot(dfwdnt_diff31 dfwdnt_diff32)

Executing: err_S2DFDT = geomAndNot(geomOr(dfwdnt_diff1 dfwdnt_diff2 dfwdnt_diff3) dti)
	   errorLayer(err_S2DFDT "S2DFDT : Fixed DIFF spacing to DTI = 0.5")

Executing: M_NX_dfwdnt = geomAndNot(dfwdnt_ex1_s ndf)
	   errorLayer(M_NX_dfwdnt "M_NX : Predefined area must have NDF")

Executing: N_P4_dfwdnt = geomAnd(geomSize(dfwdnt_ndf_1 -0.1) pwell4)
	   errorLayer(N_P4_dfwdnt "N_P4 : Predefined area must not have PWELL4")

Executing: dfwdnt_mpw42 = geomAndNot(tub_dfwdnt_s10 geomAndNot(dfwdnt_ndf_1 dfwdnt_ndf_e...

Executing: dfwdnt_pwell4 = geomOr(dfwdnt_mpw41 dfwdnt_mpw42)

Executing: M_P4_dfwdnt = geomAndNot(dfwdnt_pwell4 pwell4)
	   errorLayer(M_P4_dfwdnt "M_P4 : Predefined area must have PWELL4")

Executing: err_B14MV = geomAndNot(geomSize(tub_dfwdnu 1.0) mv)
	   errorLayer(err_B14MV "B14MV : dfwdnu without MV is not allowed")

Executing: err_B6HB = geomAndNot(geomSize(tub_dfwdnu 1.0) subblk)
	   errorLayer(err_B6HB "B6HB : dfwdnu without SUBBLK is not allowed")

Executing: dfwdnu_ndf = geomStraddle(geomAnd(ndf tub) dfwdnu_1)

Executing: dfwdnu_ndf_1 = geomAnd(geomOr(dfwdnu_ndf geomSize(geomGetEdge(dfwdnu_ndf coin...

Executing: dfwdnu_g1 = geomOverlap(dfwdnut_gate dfwdnu)

Executing: dfwdnu_g = geomAnd(dfwdnu_g1 pwell4)

Executing: dfwdnu_s1 = geomSize(geomGetEdge(dfwdnu_ndf inside dfwdnu_g1) -5.1)

Executing: dfwdnu_s2 = geomSize(geomGetEdge(dfwdnu_s1 butting ndif) -4.45)

Executing: err_S13DF = geomXor(geomAndNot(dfwdnu_s1 dfwdnu_g1) dfwdnu_s2)
	   errorLayer(err_S13DF "S13DF : Fixed CATHODE-EDGE-STI length = 4.45")

Executing: dfwdnu_nsd_a = geomInside(ndif tub_dfwdnu)

Executing: dfwdnu_nsd = geomOutside(dfwdnu_nsd_a poly)

Executing: err_S6P1DN = drc(poly dfwdnu_nsd (sep < 2.6))
	   errorLayer(err_S6P1DN "S6P1DN : Minimum POLY1 spacing to Cathode NDIFF = 2.6")

Executing: dfwdnu_poly = geomAnd(geomOr(dfwdnu_s1 dfwdnu_g) poly)

Executing: dfwdnu_eg2 = geomGetEdge(dfwdnu_poly inside poly)

Executing: dfwdnu_eg2_s1 = geomSize(dfwdnu_eg2 1.0)

Executing: dfwdnu_eg2_s2 = geomAndNot(geomSize(dfwdnu_eg2_s1 0.005) geomOr(dfwdnu_s1 dfw...

Executing: err_E1P1DFa_u = geomAndNot(dfwdnu_eg2_s1 poly)

Executing: err_E1P1DFb_u = geomAnd(dfwdnu_eg2_s2 poly)

Executing: err_E1P1DF_u = geomOr(err_E1P1DFa_u err_E1P1DFb_u)
	   errorLayer(err_E1P1DF_u "E1P1DF : Fixed POLY1 extension beyond ACTIVE = 1.0")

Executing: err_E5P1DN = drc(poly geomStraddle(ndif dfwdnu_g1) (enc < 1.85))
	   errorLayer(err_E5P1DN "E5P1DN : Minimum POLY1 extension beyond NDIFF = 1.85")

Executing: err_E4NXDNa_u = geomAndNot(geomStraddle(ndiff dfwdnu_ndf) dfwdnu_nsd)
	   errorLayer(err_E4NXDNa_u "E4NXDN : Minimum NDF enclosure of Cathode NDIFF = 2.5")

Executing: err_E4NXDN_u = drc(ndf dfwdnu_nsd (enc < 2.5))
	   errorLayer(err_E4NXDN_u "E4NXDN : Minimum NDF enclosure of Cathode NDIFF = 2.5")

Executing: dfwdnu_ex1 = geomGetEdge(geomOr(dfwdnu_nsd dfwdnu_s1) inside ndf)

Executing: dfwdnu_ex1_s = geomAndNot(geomSize(dfwdnu_ex1 2.5) tub)

Executing: dfwdnu_p1 = geomGetEdge(dfwdnu_ndf_1 inside dfwdnu_g1)

Executing: dfwdnu_p11a = geomSize(geomGetEdge(geomStraddle(poly dfwdnu) butting diffdti)...

Executing: dfwdnu_p11 = geomGetEdge(dfwdnu_ndf_1 inside geomOr(poly dfwdnu_p11a))

Executing: dfwdnu_p1_s1 = geomSize(dfwdnu_p1 0.1)

Executing: dfwdnu_p1_s2 = geomSize(dfwdnu_p1 0.4)

Executing: dfwdnu_p11_s1 = geomSize(dfwdnu_p11 0.1)

Executing: dfwdnu_p11_s2 = geomSize(dfwdnu_p11 0.105)

Executing: err_O1P1DP_u = geomAndNot(geomAndNot(dfwdnu_p1_s2 dfwdnu_p1_s1) pdif)
	   errorLayer(err_O1P1DP_u "O1P1DP : Minimum POLY1 overlap PDIFF = 0.3")

Executing: err_E1INNXa_u = geomAndNot(dfwdnu_p11_s1 nimp)

Executing: err_E1INNXb_u = geomAnd(geomAndNot(dfwdnu_p11_s2 dfwdnu_p11_s1) nimp)

Executing: err_E1INNX_u = geomOr(err_E1INNXa_u err_E1INNXb_u)
	   errorLayer(err_E1INNX_u "E1INNX : Fixed NIMP enclosure of NDF = 0.1")

Executing: dfwdnu_ex61 = geomGetEdge(dfwdnu_nsd butting dfwdnu_s2)

Executing: dfwdnu_ex62 = geomGetEdge(dfwdnu_nsd outside dfwdnu_s2)

Executing: dfwdnu_ex63 = geomSize(dfwdnu_ex61 0.5)

Executing: dfwdnu_ex64 = geomSize(dfwdnu_ex61 0.505)

Executing: dfwdnu_ex60 = geomOr(dfwdnu_nsd dfwdnu_ex63)

Executing: dfwdnu_ex65 = geomAndNot(geomSize(geomSize(dfwdnu_ex62 1.5) 0.5) dfwdnu_ex60)

Executing: dfwdnu_ex66 = geomAndNot(geomSize(dfwdnu_ex65 0.005) dfwdnu_ex60)

Executing: err_E3M1DNa_u = geomAndNot(dfwdnu_ex60 met1)
	   errorLayer(err_E3M1DNa_u "E3M1DN : Fixed MET1 enclosure of Cathode NDIFF = 0.5")

Executing: err_E3M1DNb_u = geomAnd(geomAndNot(dfwdnu_ex64 dfwdnu_ex63) met1)
	   errorLayer(err_E3M1DNb_u "E3M1DN : Fixed MET1 enclosure of Cathode NDIFF = 0.5")

Executing: err_E4M1DNa_u = geomAndNot(dfwdnu_ex65 met1)
	   errorLayer(err_E4M1DNa_u "E4M1DN : Fixed MET1 enclosure of Cathode NDIFF = 2.0")

Executing: err_E4M1DNb_u = geomAnd(geomAndNot(dfwdnu_ex66 dfwdnu_ex65) met1)
	   errorLayer(err_E4M1DNb_u "E4M1DN : Fixed MET1 enclosure of Cathode NDIFF = 2.0")

Executing: dfwdnu_ex40 = geomOr(dfwdnu_eg2_s1 dfwdnu_poly)

Executing: dfwdnu_ex4_s1 = geomSize(dfwdnu_ex4 0.23)

Executing: dfwdnu_ex4_s2 = geomSize(dfwdnu_ex4 0.235)

Executing: err_E3PBP1_u = geomOr(geomAndNot(dfwdnu_ex4_s1 pwblk) geomAnd(geomAndNot(dfwd...
	   errorLayer(err_E3PBP1_u "E3PBP1 : Fixed PWBLK enclosure of POLY1 in Anode region = 0.23")

Executing: dfwdnu_ndf_ex1 = geomGetEdge(dfwdnu_ndf inside tub)

Executing: dfwdnu_ndf_ex1_s1 = geomSize(dfwdnu_ndf_ex1 -0.1)

Executing: dfwdnu_ndf_ex1_s2 = geomSize(dfwdnu_ndf_ex1 -0.105)

Executing: err_O2NXP4_u = geomOr(geomAndNot(dfwdnu_ndf_ex1_s1 pwell4) geomAnd(geomAndNot...
	   errorLayer(err_O2NXP4_u "O2NXP4 : Fixed NDF overlap of PWELL4 = 0.1")

Executing: err_O3NXGAa_u = drc(ndf dfwdnu_g1 (ovlp == 0.65))

Executing: err_O3NXGA_u = geomAndNot(geomAnd(ndf dfwdnu_g1) err_O3NXGAa_u)
	   errorLayer(err_O3NXGA_u "O3NXGA : Fixed NDF overlap of GATE Anode = 0.65")

Executing: dfwdnu_ex30 = geomOr(geomAndNot(geomAnd(geomSize(geomGetEdge(dfwdnu_g1 inside...

Executing: dfwdnu_ex3a = geomSize(dfwdnu_ex3 0.5)

Executing: dfwdnu_ex3b = geomSize(geomGetLength(geomGetEdge(dfwdnu_ex3a butting dti) (ke...

Executing: dfwdnu_ex3ab = geomOr(dfwdnu_ex3a dfwdnu_ex3b)

Executing: dfwdnu_ex31 = geomGetLength(geomGetEdge(dfwdnu_ex3ab butting diff) (keep > 0.5))

Executing: dfwdnu_ex3_s0 = geomSize(dfwdnu_ex31 -2.5)

Executing: dfwdnu_ex3_s1 = geomSize(geomGetEdge(dfwdnu_ex3_s0 butting geomOr(dfwdnu_ex1_...

Executing: dfwdnu_mpw41 = geomOr(dfwdnu_ex3_s0 dfwdnu_ex3_s1)

Executing: dfwdnu_nsd_ed1 = geomGetEdge(geomOr(dfwdnu_nsd dfwdnu_s2) outside dfwdnu_g1)

Executing: dfwdnu_diff12 = geomSize(dfwdnu_nsd_ed1 0.5)

Executing: dfwdnu_diff11 = geomSize(dfwdnu_nsd_ed1 0.505)

Executing: dfwdnu_diff21 = geomSize(dfwdnu_ex3 0.505)

Executing: dfwdnu_diff32 = geomSize(dfwdnu_eg2 0.5)

Executing: dfwdnu_diff31 = geomSize(dfwdnu_eg2 0.505)

Executing: dfwdnu_diff1 = geomAndNot(dfwdnu_diff11 dfwdnu_diff12)

Executing: dfwdnu_diff2 = geomAndNot(dfwdnu_diff21 dfwdnu_diff22)

Executing: dfwdnu_diff3 = geomAndNot(dfwdnu_diff31 dfwdnu_diff32)

Executing: err_S2DFDTa = geomAndNot(geomOr(dfwdnu_diff1 dfwdnu_diff2 dfwdnu_diff3) dti)
	   errorLayer(err_S2DFDTa "S2DFDT : Fixed DIFF spacing to DTI = 0.5")

Executing: M_NX_dfwdnu = geomAndNot(dfwdnu_ex1_s ndf)
	   errorLayer(M_NX_dfwdnu "M_NX : Predefined area must have NDF")

Executing: N_P4_dfwdnu = geomAnd(geomSize(dfwdnu_ndf_1 -0.1) pwell4)
	   errorLayer(N_P4_dfwdnu "N_P4 : Predefined area must not have PWELL4")

Executing: dfwdnu_mpw42 = geomAndNot(tub_dfwdnu_s10 geomAndNot(dfwdnu_ndf_1 dfwdnu_ndf_e...

Executing: dfwdnu_pwell4 = geomOr(dfwdnu_mpw41 dfwdnu_mpw42)

Executing: M_P4_dfwdnu = geomAndNot(dfwdnu_pwell4 pwell4)
	   errorLayer(M_P4_dfwdnu "M_P4 : Predefined area must have PWELL4")

Executing: err_E2P4DP = drc(pwell4 geomAnd(pdif tub_dfwdn) (enc < 0.2))
	   errorLayer(err_E2P4DP "E2P4DP : Minimum PWELL4 enclosure of PDIFF = 0.2")

Executing: tub_nhvta_s11 = geomSize(geomGetEdge(tub_nhvta_s10 butting diffdti) 2.0)

Executing: tub_nhvta_s12 = geomSize(geomGetEdge(tub_nhvta_s10 butting diffdti) 1.0)

Executing: tub_nhvta_s1 = geomOr(tub_nhvta_s10 tub_nhvta_s11)

Executing: tub_nhvta_s2 = geomOr(tub_nhvta_s10 tub_nhvta_s12)

Executing: tub_nhvtb_s11 = geomSize(geomGetEdge(tub_nhvtb_s10 butting diffdti) 2.0)

Executing: tub_nhvtb_s12 = geomSize(geomGetEdge(tub_nhvtb_s10 butting diffdti) 1.0)

Executing: tub_nhvtb_s1 = geomOr(tub_nhvtb_s10 tub_nhvtb_s11)

Executing: tub_nhvtb_s2 = geomOr(tub_nhvtb_s10 tub_nhvtb_s12)

Executing: tub_nhvu_s11 = geomSize(geomGetEdge(tub_nhvu_s10 butting diffdti) 2.0)

Executing: tub_nhvu_s12 = geomSize(geomGetEdge(tub_nhvu_s10 butting diffdti) 1.0)

Executing: tub_nhvu_s1 = geomOr(tub_nhvu_s10 tub_nhvu_s11)

Executing: tub_nhvu_s2 = geomOr(tub_nhvu_s10 tub_nhvu_s12)

Executing: tub_ndhvt_s11 = geomSize(geomGetEdge(tub_ndhvt_s10 butting diffdti) 2.0)

Executing: tub_ndhvt_s12 = geomSize(geomGetEdge(tub_ndhvt_s10 butting diffdti) 1.0)

Executing: tub_ndhvt_s1 = geomOr(tub_ndhvt_s10 tub_ndhvt_s11)

Executing: tub_ndhvt_s2 = geomOr(tub_ndhvt_s10 tub_ndhvt_s12)

Executing: tub_ndhvta_s11 = geomSize(geomGetEdge(tub_ndhvta_s10 butting diffdti) 2.0)

Executing: tub_ndhvta_s12 = geomSize(geomGetEdge(tub_ndhvta_s10 butting diffdti) 1.0)

Executing: tub_ndhvta_s1 = geomOr(tub_ndhvta_s10 tub_ndhvta_s11)

Executing: tub_ndhvta_s2 = geomOr(tub_ndhvta_s10 tub_ndhvta_s12)

Executing: nxta_ex51 = geomSize(geomSize(geomGetEdge(nhvta coincident diff) 2.82) 0.18)

Executing: nxta_ex5 = geomOr(geomSize(nhvta_ndf_1 0.5) nxta_ex51 geomSize(nhvta 0.18))

Executing: N_PB_nhvta = geomAnd(geomAndNot(tub_nhvta_s2 nxta_ex5) pwblk)
	   errorLayer(N_PB_nhvta "N_PB : Predefined area must not have PWBLK")

Executing: M_PB_nhvta = geomAndNot(geomAnd(nxta_ex5 tub_nhvta_s1) pwblk)
	   errorLayer(M_PB_nhvta "M_PB : Predefined area must have PWBLK")

Executing: ndxta_ex51 = geomSize(geomSize(geomGetEdge(ndhvta coincident diff) 2.82) 0.18)

Executing: ndxta_ex5 = geomOr(geomSize(ndhvta_ndf_1 0.5) ndxta_ex51 geomSize(ndhvta 0.18))

Executing: N_PB_ndhvta = geomAnd(geomAndNot(tub_ndhvta_s2 ndxta_ex5) pwblk)
	   errorLayer(N_PB_ndhvta "N_PB : Predefined area must not have PWBLK")

Executing: M_PB_ndhvta = geomAndNot(geomAnd(ndxta_ex5 tub_ndhvta_s1) pwblk)
	   errorLayer(M_PB_ndhvta "M_PB : Predefined area must have PWBLK")

Executing: nxta_ex61 = geomSize(geomSize(geomGetEdge(nhvtb coincident diff) 2.77) 0.23)

Executing: nxta_ex6 = geomOr(geomSize(nhvtb_ndf_1 0.5) nxta_ex61 geomSize(nhvtb 0.23))

Executing: N_PB_nhvtb = geomAnd(geomAndNot(tub_nhvtb_s2 nxta_ex6) pwblk)
	   errorLayer(N_PB_nhvtb "N_PB : Predefined area must not have PWBLK")

Executing: M_PB_nhvtb = geomAndNot(geomAnd(nxta_ex6 tub_nhvtb_s1) pwblk)
	   errorLayer(M_PB_nhvtb "M_PB : Predefined area must have PWBLK")

Executing: nxta_ex71 = geomSize(geomSize(geomGetEdge(nhvu coincident diff) 2.77) 0.23)

Executing: nxta_ex7 = geomOr(geomSize(nhvu_ndf_1 0.5) nxta_ex71 geomSize(nhvu 0.23))

Executing: N_PB_nhvu = geomAnd(geomAndNot(tub_nhvu_s2 nxta_ex7) pwblk)
	   errorLayer(N_PB_nhvu "N_PB : Predefined area must not have PWBLK")

Executing: M_PB_nhvu = geomAndNot(geomAnd(nxta_ex7 tub_nhvu_s1) pwblk)
	   errorLayer(M_PB_nhvu "M_PB : Predefined area must have PWBLK")

Executing: nxta_ex81 = geomSize(geomSize(geomGetEdge(ndhvt coincident diff) 2.77) 0.23)

Executing: nxta_ex8 = geomOr(geomSize(ndhvt_ndf_1 0.5) nxta_ex81 geomSize(ndhvt 0.23))

Executing: N_PB_ndhvt = geomAnd(geomAndNot(tub_ndhvt_s2 nxta_ex8) pwblk)
	   errorLayer(N_PB_ndhvt "N_PB : Predefined area must not have PWBLK")

Executing: M_PB_ndhvt = geomAndNot(geomAnd(nxta_ex8 tub_ndhvt_s1) pwblk)
	   errorLayer(M_PB_ndhvt "M_PB : Predefined area must have PWBLK")

Executing: dfwdn_ndf_1 = geomOr(dfwdnt_ndf_1 dfwdnu_ndf_1)

Executing: tub_dfwdn_s10 = geomSize(tub_dfwdn 0.5)

Executing: tub_dfwdn_s11 = geomSize(geomGetEdge(tub_dfwdn_s10 butting diffdti) 2.0)

Executing: tub_dfwdn_s12 = geomSize(geomGetEdge(tub_dfwdn_s10 butting diffdti) 1.0)

Executing: tub_dfwdn_s1 = geomOr(tub_dfwdn_s10 tub_dfwdn_s11)

Executing: tub_dfwdn_s2 = geomOr(tub_dfwdn_s10 tub_dfwdn_s12)

Executing: nxta_ex91 = geomOr(dfwdn_ndf_1 geomSize(geomGetEdge(dfwdn_ndf_1 inside pwell4...

Executing: nxta_ex9 = geomOr(nxta_ex91 geomSize(geomGetEdge(nxta_ex91 coincident diffdti...

Executing: N_PB_dfwdn = geomAnd(geomAndNot(tub_dfwdn_s2 nxta_ex9) pwblk)
	   errorLayer(N_PB_dfwdn "N_PB : Predefined area must not have PWBLK")

Executing: M_PB_dfwdn = geomAndNot(geomAnd(nxta_ex9 tub_dfwdn_s1) pwblk)
	   errorLayer(M_PB_dfwdn "M_PB : Predefined area must have PWBLK")

Executing: nimp2 = geomAnd(nimp tub2_pxta1)

Executing: pimp2 = geomAnd(pimp tub2_pxta1)

Executing: err_S2IP = drc(pimp2 (sepNotch < 0.42))
	   errorLayer(err_S2IP "S2IP : Minimum PIMP spacing = 0.42")

Executing: err_W2IN = drc(nimp2 (width < 0.42))
	   errorLayer(err_W2IN "W2IN : Minimum NIMP width = 0.42")

Executing: err_W13GA = drc(phv_xta (width < 0.5))
	   errorLayer(err_W13GA "W13GA : Minimum CHANNEL length = 0.5")

Executing: err_W14GA = geomGetLength(geomGetEdge(phvtu_all inside act) (keep < 3.0))
	   errorLayer(err_W14GA "W14GA : Minimum GATE width = 3.0")

Executing: err_W15GAb = geomGetLength(geomGetEdge(phvta coincident act inside pwell4) (k...
	   errorLayer(err_W15GAb "W15GA : Maximum CHANNEL length = 1.5")

Executing: err_W16GAb = geomGetLength(geomGetEdge(geomOr(phvtb phvu) coincident act insi...
	   errorLayer(err_W16GAb "W16GA : Maximum CHANNEL length = 25.0")

Executing: phvt_eg = geomGetEdge(phv_xta coincident pdif)

Executing: phvt_eg_s1 = geomOr(geomSize(phvt_eg 0.5) phv_xta)

Executing: phvt_eg_s2 = geomOr(geomSize(phvt_eg 0.505) phv_xta)

Executing: err_S5GADT_p = geomAndNot(geomAndNot(phvt_eg_s2 phvt_eg_s1) dti)
	   errorLayer(err_S5GADT_p "S5GADT : Fixed GATE spacing to DTI = 0.5")

Executing: err_B15MV = geomAndNot(geomSize(tub_phvta 1.0) mv)
	   errorLayer(err_B15MV "B15MV : phvta without MV is not allowed")

Executing: err_B7HB = geomAndNot(geomSize(tub_phvta 1.0) subblk)
	   errorLayer(err_B7HB "B7HB : phvta without SUBBLK is not allowed")

Executing: phvta_pdf = geomStraddle(geomAnd(pdf tub) phvta_1)

Executing: phvta_pdf_1 = geomAnd(geomOr(phvta_pdf geomSize(geomGetEdge(phvta_pdf coincid...

Executing: phvta_s1 = geomSize(geomGetEdge(phvta_pdf inside phvta_1) -2.35)

Executing: phvta_s2 = geomSize(geomGetEdge(phvta_s1 butting pdif) -1.6)

Executing: err_S14DF = geomXor(geomAndNot(phvta_s1 phvta_1) phvta_s2)
	   errorLayer(err_S14DF "S14DF : Fixed DRAIN-EDGE-STI length = 1.6")

Executing: phvta_psd_a = geomInside(pdif tub_phvta)

Executing: phvta_psd = geomOutside(phvta_psd_a poly)

Executing: err_S1P1DP = drc(poly phvta_psd (sep < 0.7))
	   errorLayer(err_S1P1DP "S1P1DP : Minimum POLY1 spacing to DRAIN PDIFF = 0.7")

Executing: phvta_poly = geomAnd(geomOr(phvta_s1 phvta) poly)

Executing: phvta_eg2 = geomGetEdge(phvta_poly inside poly)

Executing: phvta_eg2_s1 = geomSize(phvta_eg2 1.0)

Executing: phvta_eg2_s2 = geomAndNot(geomSize(phvta_eg2_s1 0.005) geomOr(phvta_s1 phvta_...

Executing: err_E12P1GAa_pa = geomAndNot(phvta_eg2_s1 poly)

Executing: err_E12P1GAb_pa = geomAnd(phvta_eg2_s2 poly)

Executing: err_E12P1GA_pa = geomOr(err_E12P1GAa_pa err_E12P1GAb_pa)
	   errorLayer(err_E12P1GA_pa "E12P1GA : Fixed POLY1 extension beyond GATE = 1.0")

Executing: err_E1P1DP = drc(poly geomStraddle(pdif phvta_1) (enc < 0.9))
	   errorLayer(err_E1P1DP "E1P1DP : Minimum POLY1 extension beyond PDIFF = 0.9")

Executing: err_E1PXDPa = geomAndNot(geomStraddle(pdiff phvta_pdf) phvta_psd)
	   errorLayer(err_E1PXDPa "E1PXDP : Minimum PDF enclosure of DRAIN PDIFF = 2.35")

Executing: err_E1PXDP = drc(pdf phvta_psd (enc < 2.35))
	   errorLayer(err_E1PXDP "E1PXDP : Minimum PDF enclosure of DRAIN PDIFF = 2.35")

Executing: phvta_ex1 = geomGetEdge(geomOr(phvta_psd phvta_s1) inside pdf)

Executing: phvta_ex1_s = geomAndNot(geomSize(phvta_ex1 2.5) tub)

Executing: phvta_ex61 = geomGetEdge(phvta_psd butting phvta_s2)

Executing: phvta_ex62 = geomGetEdge(phvta_psd outside phvta_s2)

Executing: phvta_ex63 = geomSize(phvta_ex61 0.5)

Executing: phvta_ex64 = geomSize(phvta_ex61 0.505)

Executing: phvta_ex60 = geomOr(phvta_psd phvta_ex63)

Executing: phvta_ex65 = geomAndNot(geomSize(geomSize(phvta_ex62 1.5) 0.5) phvta_ex60)

Executing: phvta_ex66 = geomAndNot(geomSize(phvta_ex65 0.005) phvta_ex60)

Executing: err_E1M1DPa = geomAndNot(phvta_ex60 met1)
	   errorLayer(err_E1M1DPa "E1M1DP : Fixed MET1 enclosure of DRAIN PDIFF = 0.5")

Executing: err_E1M1DPb = geomAnd(geomAndNot(phvta_ex64 phvta_ex63) met1)
	   errorLayer(err_E1M1DPb "E1M1DP : Fixed MET1 enclosure of DRAIN PDIFF = 0.5")

Executing: err_E2M1DPa = geomAndNot(phvta_ex65 met1)
	   errorLayer(err_E2M1DPa "E2M1DP : Fixed MET1 enclosure of DRAIN PDIFF = 2.0")

Executing: err_E2M1DPb = geomAnd(geomAndNot(phvta_ex66 phvta_ex65) met1)
	   errorLayer(err_E2M1DPb "E2M1DP : Fixed MET1 enclosure of DRAIN PDIFF = 2.0")

Executing: err_O1PXGAa = drc(pdf phvta_1 (ovlp == 0.75))

Executing: err_O1PXGA = geomAndNot(geomAnd(pdf phvta_1) err_O1PXGAa)
	   errorLayer(err_O1PXGA "O1PXGA : Fixed PDF overlap of GATE = 0.75")

Executing: phvta_pdf_ex1 = geomGetEdge(phvta_pdf inside tub)

Executing: phvta_pdf_ex1_s1 = geomSize(phvta_pdf_ex1 -0.1)

Executing: phvta_pdf_ex1_s2 = geomSize(phvta_pdf_ex1 -0.105)

Executing: err_O1PXNW = geomOr(geomAndNot(phvta_pdf_ex1_s1 nwell) geomAnd(geomAndNot(phv...
	   errorLayer(err_O1PXNW "O1PXNW : Fixed PDF overlap of NWELL = 0.1")

Executing: M_PX_phvta = geomAndNot(phvta_ex1_s pdf)
	   errorLayer(M_PX_phvta "M_PX : Predefined area must have PDF")

Executing: N_NW_phvta = geomAnd(geomSize(phvta_pdf_1 -0.1) nwell)
	   errorLayer(N_NW_phvta "N_NW : Predefined area must not have NWELL")

Executing: phvta_mnw2 = geomAndNot(geomSize(tub_phvta 0.5) geomAndNot(phvta_pdf_1 phvta_...

Executing: phvta_ex81 = geomAndNot(phvta_mnw2 geomOr(poly dti))

Executing: phvta_ex82 = geomSize(geomGetLength(geomGetEdge(phvta_ex81 butting dti) (keep...

Executing: phvta_ex83 = geomAndNot(phvta_ex81 phvta_ex82)

Executing: M_DF_phvta = geomAndNot(phvta_ex83 diff)
	   errorLayer(M_DF_phvta "M_DF : Predefined area must have DIFF")

Executing: phvta_ex72 = geomSize(geomGetLength(geomGetEdge(geomOr(diff M_DF_phvta) insid...

Executing: phvta_nwell = geomOr(phvta_ex72 phvta_mnw2)

Executing: M_NW_phvta = geomAndNot(phvta_nwell nwell)
	   errorLayer(M_NW_phvta "M_NW : Predefined area must have NWELL")

Executing: err_B16MV = geomAndNot(geomSize(tub_phvtb 1.0) mv)
	   errorLayer(err_B16MV "B16MV : phvtb without MV is not allowed")

Executing: err_B8HB = geomAndNot(geomSize(tub_phvtb 1.0) subblk)
	   errorLayer(err_B8HB "B8HB : phvtb without SUBBLK is not allowed")

Executing: phvtb_pdf = geomStraddle(geomAnd(pdf tub) phvtb_1)

Executing: phvtb_pdf_1 = geomAnd(geomOr(phvtb_pdf geomSize(geomGetEdge(phvtb_pdf coincid...

Executing: phvtb_s1 = geomSize(geomGetEdge(phvtb_pdf inside phvtb_1) -3.25)

Executing: phvtb_s2 = geomSize(geomGetEdge(phvtb_s1 butting pdif) -2.5)

Executing: err_S15DF = geomXor(geomAndNot(phvtb_s1 phvtb_1) phvtb_s2)
	   errorLayer(err_S15DF "S15DF : Fixed DRAIN-EDGE-STI length = 2.5")

Executing: phvtb_psd_a = geomInside(pdif tub_phvtb)

Executing: phvtb_psd = geomOutside(phvtb_psd_a poly)

Executing: err_S2P1DP = drc(poly phvtb_psd (sep < 1.4))
	   errorLayer(err_S2P1DP "S2P1DP : Minimum POLY1 spacing to DRAIN PDIFF = 1.4")

Executing: phvtb_poly = geomAnd(geomOr(phvtb_s1 phvtb) poly)

Executing: phvtb_eg2 = geomGetEdge(phvtb_poly inside poly)

Executing: phvtb_eg2_s1 = geomSize(phvtb_eg2 1.0)

Executing: phvtb_eg2_s2 = geomAndNot(geomSize(phvtb_eg2_s1 0.005) geomOr(phvtb_s1 phvtb_...

Executing: err_E12P1GAa_pb = geomAndNot(phvtb_eg2_s1 poly)

Executing: err_E12P1GAb_pb = geomAnd(phvtb_eg2_s2 poly)

Executing: err_E12P1GA_pb = geomOr(err_E12P1GAa_pb err_E12P1GAb_pb)
	   errorLayer(err_E12P1GA_pb "E12P1GA : Fixed POLY1 extension beyond GATE = 1.0")

Executing: phvtb_s3 = geomSize(geomGetEdge(phvtb_pdf inside phvtb_1) -1.85)

Executing: err_E2P1DP = geomAndNot(phvtb_s3 poly)
	   errorLayer(err_E2P1DP "E2P1DP : Minimum POLY1 extension beyond PDIFF = 1.1")

Executing: err_E2PXDPa = geomAndNot(geomStraddle(pdiff phvtb_pdf) phvtb_psd)
	   errorLayer(err_E2PXDPa "E2PXDP : Minimum PDF enclosure of DRAIN PDIFF = 2.5")

Executing: err_E2PXDP = drc(pdf phvtb_psd (enc < 2.5))
	   errorLayer(err_E2PXDP "E2PXDP : Minimum PDF enclosure of DRAIN PDIFF = 2.5")

Executing: phvtb_ex1 = geomGetEdge(geomOr(phvtb_psd phvtb_s1) inside pdf)

Executing: phvtb_ex1_s = geomAndNot(geomSize(phvtb_ex1 2.5) tub)

Executing: phvtb_ex61 = geomGetEdge(phvtb_psd butting phvtb_s2)

Executing: phvtb_ex62 = geomGetEdge(phvtb_psd outside phvtb_s2)

Executing: phvtb_ex63 = geomSize(phvtb_ex61 0.5)

Executing: phvtb_ex64 = geomSize(phvtb_ex61 0.505)

Executing: phvtb_ex60 = geomOr(phvtb_psd phvtb_ex63)

Executing: phvtb_ex65 = geomAndNot(geomSize(geomSize(phvtb_ex62 1.5) 0.5) phvtb_ex60)

Executing: phvtb_ex66 = geomAndNot(geomSize(phvtb_ex65 0.005) phvtb_ex60)

Executing: err_E1M1DPa_b = geomAndNot(phvtb_ex60 met1)
	   errorLayer(err_E1M1DPa_b "E1M1DP : Fixed MET1 enclosure of DRAIN PDIFF = 0.5")

Executing: err_E1M1DPb_b = geomAnd(geomAndNot(phvtb_ex64 phvtb_ex63) met1)
	   errorLayer(err_E1M1DPb_b "E1M1DP : Fixed MET1 enclosure of DRAIN PDIFF = 0.5")

Executing: err_E2M1DPa_b = geomAndNot(phvtb_ex65 met1)
	   errorLayer(err_E2M1DPa_b "E2M1DP : Fixed MET1 enclosure of DRAIN PDIFF = 2.0")

Executing: err_E2M1DPb_b = geomAnd(geomAndNot(phvtb_ex66 phvtb_ex65) met1)
	   errorLayer(err_E2M1DPb_b "E2M1DP : Fixed MET1 enclosure of DRAIN PDIFF = 2.0")

Executing: err_O1PXGAa_b = drc(pdf phvtb_1 (ovlp == 0.75))

Executing: err_O1PXGA_b = geomAndNot(geomAnd(pdf phvtb_1) err_O1PXGAa_b)
	   errorLayer(err_O1PXGA_b "O1PXGA : Fixed PDF overlap of GATE = 0.75")

Executing: phvtb_pdf_ex1 = geomGetEdge(phvtb_pdf inside tub)

Executing: phvtb_pdf_ex1_s1 = geomSize(phvtb_pdf_ex1 -0.1)

Executing: phvtb_pdf_ex1_s2 = geomSize(phvtb_pdf_ex1 -0.105)

Executing: err_O1PXNW_b = geomOr(geomAndNot(phvtb_pdf_ex1_s1 nwell) geomAnd(geomAndNot(p...
	   errorLayer(err_O1PXNW_b "O1PXNW : Fixed PDF overlap of NWELL = 0.1")

Executing: M_PX_phvtb = geomAndNot(phvtb_ex1_s pdf)
	   errorLayer(M_PX_phvtb "M_PX : Predefined area must have PDF")

Executing: N_NW_phvtb = geomAnd(geomSize(phvtb_pdf_1 -0.1) nwell)
	   errorLayer(N_NW_phvtb "N_NW : Predefined area must not have NWELL")

Executing: phvtb_mnw2 = geomAndNot(geomSize(tub_phvtb 0.5) geomAndNot(phvtb_pdf_1 phvtb_...

Executing: phvtb_ex81 = geomAndNot(phvtb_mnw2 geomOr(poly dti))

Executing: phvtb_ex82 = geomSize(geomGetLength(geomGetEdge(phvtb_ex81 butting dti) (keep...

Executing: phvtb_ex83 = geomAndNot(phvtb_ex81 phvtb_ex82)

Executing: M_DF_phvtb = geomAndNot(phvtb_ex83 diff)
	   errorLayer(M_DF_phvtb "M_DF : Predefined area must have DIFF")

Executing: phvtb_ex72 = geomSize(geomGetLength(geomGetEdge(geomOr(diff M_DF_phvtb) insid...

Executing: phvtb_nwell = geomOr(phvtb_ex72 phvtb_mnw2)

Executing: M_NW_phvtb = geomAndNot(phvtb_nwell nwell)
	   errorLayer(M_NW_phvtb "M_NW : Predefined area must have NWELL")

Executing: err_B17MV = geomAndNot(geomSize(tub_phvu 1.0) mv)
	   errorLayer(err_B17MV "B17MV : phvu without MV is not allowed")

Executing: err_B9HB = geomAndNot(geomSize(tub_phvu 1.0) subblk)
	   errorLayer(err_B9HB "B9HB : phvu without SUBBLK is not allowed")

Executing: phvu_pdf = geomStraddle(geomAnd(pdf tub) phvu_1)

Executing: phvu_pdf_1 = geomAnd(geomOr(phvu_pdf geomSize(geomGetEdge(phvu_pdf coincident...

Executing: phvu_s1 = geomSize(geomGetEdge(phvu_pdf inside phvu_1) -4.6)

Executing: phvu_s2 = geomSize(geomGetEdge(phvu_s1 butting pdif) -3.85)

Executing: err_S16DF = geomXor(geomAndNot(phvu_s1 phvu_1) phvu_s2)
	   errorLayer(err_S16DF "S16DF : Fixed DRAIN-EDGE-STI length = 3.85")

Executing: phvu_psd_a = geomInside(pdif tub_phvu)

Executing: phvu_psd = geomOutside(phvu_psd_a poly)

Executing: err_S4P1DP = drc(poly phvu_psd (sep < 2.05))
	   errorLayer(err_S4P1DP "S4P1DP : Minimum POLY1 spacing to DRAIN PDIFF = 2.05")

Executing: phvu_poly = geomAnd(geomOr(phvu_s1 phvu) poly)

Executing: phvu_eg2 = geomGetEdge(phvu_poly inside poly)

Executing: phvu_eg2_s1 = geomSize(phvu_eg2 1.0)

Executing: phvu_eg2_s2 = geomAndNot(geomSize(phvu_eg2_s1 0.005) geomOr(phvu_s1 phvu_1 ph...

Executing: err_E12P1GAa_pu = geomAndNot(phvu_eg2_s1 poly)

Executing: err_E12P1GAb_pu = geomAnd(phvu_eg2_s2 poly)

Executing: err_E12P1GA_pu = geomOr(err_E12P1GAa_pu err_E12P1GAb_pu)
	   errorLayer(err_E12P1GA_pu "E12P1GA : Fixed POLY1 extension beyond GATE = 1.0")

Executing: phvu_s3 = geomSize(geomGetEdge(phvu_pdf inside phvu_1) -2.55)

Executing: err_E3P1DP = geomAndNot(phvu_s3 poly)
	   errorLayer(err_E3P1DP "E3P1DP : Minimum POLY1 extension beyond PDIFF = 1.8")

Executing: err_E2PXDPa_u = geomAndNot(geomStraddle(pdiff phvu_pdf) phvu_psd)
	   errorLayer(err_E2PXDPa_u "E2PXDP : Minimum PDF enclosure of DRAIN PDIFF = 2.5")

Executing: err_E2PXDP_u = drc(pdf phvu_psd (enc < 2.5))
	   errorLayer(err_E2PXDP_u "E2PXDP : Minimum PDF enclosure of DRAIN PDIFF = 2.5")

Executing: phvu_ex1 = geomGetEdge(geomOr(phvu_psd phvu_s1) inside pdf)

Executing: phvu_ex1_s = geomAndNot(geomSize(phvu_ex1 2.5) tub)

Executing: phvu_ex61 = geomGetEdge(phvu_psd butting phvu_s2)

Executing: phvu_ex62 = geomGetEdge(phvu_psd outside phvu_s2)

Executing: phvu_ex63 = geomSize(phvu_ex61 0.5)

Executing: phvu_ex64 = geomSize(phvu_ex61 0.505)

Executing: phvu_ex60 = geomOr(phvu_psd phvu_ex63)

Executing: phvu_ex65 = geomAndNot(geomSize(geomSize(phvu_ex62 1.5) 0.5) phvu_ex60)

Executing: phvu_ex66 = geomAndNot(geomSize(phvu_ex65 0.005) phvu_ex60)

Executing: err_E1M1DPa_u = geomAndNot(phvu_ex60 met1)
	   errorLayer(err_E1M1DPa_u "E1M1DP : Fixed MET1 enclosure of DRAIN PDIFF = 0.5")

Executing: err_E1M1DPb_u = geomAnd(geomAndNot(phvu_ex64 phvu_ex63) met1)
	   errorLayer(err_E1M1DPb_u "E1M1DP : Fixed MET1 enclosure of DRAIN PDIFF = 0.5")

Executing: err_E2M1DPa_u = geomAndNot(phvu_ex65 met1)
	   errorLayer(err_E2M1DPa_u "E2M1DP : Fixed MET1 enclosure of DRAIN PDIFF = 2.0")

Executing: err_E2M1DPb_u = geomAnd(geomAndNot(phvu_ex66 phvu_ex65) met1)
	   errorLayer(err_E2M1DPb_u "E2M1DP : Fixed MET1 enclosure of DRAIN PDIFF = 2.0")

Executing: err_O1PXGAa_u = drc(pdf phvu_1 (ovlp == 0.75))

Executing: err_O1PXGA_u = geomAndNot(geomAnd(pdf phvu_1) err_O1PXGAa_u)
	   errorLayer(err_O1PXGA_u "O1PXGA : Fixed PDF overlap of GATE = 0.75")

Executing: phvu_pdf_ex1 = geomGetEdge(phvu_pdf inside tub)

Executing: phvu_pdf_ex1_s1 = geomSize(phvu_pdf_ex1 -0.1)

Executing: phvu_pdf_ex1_s2 = geomSize(phvu_pdf_ex1 -0.105)

Executing: err_O1PXNW_u = geomOr(geomAndNot(phvu_pdf_ex1_s1 nwell) geomAnd(geomAndNot(ph...
	   errorLayer(err_O1PXNW_u "O1PXNW : Fixed PDF overlap of NWELL = 0.1")

Executing: M_PX_phvu = geomAndNot(phvu_ex1_s pdf)
	   errorLayer(M_PX_phvu "M_PX : Predefined area must have PDF")

Executing: N_NW_phvu = geomAnd(geomSize(phvu_pdf_1 -0.1) nwell)
	   errorLayer(N_NW_phvu "N_NW : Predefined area must not have NWELL")

Executing: phvu_mnw2 = geomAndNot(geomSize(tub_phvu 0.5) geomAndNot(phvu_pdf_1 phvu_pdf_...

Executing: phvu_ex81 = geomAndNot(phvu_mnw2 geomOr(poly dti))

Executing: phvu_ex82 = geomSize(geomGetLength(geomGetEdge(phvu_ex81 butting dti) (keep <...

Executing: phvu_ex83 = geomAndNot(phvu_ex81 phvu_ex82)

Executing: M_DF_phvu = geomAndNot(phvu_ex83 diff)
	   errorLayer(M_DF_phvu "M_DF : Predefined area must have DIFF")

Executing: phvu_ex72 = geomSize(geomGetLength(geomGetEdge(geomOr(diff M_DF_phvu) inside ...

Executing: phvu_nwell = geomOr(phvu_ex72 phvu_mnw2)

Executing: M_NW_phvu = geomAndNot(phvu_nwell nwell)
	   errorLayer(M_NW_phvu "M_NW : Predefined area must have NWELL")

Executing: tub_pxta_s10 = geomSize(tub_pxta1 0.5)

Executing: tub_pxta_s11 = geomSize(geomGetEdge(tub_pxta_s10 coincident nwell) 2.0)

Executing: tub_pxta_s10a = geomSize(tub_pxta_s10 2.0)

Executing: tub_pxta_s11a = geomSize(geomGetEdge(tub_pxta_s11 inside tub_pxta_s10a outsid...

Executing: tub_pxta_s12 = geomSize(geomGetEdge(tub_pxta_s10 inside nwell) 4.0)

Executing: tub_pxta_s13 = geomSize(geomGetEdge(tub_pxta_s10 not_over nwell) 4.0)

Executing: tub_pxta_s2 = geomOr(tub_pxta_s10 tub_pxta_s11 tub_pxta_s11a tub_pxta_s12 tub...

Executing: M_PB_pxta = geomAndNot(geomAndNot(tub_pxta_s2 geomOr(phvta_nwell phvtb_nwell ...
	   errorLayer(M_PB_pxta "M_PB : Predefined area must have PWBLK")

Executing: err_O1NWQP = geomAndNot(qnv5_nwell nwell)
	   errorLayer(err_O1NWQP "err_O1NWQP : Fixed NWELL overlap of PBASE = 0.1")

Executing: qnv5_31 = geomEnclose(qnv5_20 qnv5_dev)

Executing: qnv5_32 = geomSize(qnv5_31 0.65)

Executing: qnv5_33 = geomSize(qnv5_31 0.655)

Executing: N_DF_qnv5 = geomAnd(geomAndNot(qnv5_32 qnv5_31) diff)
	   errorLayer(N_DF_qnv5 "N_DF : Predefined area must not have DIFF")

Executing: M_NW_qnv5 = geomAndNot(geomAndNot(qnv5_33 qnv5_22) nwell)
	   errorLayer(M_NW_qnv5 "M_NW : Predefined area must have NWELL")

Executing: qnv5_60 = geomSize(qnv5_31 -0.54)

Executing: qnv5_61 = geomSize(geomGetLength(qnv5_dev (keep == 2.0)) -0.17)

Executing: qnv5_62 = geomSize(geomGetLength(qnv5_dev (keep > 2.0)) -0.67)

Executing: geomHoles(geomOr(qnv5_61 qnv5_62))

Executing: qnv5_64 = geomAndNot(qnv5_60 qnv5_63)

Executing: M_SB_qnv5 = geomAndNot(qnv5_64 sblk)
	   errorLayer(M_SB_qnv5 "M_SB : Predefined area must have SBLK")

Executing: N_SB_qnv5 = geomAnd(geomAndNot(qnv5_31 qnv5_64) sblk)
	   errorLayer(N_SB_qnv5 "N_SB : Predefined area must not have SBLK")

Executing: N_HN_qnv5 = geomAnd(geomStraddle(nwell qnv5_22) hvnwell)
	   errorLayer(N_HN_qnv5 "N_HN : Predefined area must not have HVNWELL")

Executing: M_MV_qnv5 = geomAndNot(qnv5_33 mv)
	   errorLayer(M_MV_qnv5 "M_MV : Predefined area must have MV")

Executing: M_HB_qnv5 = geomAndNot(qnv5_33 subblk)
	   errorLayer(M_HB_qnv5 "M_HB : Predefined area must have SUBBLK")

Executing: qnv5_ex1 = geomSize(qnv5 0.85)

Executing: M_DT_qnv5 = geomGetEdge(qnv5_ex1 outside dti)
	   errorLayer(M_DT_qnv5 "M_DT : Predefined area must have DTI")

Executing: M_DN_qnv5 = geomAndNot(geomAndNot(qnv5_ex1 qnv5_32) ndif)
	   errorLayer(M_DN_qnv5 "M_DN : Predefined area must have NDIFF")

Executing: qnv5_ex2 = geomSize(qnv5 1.35)

Executing: M_DF_qnv5 = geomAndNot(geomAndNot(qnv5_ex2 qnv5_32) diff)
	   errorLayer(M_DF_qnv5 "M_DF : Predefined area must have DIFF")

Executing: qpv5_31 = geomEnclose(qpv5_20 qpv5_dev)

Executing: qpv5_60 = geomSize(qpv5_31 -0.54)

Executing: qpv5_61 = geomSize(geomGetLength(qpv5_dev (keep == 2.0)) -0.17)

Executing: qpv5_62 = geomSize(geomGetLength(qpv5_dev (keep > 2.0)) -0.67)

Executing: geomHoles(geomOr(qpv5_61 qpv5_62))

Executing: qpv5_64 = geomAndNot(qpv5_60 qpv5_63)

Executing: M_SB_qpv5 = geomAndNot(qpv5_64 sblk)
	   errorLayer(M_SB_qpv5 "M_SB : Predefined area must have SBLK")

Executing: N_SB_qpv5 = geomAnd(geomAndNot(qpv5_31 qpv5_64) sblk)
	   errorLayer(N_SB_qpv5 "N_SB : Predefined area must not have SBLK")

Executing: qpv5_70 = geomSize(qpv5 1.0)

Executing: qpv5_71 = geomSize(qpv5 1.95)

Executing: M_PB_qpv5 = geomAndNot(geomAndNot(qpv5_70 qpv5) pwblk)
	   errorLayer(M_PB_qpv5 "M_PB : Predefined area must have PWBLK")

Executing: N_PB_qpv5 = geomAnd(geomAndNot(qpv5_71 qpv5_70) pwblk)
	   errorLayer(N_PB_qpv5 "N_PB : Predefined area must not have PWBLK")

Executing: qpv5_73 = geomSize(qpv5 2.95)

Executing: M_MV_qpv5 = geomAndNot(qpv5_73 mv)
	   errorLayer(M_MV_qpv5 "M_MV : Predefined area must have MV")

Executing: M_HB_qpv5 = geomAndNot(qpv5_73 subblk)
	   errorLayer(M_HB_qpv5 "M_HB : Predefined area must have SUBBLK")

Executing: devices_sj = geomOr(dhw dfwn1_h0 nhv1_h0 phv1_h0 nisj_tub_ex1)

Executing: nw_check = geomAndNot(nwtrm0 devices_sj)

Executing: ndif_check = geomAndNot(ndif devices_sj)

Executing: err_S1HBNW = drc(subblktrm nw_check (sep < 0.6))
	   errorLayer(err_S1HBNW "S1HBNW : Minimum SUBBLK spacing to NWELL = 0.6")

Executing: err_S1HBPB = drc(subblktrm geomAndNot(pwblk dti) (sep < 0.5))
	   errorLayer(err_S1HBPB "S1HBPB : Minimum SUBBLK spacing to PWBLK = 0.5")

Executing: err_S1HBDN = drc(subblktrm ndif_check (sep < 0.5))
	   errorLayer(err_S1HBDN "S1HBDN : Minimum SUBBLK spacing to NDIFF = 0.5")

Executing: dhw_foxdti_s1 = geomSize(dhw_foxdti 0.5)

Executing: foxdti_mring_ex4 = geomOverlap(geomAnd(geomSize(foxdti_mring 0.5) pwblk) devi...

Executing: devices_hb1 = geomOr(qnv5_s1 dnpa dnpati dfwdn5 dza dzati rxw2ti_nw dzb_nw_s1)

Executing: rdn_g_ex1 = geomEnclose(tub geomGetRectangle(rdn_g (30 >= length)))

Executing: rdnm_g_ex1 = geomEnclose(tub geomGetRectangle(rdnm_g0 (30 >= length)))

Executing: rd_g_ex = geomOr(rdn_g_ex1 rdnm_g_ex1)

Executing: lv_rnw_scr = geomOr(nw_scr0 geomStraddle(ndif geomButting(geomOr(rdn_g rdnm_g...

Executing: devices_hb = geomOr(tub2_nxta_ex2 tub2_pxta1_ex2 qpv5_70 dhw_foxdti_s1)

Executing: pwblk_nhb = geomAndNot(pwblk geomOr(devices_hb devices_sj foxdti_mring_ex4))

Executing: ndif_nhb = geomAndNot(ndif_check geomOr(devices_hb devices_hb1 qpv_hb))

Executing: nwell_nhb = geomAndNot(nw_check geomOr(tub2_pxta1 devices_hb1 dhw_foxdti_s1 q...

Executing: err_B1HB = geomAnd(subblk hvnwell)
	   errorLayer(err_B1HB "B1HB : SUBBLK overlap of HVNWELL is not allowed")

Executing: err_B2HB = geomAndNot(geomAnd(subblk geomOr(pwblk_nhb nwell_nhb ndif_nhb)) ge...
	   errorLayer(err_B2HB "B2HB : SUBBLK overlap of PWBLK, NWELL, NDIFF is not allowed")

Executing: err_M_HB_dhw = geomAndNot(dhw_foxdti_s1 subblk)
	   errorLayer(err_M_HB_dhw "M_HB : Predefined area must have SUBBLK")

Executing: ndhv_depl = geomOr(ndhvta_dl ndhvt_dl)

Executing: err_B3NX = geomAndNot(geomAnd(depl ndf) ndhv_depl)
	   errorLayer(err_B3NX "B3NX : NDF overlap DEPL is not allowed")

Executing: err_B3P4 = geomAndNot(geomAnd(depl pwell4) ndhv_depl)
	   errorLayer(err_B3P4 "B3P4 : PWELL4 overlap DEPL is not allowed")

Executing: err_B3M1 = geomAndNot(geomAnd(met1 geomAndNot(geomOr(dti_ex3 diffdti_ex3) sal...
	   errorLayer(err_B3M1 "B3M1 : MET1 overlap of ISOTUB is not allowed")

Executing: err_B10P1 = geomAnd(poly geomOr(dti_ex3 diffdti_ex3))
	   errorLayer(err_B10P1 "B10P1 : POLY1 overlap of ISOTUB is not allowed")

Executing: err_B11P1 = geomGetNonRectangle(polydti)
	   errorLayer(err_B11P1 "B11P1 : POLY1DTI must be rectangular")

Executing: phv1_poly_1 = geomAnd(phv1_poly geomEnclose(hvtub phsj1_all))

Executing: nhv1_poly_1 = geomAnd(nhv1_poly geomEnclose(hvtub nhsj1_all))

Executing: hv1_poly = geomOr(phv1_poly_1 nhv1_poly_1)

Executing: hv1_poly_s = geomSize(geomGetEdge(hv1_poly butting dti) 0.5)

Executing: phvt_poly_1 = geomAnd(phvt_poly tub_pxta1)

Executing: nhvt_poly_1 = geomAnd(nhvt_poly tub_nxta)

Executing: hvt_poly = geomOr(phvt_poly_1 nhvt_poly_1)

Executing: hvt_poly_s = geomSize(geomGetEdge(hvt_poly butting dti) 0.5)

Executing: pmva_poly = geomAnd(geomSize(geomGetEdge(pmva_p2 inside poly) 1.5) polydti)

Executing: nmva_poly = geomAnd(geomSize(geomGetEdge(nmva_p2 inside poly) 1.5) polydti)

Executing: ds5_poly = drc(geomAnd(geomOr(d_ds5 d_ds5a) polydti) (width == 0.02))

Executing: cfg_poly = geomWidth(geomAnd(geomAnd(cfg_p12 sblk) polydti) (keep >= 0.18))

Executing: err_W5P1a = drc(polydti (width < 1.0))

Executing: err_W5P1 = geomAndNot(err_W5P1a geomOr(hvt_poly_s hv1_poly_s nisj1_poly pmva_...
	   errorLayer(err_W5P1 "W5P1 : Minimum POLY1DTI width = 1.0")

Executing: err_S2P1DT = drc(poly dti (sep < 0.08))
	   errorLayer(err_S2P1DT "S2P1DT : Minimum POLY1 spacing to DTI = 0.08")

Executing: err_E2P1CT = geomAnd(geomSize(geomGetEdge(poly inside dti) -0.44) geomAnd(con...
	   errorLayer(err_E2P1CT "E2P1CT : Minimum POLY1DTI enclosure of CONT = 0.44")

Executing: dfwdp_24 = geomGetLength(geomGetEdge(dfwdp_14 outside dti) (keep >= 2.0))

Executing: dfwdp_25 = geomGetLength(geomGetEdge(dfwdp_15 outside dti) (keep >= 2.0))

Executing: dfwdp_24s1 = geomSize(dfwdp_24 0.28)

Executing: dfwdp_24s2 = geomSize(dfwdp_24 0.285)

Executing: dfwdp_25s1 = geomSize(dfwdp_25 0.28)

Executing: dfwdp_25s2 = geomSize(dfwdp_25 0.285)

Executing: dfwdp_3 = geomOr(dfwdp_24s1 dfwdp_25s1)

Executing: err_M_DN_a = geomAndNot(geomOr(geomAndNot(dfwdp_24s2 dfwdp_24s1) geomAndNot(d...
	   errorLayer(err_M_DN_a "M_DN : Predefined area must have NDIFF")

Executing: dfwdp_df_s = geomSize(geomGetEdge(dfwdp_3 outside diff) 0.5)

Executing: err_N_DF_a = geomAnd(geomOr(dfwdp_df_s dfwdp_3) diff)
	   errorLayer(err_N_DF_a "N_DF : Predefined area must not have DIFF")

Executing: dfwdp_tub_ch = geomOr(dfwdp_1 dfwdp_3 dfwdp_ntap)

Executing: err_M_DT = geomGetEdge(dfwdp_tub_ch outside dti)
	   errorLayer(err_M_DT "M_DT : Predefined area must have DTI")

Executing: dfwdp_dp_s = geomSize(geomGetEdge(dfwdp_1 outside dfwdp_3) 0.5 chainEdges)

Executing: dfwdp_dn_s = geomSize(geomGetEdge(dfwdp_ntap outside dfwdp_3) 0.5 chainEdges)

Executing: err_M_DF_a = geomAndNot(geomOr(dfwdp_dn_s dfwdp_dp_s) diff)
	   errorLayer(err_M_DF_a "M_DF : Predefined area must have DIFF")

Executing: dfwdp_tub_ch_s = geomSize(dfwdp_tub_ch 0.5)

Executing: err_M_NC_a = geomAndNot(dfwdp_tub_ch_s dnc)
	   errorLayer(err_M_NC_a "M_NC : Predefined area must have DNC")

Executing: err_M_HN_a = geomAndNot(dfwdp_tub_ch_s hvnwell)
	   errorLayer(err_M_HN_a "M_HN : Predefined area must have HVNWELL")

Executing: dfwdp_tub_ch_s1 = geomSize(dfwdp_tub_ch 1.0)

Executing: err_N_HN_a = geomAnd(geomAndNot(dfwdp_tub_ch_s1 dfwdp_tub_ch_s) hvnwell)
	   errorLayer(err_N_HN_a "N_HN : Predefined area must not have HVNWELL")

Executing: err_N_NB_a = geomAnd(dfwdp_tub_ch_s nbur)
	   errorLayer(err_N_NB_a "N_NB : Predefined area must not have NBUR")

Executing: err_N_SB_a = geomAnd(dfwdp_tub_ch_s sblk)
	   errorLayer(err_N_SB_a "N_SB : Predefined area must not have SBLK")

Executing: err_M_MV_a = geomAndNot(dfwdp_tub_ch_s mv)
	   errorLayer(err_M_MV_a "M_MV : Predefined area must have MV")

Executing: dpp6_62 = geomSize(geomGetEdge(dpp6 outside dti) 1.42)

Executing: dpp6_63 = geomAndNot(dpp6_62 dpp6_61)

Executing: dpp6_64 = geomSize(geomGetEdge(dpp6 outside dti) 0.82)

Executing: dpp6_sblk0 = geomOr(dpp6_64 dpp6_33)

Executing: dpp6_sblk1 = geomSize(geomGetEdge(dpp6_sblk0 butting dti) 0.5)

Executing: dpp6_sblk = geomOr(dpp6_sblk0 dpp6_sblk1)

Executing: err_M_DN_b = geomAndNot(dpp6_63 ndif)
	   errorLayer(err_M_DN_b "M_DN : Predefined area must have NDIFF")

Executing: err_N_DN_b = geomAnd(dpp6_61 ndif)
	   errorLayer(err_N_DN_b "N_DN : Predefined area must not have NDIFF")

Executing: err_N_DP_b = geomAnd(dpp6_61 pdif)
	   errorLayer(err_N_DP_b "N_DP : Predefined area must not have PDIFF")

Executing: err_M_SB_b = geomAndNot(dpp6_sblk sblk)
	   errorLayer(err_M_SB_b "M_SB : Predefined area must have SBLK")

Executing: err_N_SB_b = geomAnd(geomAndNot(dpp6_tub_s1 dpp6_sblk) sblk)
	   errorLayer(err_N_SB_b "N_SB : Predefined area must not have SBLK")

Executing: err_M_DT_b = geomGetEdge(dpp6_tub outside dti)
	   errorLayer(err_M_DT_b "M_DT : Predefined area must have DTI")

Executing: err_M_DF_b = geomAndNot(dpp6_tub_s1 diff)
	   errorLayer(err_M_DF_b "M_DF : Predefined area must have DIFF")

Executing: err_M_NC_b = geomAndNot(dpp6_tub_s1 dnc)
	   errorLayer(err_M_NC_b "M_NC : Predefined area must have DNC")

Executing: err_M_HN_b = geomAndNot(dpp6_tub_s1 hvnwell)
	   errorLayer(err_M_HN_b "M_HN : Predefined area must have HVNWELL")

Executing: err_N_NB_b = geomAnd(dpp6_tub_s1 nbur)
	   errorLayer(err_N_NB_b "N_NB : Predefined area must not have NBUR")

Executing: err_M_MV_b = geomAndNot(dpp6_tub_s1 mv)
	   errorLayer(err_M_MV_b "M_MV : Predefined area must have MV")

Executing: dpp7_s3 = geomSize(dpp7 0.94)

Executing: dpp7_10 = geomAndNot(dpp7_s3 dpp7_2)

Executing: err_M_DN_c = geomAndNot(dpp7_10 ndiff)
	   errorLayer(err_M_DN_c "M_DN : Predefined area must have NDIFF")

Executing: dpp7_11 = geomAndNot(dpp7_s1 dpp7_2)

Executing: err_M_DF_c = geomAndNot(dpp7_11 diff)
	   errorLayer(err_M_DF_c "M_DF : Predefined area must have DIFF")

Executing: dpp7_12 = geomAndNot(dpp7_s3 geomOr(dpp7 dpp7_10))

Executing: err_N_DF_c = geomAnd(dpp7_12 diff)
	   errorLayer(err_N_DF_c "N_DF : Predefined area must not have DIFF")

Executing: err_M_DT_c = geomGetEdge(dpp7_s3 outside dti)
	   errorLayer(err_M_DT_c "M_DT : Predefined area must have DTI")

Executing: err_M_NC_c = geomAndNot(dpp7_s1 dnc)
	   errorLayer(err_M_NC_c "M_NC : Predefined area must have DNC")

Executing: err_M_HN_c = geomAndNot(dpp7_s1 hvnwell)
	   errorLayer(err_M_HN_c "M_HN : Predefined area must have HVNWELL")

Executing: err_N_NB_c = geomAnd(dpp7_s1 nbur)
	   errorLayer(err_N_NB_c "N_NB : Predefined area must not have NBUR")

Executing: err_M_MV_c = geomAndNot(dpp7_s1 mv)
	   errorLayer(err_M_MV_c "M_MV : Predefined area must have MV")

Executing: dnp7_s3 = geomSize(dnp7 0.94)

Executing: dnp7_10 = geomAndNot(dnp7_s3 dnp7_2)

Executing: err_M_DP_d = geomAndNot(dnp7_10 pdiff)
	   errorLayer(err_M_DP_d "M_DP : Predefined area must have PDIFF")

Executing: dnp7_11 = geomAndNot(dnp7_s1 dnp7_2)

Executing: err_M_DF_d = geomAndNot(dnp7_11 diff)
	   errorLayer(err_M_DF_d "M_DF : Predefined area must have DIFF")

Executing: dnp7_12 = geomAndNot(dnp7_s3 geomOr(dnp7 dnp7_10))

Executing: err_N_DF_d = geomAnd(dnp7_12 diff)
	   errorLayer(err_N_DF_d "N_DF : Predefined area must not have DIFF")

Executing: err_M_DT_d = geomGetEdge(dnp7_s3 outside dti)
	   errorLayer(err_M_DT_d "M_DT : Predefined area must have DTI")

Executing: err_M_PC_d = geomAndNot(dnp7_s1 dpc)
	   errorLayer(err_M_PC_d "M_PC : Predefined area must have DPC")

Executing: err_N_NB_d = geomAnd(dnp7_s1 nbur)
	   errorLayer(err_N_NB_d "N_NB : Predefined area must not have NBUR")

Executing: err_N_SB_d = geomAnd(dnp7_s1 sblk)
	   errorLayer(err_N_SB_d "N_SB : Predefined area must not have SBLK")

Executing: err_M_MV_d = geomAndNot(dnp7_s1 mv)
	   errorLayer(err_M_MV_d "M_MV : Predefined area must have MV")

Executing: err_B2DF = geomOr(ds5)
	   errorLayer(err_B2DF "B2DF : ds5 is not allowed")

Executing: d0_ds5 = geomEnclose(d_ds23 ds5_all)

Executing: d1_ds5 = geomSize(geomGetLength(geomGetEdge(d0_ds5 butting gate) (keep == 1.2...

Executing: d2_ds5 = geomOr(d0_ds5 d1_ds5)

Executing: d3_ds5 = geomSize(geomGetLength(d2_ds5 (keep > 1.24)) 1.24)

Executing: d4_ds5 = geomOr(d2_ds5 d3_ds5)

Executing: d5_ds5 = geomSize(d4_ds5 0.5)

Executing: d6_ds5 = geomSize(d2_ds5 0.74)

Executing: err_M_DT_e = geomGetEdge(d4_ds5 outside dti)
	   errorLayer(err_M_DT_e "M_DT : Predefined area must have DTI")

Executing: err_M_HN_e = geomAndNot(d5_ds5 hvnwell)
	   errorLayer(err_M_HN_e "M_HN : Predefined area must have HVNWELL")

Executing: err_M_MV_e = geomAndNot(d5_ds5 mv)
	   errorLayer(err_M_MV_e "M_MV : Predefined area must have MV")

Executing: err_N_NB_e = geomAnd(d5_ds5 nbur)
	   errorLayer(err_N_NB_e "N_NB : Predefined area must not have NBUR")

Executing: err_N_DF_e = geomAnd(geomAndNot(d6_ds5 ds5_s0) diff)
	   errorLayer(err_N_DF_e "N_DF : Predefined area must not have DIFF")

Executing: err_M_DN_e = geomAndNot(geomAndNot(d5_ds5 d6_ds5) geomAnd(diff nimp))
	   errorLayer(err_M_DN_e "M_DN : Predefined area must have NDIFF")

Executing: err_N_M1 = geomAnd(locked_m1n met1dg)
	   errorLayer(err_N_M1 "N_M1 : Predefined area must not have MET1")

Executing: err_N_M2 = geomAnd(locked_m2n met2dg)
	   errorLayer(err_N_M2 "N_M2 : Predefined area must not have MET2")

Executing: err_N_M3 = geomAnd(locked_m3n met3dg)
	   errorLayer(err_N_M3 "N_M3 : Predefined area must not have MET3")

Executing: err_B1YD = geomAnd(diff_dy diff_dg)
	   errorLayer(err_B1YD "B1YD : DIFFDUMMY overlap of DIFF is not allowed")

Executing: err_B2YD = geomAnd(diff_dy implant)
	   errorLayer(err_B2YD "B2YD : DIFFDUMMY overlap of NIMP or PIMP is not allowed")

Executing: err_B3YD = geomAnd(diff_dy cont)
	   errorLayer(err_B3YD "B3YD : DIFFDUMMY overlap of CONT is not allowed")

Executing: err_B4YD = geomAnd(diff_dy pad_nblk)
	   errorLayer(err_B4YD "B4YD : DIFFDUMMY overlap of PAD is not allowed")

Executing: err_B5YD = geomAnd(diff_dy sblk)
	   errorLayer(err_B5YD "B5YD : DIFFDUMMY overlap of SBLK is not allowed")

Executing: err_B7YD = geomAnd(diff_dy dti)
	   errorLayer(err_B7YD "B7YD : DIFFDUMMY overlap of DTI is not allowed")

Executing: err_B8YD = geomAnd(diff_dy sjpn)
	   errorLayer(err_B8YD "B8YD : DIFFDUMMY overlap of SJPN is not allowed")

Executing: err_B9YD = geomAnd(diff_dy sjnp)
	   errorLayer(err_B9YD "B9YD : DIFFDUMMY overlap of SJNP is not allowed")

Executing: err_B10YD = geomAnd(diff_dy nbuf)
	   errorLayer(err_B10YD "B10YD : DIFFDUMMY overlap of NBUF is not allowed")

Executing: err_B11YD = geomAnd(diff_dy pzener)
	   errorLayer(err_B11YD "B11YD : DIFFDUMMY overlap of PZENER is not allowed")

Executing: err_B12YD = geomAnd(diff_dy nzener)
	   errorLayer(err_B12YD "B12YD : DIFFDUMMY overlap of NZENER is not allowed")

Executing: err_S1YD = drc(diff_dy (sepNotch < 0.5))
	   errorLayer(err_S1YD "S1YD : Minimum DIFFDUMMY spacing/notch = 0.5")

Executing: err_W1YD = drc(diff_dy (width < 0.4))
	   errorLayer(err_W1YD "W1YD : Minimum DIFFDUMMY width = 0.4")

Executing: err_S1YDDT = drc(diff_dy dti (sep < 1.0))
	   errorLayer(err_S1YDDT "S1YDDT : Minimum DIFFDUMMY spacing to DTI = 1.0")

Executing: err_S1YDDF = drc(diff_dy diff_dg (sep < 3.0))
	   errorLayer(err_S1YDDF "S1YDDF : Minimum DIFFDUMMY spacing to DIFF = 3.0")

Executing: err_S1YDIN = drc(diff_dy nimp (sep < 0.3))
	   errorLayer(err_S1YDIN "S1YDIN : Minimum DIFFDUMMY spacing to NIMP = 0.3")

Executing: err_S1YDIP = drc(diff_dy pimp (sep < 0.3))
	   errorLayer(err_S1YDIP "S1YDIP : Minimum DIFFDUMMY spacing to PIMP = 0.3")

Executing: err_S1YDP1 = drc(diff_dy polydg (sep < 3.0))
	   errorLayer(err_S1YDP1 "S1YDP1 : Minimum DIFFDUMMY spacing to POLY1 = 3.0")

Executing: err_S1YDPA = drc(diff_dy pad_nblk (sep < 5.0))
	   errorLayer(err_S1YDPA "S1YDPA : Minimum DIFFDUMMY spacing to PAD = 5.0")

Executing: err_S1YDSB = drc(diff_dy sblk (sep < 3.0))
	   errorLayer(err_S1YDSB "S1YDSB : Minimum DIFFDUMMY spacing to SBLK = 3.0")

Executing: err_S1YDPI = drc(diff_dy apwell1 (sep < 5.0))
	   errorLayer(err_S1YDPI "S1YDPI : Minimum DIFFDUMMY spacing to PW4DMY = 5.0")

Executing: err_S1YDNW = drc(diff_dy anwell1 (sep < 5.0))
	   errorLayer(err_S1YDNW "S1YDNW : Minimum DIFFDUMMY spacing to NW4DMY = 5.0")

Executing: err_S1YDNT = drc(diff_dy sjnp (sep < 5.0))
	   errorLayer(err_S1YDNT "S1YDNT : Minimum DIFFDUMMY spacing to SJNP = 5.0")

Executing: err_S1YDPT = drc(diff_dy sjpn (sep < 5.0))
	   errorLayer(err_S1YDPT "S1YDPT : Minimum DIFFDUMMY spacing to SJPN = 5.0")

Executing: err_S1YDNF = drc(diff_dy nbuf (sep < 5.0))
	   errorLayer(err_S1YDNF "S1YDNF : Minimum DIFFDUMMY spacing to NBUF = 5.0")

Executing: err_S1YDNZ = drc(diff_dy nzener (sep < 5.0))
	   errorLayer(err_S1YDNZ "S1YDNZ : Minimum DIFFDUMMY spacing to NZENER = 5.0")

Executing: err_S1YDPZ = drc(diff_dy pzener (sep < 5.0))
	   errorLayer(err_S1YDPZ "S1YDPZ : Minimum DIFFDUMMY spacing to PZENER = 5.0")

Executing: err_E1YDPI = drc(apwell1 diff_dy (enc < 5.0))
	   errorLayer(err_E1YDPI "E1YDPI : Minimum PW4DMY enclosure of DIFFDUMMY = 5.0")

Executing: err_E1YDNW = drc(anwell1 diff_dy (enc < 5.0))
	   errorLayer(err_E1YDNW "E1YDNW : Minimum NW4DMY enclosure of DIFFDUMMY = 5.0")

Executing: err_S10YD = drc(diff_dy lock (sep < 3.6))
	   errorLayer(err_S10YD "S10YD : Minimum DIFFDUMMY spacing to LOCKED = 3.6")

Executing: err_S11YD = drc(diff_dy lock1 (sep < 3.6))
	   errorLayer(err_S11YD "S11YD : Minimum DIFFDUMMY spacing to LOCKED1 = 3.6")

Executing: err_S12YD = drc(diff_dy lock2 (sep < 3.6))
	   errorLayer(err_S12YD "S12YD : Minimum DIFFDUMMY spacing to LOCKED2 = 3.6")

Executing: err_S13YD = drc(diff_dy lock3 (sep < 3.6))
	   errorLayer(err_S13YD "S13YD : Minimum DIFFDUMMY spacing to LOCKED3 = 3.6")

Executing: err_S14YD = drc(diff_dy lock4 (sep < 3.6))
	   errorLayer(err_S14YD "S14YD : Minimum DIFFDUMMY spacing to LOCKED4 = 3.6")

Executing: err_A1YD = drc(diff_dy (area < 1.2))
	   errorLayer(err_A1YD "A1YD : Minimum DIFFDUMMY area = 1.2")

Executing: err_B1YP = geomGetNonRectangle(poly_dy)
	   errorLayer(err_B1YP "B1YP : Only rectangular P1DUMMY is allowed")

Executing: err_B2YP = geomAnd(poly_dy polydg)
	   errorLayer(err_B2YP "B2YP : P1DUMMY overlap of POLY1 is not allowed")

Executing: err_B3YP = geomAnd(poly_dy cont)
	   errorLayer(err_B3YP "B3YP : P1DUMMY overlap of CONT is not allowed")

Executing: err_B4YP = geomAnd(poly_dy pad_nblk)
	   errorLayer(err_B4YP "B4YP : P1DUMMY overlap of PAD is not allowed")

Executing: err_B5YP = geomAnd(poly_dy sblk)
	   errorLayer(err_B5YP "B5YP : P1DUMMY overlap of SBLK is not allowed")

Executing: err_B6YP = geomAnd(poly_dy geomOr(hres mres))
	   errorLayer(err_B6YP "B6YP : P1DUMMY overlap of MRES or HRES is not allowed")

Executing: err_B7YP = geomAnd(poly_dy dti)
	   errorLayer(err_B7YP "B7YP : P1DUMMY overlap of DTI is not allowed")

Executing: err_B8YP = geomAnd(poly_dy sjpn)
	   errorLayer(err_B8YP "B8YP : P1DUMMY overlap of SJPN is not allowed")

Executing: err_B9YP = geomAnd(poly_dy sjnp)
	   errorLayer(err_B9YP "B9YP : P1DUMMY overlap of SJNP is not allowed")

Executing: err_B10YP = geomAnd(poly_dy nbuf)
	   errorLayer(err_B10YP "B10YP : P1DUMMY overlap of NBUF is not allowed")

Executing: err_B11YP = geomAnd(poly_dy pzener)
	   errorLayer(err_B11YP "B11YP : P1DUMMY overlap of PZENER is not allowed")

Executing: err_B12YP = geomAnd(poly_dy nzener)
	   errorLayer(err_B12YP "B12YP : P1DUMMY overlap of NZENER is not allowed")

Executing: err_W1YP = drc(poly_dy (width < 1.0))
	   errorLayer(err_W1YP "W1YP : Minimum P1DUMMY width = 1.0")

Executing: err_S1YP = drc(poly_dy (sep < 1.0))
	   errorLayer(err_S1YP "S1YP : Minimum P1DUMMY spacing = 1.0")

Executing: err_S1YPP1 = drc(poly_dy polydg (sep < 3.0))
	   errorLayer(err_S1YPP1 "S1YPP1 : Minimum P1DUMMY spacing to POLY1 = 3.0")

Executing: err_S1YPDF = drc(poly_dy diff_dg (sep < 3.0))
	   errorLayer(err_S1YPDF "S1YPDF : Minimum P1DUMMY spacing to DIFF = 3.0")

Executing: err_S1YPDT = drc(poly_dy dti (sep < 1.0))
	   errorLayer(err_S1YPDT "S1YPDT : Minimum P1DUMMY spacing to DTI = 1.0")

Executing: err_S1YPYD = drc(poly_dy diff_dy (sep < 0.4))
	   errorLayer(err_S1YPYD "S1YPYD : Minimum P1DUMMY spacing to DIFFDUMMY = 0.4")

Executing: err_S1YPPA = drc(poly_dy pad_nblk (sep < 5.0))
	   errorLayer(err_S1YPPA "S1YPPA : Minimum P1DUMMY spacing to PAD = 5.0")

Executing: err_S1YPSB = drc(poly_dy sblk (sep < 3.0))
	   errorLayer(err_S1YPSB "S1YPSB : Minimum P1DUMMY spacing to SBLK = 3.0")

Executing: err_S1YPPI = drc(poly_dy apwell1 (sep < 5.0))
	   errorLayer(err_S1YPPI "S1YPPI : Minimum P1DUMMY spacing to PW4DMY = 5.0")

Executing: err_S1YPNW = drc(poly_dy anwell1 (sep < 5.0))
	   errorLayer(err_S1YPNW "S1YPNW : Minimum P1DUMMY spacing to NW4DMY = 5.0")

Executing: err_S1YPNT = drc(poly_dy sjnp (sep < 5.0))
	   errorLayer(err_S1YPNT "S1YPNT : Minimum P1DUMMY spacing to SJNP = 5.0")

Executing: err_S1YPPT = drc(poly_dy sjpn (sep < 5.0))
	   errorLayer(err_S1YPPT "S1YPPT : Minimum P1DUMMY spacing to SJPN = 5.0")

Executing: err_S1YPNF = drc(poly_dy nbuf (sep < 5.0))
	   errorLayer(err_S1YPNF "S1YPNF : Minimum P1DUMMY spacing to NBUF = 5.0")

Executing: err_S1YPNZ = drc(poly_dy nzener (sep < 5.0))
	   errorLayer(err_S1YPNZ "S1YPNZ : Minimum P1DUMMY spacing to NZENER = 5.0")

Executing: err_S1YPPZ = drc(poly_dy pzener (sep < 5.0))
	   errorLayer(err_S1YPPZ "S1YPPZ : Minimum P1DUMMY spacing to PZENER = 5.0")

Executing: err_E1YPPI = drc(apwell1 poly_dy (enc < 5.0))
	   errorLayer(err_E1YPPI "E1YPPI : Minimum PW4DMY enclosure of P1DUMMY = 5.0")

Executing: err_E1YPNW = drc(anwell1 poly_dy (enc < 5.0))
	   errorLayer(err_E1YPNW "E1YPNW : Minimum NW4DMY enclosure of P1DUMMY = 5.0")

Executing: err_S10YP = drc(poly_dy lock (sep < 3.6))
	   errorLayer(err_S10YP "S10YP : Minimum P1DUMMY spacing to LOCKED = 3.6")

Executing: err_S11YP = drc(poly_dy lock1 (sep < 3.6))
	   errorLayer(err_S11YP "S11YP : Minimum P1DUMMY spacing to LOCKED1 = 3.6")

Executing: err_S12YP = drc(poly_dy lock2 (sep < 3.6))
	   errorLayer(err_S12YP "S12YP : Minimum P1DUMMY spacing to LOCKED2 = 3.6")

Executing: err_S13YP = drc(poly_dy lock3 (sep < 3.6))
	   errorLayer(err_S13YP "S13YP : Minimum P1DUMMY spacing to LOCKED3 = 3.6")

Executing: err_S14YP = drc(poly_dy lock4 (sep < 3.6))
	   errorLayer(err_S14YP "S14YP : Minimum P1DUMMY spacing to LOCKED4 = 3.6")

Executing: err_B1Y1 = geomGetNonRectangle(met1_dy)
	   errorLayer(err_B1Y1 "B1Y1 : Only rectangular M1DUMMY is allowed")

Executing: err_B2Y1 = geomAnd(met1_dy met1dg)
	   errorLayer(err_B2Y1 "B2Y1 : M1DUMMY overlap of MET1 is not allowed")

Executing: err_B3Y1 = geomAnd(met1_dy geomOr(cont via1))
	   errorLayer(err_B3Y1 "B3Y1 : M1DUMMY overlap of CONT or VIA1 is not allowed")

Executing: err_B4Y1 = geomAnd(met1_dy hres)
	   errorLayer(err_B4Y1 "B4Y1 : M1DUMMY overlap of HRES is not allowed")

Executing: err_B5Y1 = geomAnd(met1_dy dti)
	   errorLayer(err_B5Y1 "B5Y1 : M1DUMMY overlap of DTI is not allowed")

Executing: err_W1Y1 = drc(met1_dy (width < 2.0))
	   errorLayer(err_W1Y1 "W1Y1 : Minimum M1DUMMY width = 2.0")

Executing: err_W2Y1 = geomGetLength(met1_dy (keep > 20.0))
	   errorLayer(err_W2Y1 "W2Y1 : Maximum M1DUMMY edge length = 20.0")

Executing: err_S1Y1 = drc(met1_dy (sep < 2.0))
	   errorLayer(err_S1Y1 "S1Y1 : Minimum M1DUMMY spacing = 2.0")

Executing: err_S1Y1M1 = drc(met1_dy met1dg (sep < 4.0))
	   errorLayer(err_S1Y1M1 "S1Y1M1 : Minimum M1DUMMY spacing to MET1 = 4.0")

Executing: err_S10Y1 = drc(met1_dy lock (sep < 4.0))
	   errorLayer(err_S10Y1 "S10Y1 : Minimum M1DUMMY spacing to LOCKED = 4.0")

Executing: err_S11Y1 = drc(met1_dy lock1 (sep < 4.0))
	   errorLayer(err_S11Y1 "S11Y1 : Minimum M1DUMMY spacing to LOCKED1 = 4.0")

Executing: err_S12Y1 = drc(met1_dy lock2 (sep < 4.0))
	   errorLayer(err_S12Y1 "S12Y1 : Minimum M1DUMMY spacing to LOCKED2 = 4.0")

Executing: err_S13Y1 = drc(met1_dy lock3 (sep < 4.0))
	   errorLayer(err_S13Y1 "S13Y1 : Minimum M1DUMMY spacing to LOCKED3 = 4.0")

Executing: err_S14Y1 = drc(met1_dy lock4 (sep < 4.0))
	   errorLayer(err_S14Y1 "S14Y1 : Minimum M1DUMMY spacing to LOCKED4 = 4.0")

Executing: err_S1Y1HR = drc(met1_dy hres (sep < 5.0))
	   errorLayer(err_S1Y1HR "S1Y1HR : Minimum M1DUMMY spacing to HRES = 5.0")

Executing: err_S1Y1DT = drc(met1_dy dti (sep < 0.5))
	   errorLayer(err_S1Y1DT "S1Y1DT : Minimum M1DUMMY spacing to DTI = 0.5")

Executing: err_B1Y2 = geomGetNonRectangle(met2_dy)
	   errorLayer(err_B1Y2 "B1Y2 : Only rectangular M2DUMMY is allowed")

Executing: err_B2Y2 = geomAnd(met2_dy met2dg)
	   errorLayer(err_B2Y2 "B2Y2 : M2DUMMY overlap of MET2 is not allowed")

Executing: err_B3Y2V1 = geomAnd(met2_dy via1)
	   errorLayer(err_B3Y2V1 "B3Y2V1 : M2DUMMY overlap of VIA1 is not allowed")

Executing: err_B3Y2V2 = geomAnd(met2_dy via2)
	   errorLayer(err_B3Y2V2 "B3Y2V2 : M2DUMMY overlap of VIA2 is not allowed")

Executing: err_W1Y2 = drc(met2_dy (width < 2.0))
	   errorLayer(err_W1Y2 "W1Y2 : Minimum M2DUMMY width = 2.0")

Executing: err_W2Y2 = geomGetLength(met2_dy (keep > 20.0))
	   errorLayer(err_W2Y2 "W2Y2 : Maximum M2DUMMY edge length = 20.0")

Executing: err_S1Y2 = drc(met2_dy (sep < 2.0))
	   errorLayer(err_S1Y2 "S1Y2 : Minimum M2DUMMY spacing = 2.0")

Executing: err_S1Y2M2 = drc(met2_dy met2dg (sep < 4.0))
	   errorLayer(err_S1Y2M2 "S1Y2M2 : Minimum M2DUMMY spacing to MET2 = 4.0")

Executing: err_S10Y2 = drc(met2_dy lock (sep < 4.0))
	   errorLayer(err_S10Y2 "S10Y2 : Minimum M2DUMMY spacing to LOCKED = 4.0")

Executing: err_S11Y2 = drc(met2_dy lock1 (sep < 4.0))
	   errorLayer(err_S11Y2 "S11Y2 : Minimum M2DUMMY spacing to LOCKED1 = 4.0")

Executing: err_S12Y2 = drc(met2_dy lock2 (sep < 4.0))
	   errorLayer(err_S12Y2 "S12Y2 : Minimum M2DUMMY spacing to LOCKED2 = 4.0")

Executing: err_S13Y2 = drc(met2_dy lock3 (sep < 4.0))
	   errorLayer(err_S13Y2 "S13Y2 : Minimum M2DUMMY spacing to LOCKED3 = 4.0")

Executing: err_S14Y2 = drc(met2_dy lock4 (sep < 4.0))
	   errorLayer(err_S14Y2 "S14Y2 : Minimum M2DUMMY spacing to LOCKED4 = 4.0")

Executing: err_B1Y3 = geomGetNonRectangle(met3_dy)
	   errorLayer(err_B1Y3 "B1Y3 : Only rectangular M3DUMMY is allowed")

Executing: err_B2Y3 = geomAnd(met3_dy met3dg)
	   errorLayer(err_B2Y3 "B2Y3 : M3DUMMY overlap of MET3 is not allowed")

Executing: err_B3Y3V2 = geomAnd(met3_dy via2)
	   errorLayer(err_B3Y3V2 "B3Y3V2 : M3DUMMY overlap of VIA2 is not allowed")

Executing: err_B3Y3V3 = geomAnd(met3_dy via3)
	   errorLayer(err_B3Y3V3 "B3Y3V3 : M3DUMMY overlap of VIA3 is not allowed")

Executing: err_W1Y3 = drc(met3_dy (width < 2.0))
	   errorLayer(err_W1Y3 "W1Y3 : Minimum M3DUMMY width = 2.0")

Executing: err_W2Y3 = geomGetLength(met3_dy (keep > 20.0))
	   errorLayer(err_W2Y3 "W2Y3 : Maximum M3DUMMY edge length = 20.0")

Executing: err_S1Y3 = drc(met3_dy (sep < 2.0))
	   errorLayer(err_S1Y3 "S1Y3 : Minimum M3DUMMY spacing = 2.0")

Executing: err_S1Y3M3 = drc(met3_dy met3dg (sep < 4.0))
	   errorLayer(err_S1Y3M3 "S1Y3M3 : Minimum M3DUMMY spacing to MET3 = 4.0")

Executing: err_S10Y3 = drc(met3_dy lock (sep < 4.0))
	   errorLayer(err_S10Y3 "S10Y3 : Minimum M3DUMMY spacing to LOCKED = 4.0")

Executing: err_S11Y3 = drc(met3_dy lock1 (sep < 4.0))
	   errorLayer(err_S11Y3 "S11Y3 : Minimum M3DUMMY spacing to LOCKED1 = 4.0")

Executing: err_S12Y3 = drc(met3_dy lock2 (sep < 4.0))
	   errorLayer(err_S12Y3 "S12Y3 : Minimum M3DUMMY spacing to LOCKED2 = 4.0")

Executing: err_S13Y3 = drc(met3_dy lock3 (sep < 4.0))
	   errorLayer(err_S13Y3 "S13Y3 : Minimum M3DUMMY spacing to LOCKED3 = 4.0")

Executing: err_B1Y4 = geomGetNonRectangle(met4_dy)
	   errorLayer(err_B1Y4 "B1Y4 : Only rectangular M4DUMMY is allowed")

Executing: err_B2Y4 = geomAnd(met4_dy met4dg)
	   errorLayer(err_B2Y4 "B2Y4 : M4DUMMY overlap of MET4 is not allowed")

Executing: err_B3Y4V3 = geomAnd(met4_dy via3)
	   errorLayer(err_B3Y4V3 "B3Y4V3 : M4DUMMY overlap of VIA3 is not allowed")

Executing: err_B3Y4VT = geomAnd(met4_dy vtp)
	   errorLayer(err_B3Y4VT "B3Y4VT : M4DUMMY overlap of VIATP is not allowed")

Executing: err_W1Y4 = drc(met4_dy (width < 2.0))
	   errorLayer(err_W1Y4 "W1Y4 : Minimum M4DUMMY width = 2.0")

Executing: err_W2Y4 = geomGetLength(met4_dy (keep > 20.0))
	   errorLayer(err_W2Y4 "W2Y4 : Maximum M4DUMMY edge length = 20.0")

Executing: err_S1Y4 = drc(met4_dy (sep < 2.0))
	   errorLayer(err_S1Y4 "S1Y4 : Minimum M4DUMMY spacing = 2.0")

Executing: err_S1Y4M4 = drc(met4_dy met4dg (sep < 4.0))
	   errorLayer(err_S1Y4M4 "S1Y4M4 : Minimum M4DUMMY spacing to MET4 = 4.0")

Executing: err_S10Y4 = drc(met4_dy lock (sep < 4.0))
	   errorLayer(err_S10Y4 "S10Y4 : Minimum M4DUMMY spacing to LOCKED = 4.0")

Executing: err_S11Y4 = drc(met4_dy lock1 (sep < 4.0))
	   errorLayer(err_S11Y4 "S11Y4 : Minimum M4DUMMY spacing to LOCKED1 = 4.0")

Executing: err_S12Y4 = drc(met4_dy lock2 (sep < 4.0))
	   errorLayer(err_S12Y4 "S12Y4 : Minimum M4DUMMY spacing to LOCKED2 = 4.0")

Executing: err_B1YT = geomGetNonRectangle(mtp_dy)
	   errorLayer(err_B1YT "B1YT : Only rectangular MTPDUMMY is allowed")

Executing: err_B2YT = geomAnd(mtp_dy mtpdg)
	   errorLayer(err_B2YT "B2YT : MTPDUMMY overlap of METTP is not allowed")

Executing: err_B3YTVT = geomAnd(mtp_dy vtp)
	   errorLayer(err_B3YTVT "B3YTVT : MTPDUMMY overlap of VIATP is not allowed")

Executing: err_B3YTVL = geomAnd(mtp_dy vtpl)
	   errorLayer(err_B3YTVL "B3YTVL : MTPDUMMY overlap of VIATPL is not allowed")

Executing: err_W1YT = drc(mtp_dy (width < 2.0))
	   errorLayer(err_W1YT "W1YT : Minimum MTPDUMMY width = 2.0")

Executing: err_W2YT = geomGetLength(mtp_dy (keep > 20.0))
	   errorLayer(err_W2YT "W2YT : Maximum MTPDUMMY edge length = 20.0")

Executing: err_S1YT = drc(mtp_dy (sep < 2.0))
	   errorLayer(err_S1YT "S1YT : Minimum MTPDUMMY spacing = 2.0")

Executing: err_S1YTMT = drc(mtp_dy mtpdg (sep < 2.0))
	   errorLayer(err_S1YTMT "S1YTMT : Minimum MTPDUMMY spacing to METTP = 2.0")

Executing: err_S1YTPA = drc(mtp_dy pad (sep < 5.0))
	   errorLayer(err_S1YTPA "S1YTPA : Minimum MTPDUMMY spacing to PAD = 5.0")

Executing: err_S10YT = drc(mtp_dy lock (sep < 2.0))
	   errorLayer(err_S10YT "S10YT : Minimum MTPDUMMY spacing to LOCKED = 2.0")

Executing: err_S11YT = drc(mtp_dy lock1 (sep < 2.0))
	   errorLayer(err_S11YT "S11YT : Minimum MTPDUMMY spacing to LOCKED1 = 2.0")

Executing: err_B1YL = geomGetNonRectangle(mtpl_dy)
	   errorLayer(err_B1YL "B1YL : Only rectangular MTPLDUMMY is allowed")

Executing: err_B2YL = geomAnd(mtpl_dy mtpldg)
	   errorLayer(err_B2YL "B2YL : MTPLDUMMY overlap of METTPL is not allowed")

Executing: err_B3YLVL = geomAnd(mtpl_dy vtpl)
	   errorLayer(err_B3YLVL "B3YLVL : MTPLDUMMY overlap of VIATPL is not allowed")

Executing: err_W1YL = drc(mtpl_dy (width < 5.0))
	   errorLayer(err_W1YL "W1YL : Minimum MTPLDUMMY width = 5.0")

Executing: err_W2YL = geomGetLength(mtpl_dy (keep > 20.0))
	   errorLayer(err_W2YL "W2YL : Maximum MTPLDUMMY edge length = 20.0")

Executing: err_S1YL = drc(mtpl_dy (sep < 5.0))
	   errorLayer(err_S1YL "S1YL : Minimum MTPLDUMMY spacing = 5.0")

Executing: err_S1YLML = drc(mtpl_dy mtpldg (sep < 5.0))
	   errorLayer(err_S1YLML "S1YLML : Minimum MTPLDUMMY spacing to METTPL = 5.0")

Executing: err_S10YL = drc(mtpl_dy lock (sep < 5.0))
	   errorLayer(err_S10YL "S10YL : Minimum MTPLDUMMY spacing to LOCKED = 5.0")

Executing: polytrm_dg = geomAnd(polytrm polydg)

Executing: geomStamp(polytrm_dg polytrm)

Executing: met1trm_dg = geomAnd(met1trm met1dg)

Executing: geomStamp(met1trm_dg met1trm)

Executing: met2trm_dg = geomAnd(met2trm met2dg)

Executing: geomStamp(met2trm_dg met2trm)

Executing: p1_v200 = geomGetTexted(polytrm_dg hvpoly_l "tag_200v" "TAG_200V")

Executing: p1_v100 = geomGetTexted(polytrm_dg hvpoly_l "tag_100v" "TAG_100V")

Executing: p1_v60 = geomGetTexted(polytrm_dg hvpoly_l "tag_60v" "TAG_60V")

Executing: p1_v25 = geomGetTexted(polytrm_dg hvpoly_l "tag_25v" "TAG_25V")

Executing: m1_v200 = geomGetTexted(met1trm_dg hvmet1_l "tag_200v" "TAG_200V")

Executing: m1_v100 = geomGetTexted(met1trm_dg hvmet1_l "tag_100v" "TAG_100V")

Executing: m1_v60 = geomGetTexted(met1trm_dg hvmet1_l "tag_60v" "TAG_60V")

Executing: m1_v25 = geomGetTexted(met1trm_dg hvmet1_l "tag_25v" "TAG_25V")

Executing: m2_v200 = geomGetTexted(met2trm_dg hvmet2_l "tag_200v" "TAG_200V")

Executing: m2_v100 = geomGetTexted(met2trm_dg hvmet2_l "tag_100v" "TAG_100V")

Executing: m2_v60 = geomGetTexted(met2trm_dg hvmet2_l "tag_60v" "TAG_60V")

Executing: m2_v25 = geomGetTexted(met2trm_dg hvmet2_l "tag_25v" "TAG_25V")

Executing: p1_vm200 = geomGetTexted(polytrm_dg hvpoly_l "tag_m200v" "TAG_M200V")

Executing: p1_vm100 = geomGetTexted(polytrm_dg hvpoly_l "tag_m100v" "TAG_M100V")

Executing: p1_vm60 = geomGetTexted(polytrm_dg hvpoly_l "tag_m60v" "TAG_M60V")

Executing: p1_vm25 = geomGetTexted(polytrm_dg hvpoly_l "tag_m25v" "TAG_M25V")

Executing: m1_vm200 = geomGetTexted(met1trm_dg hvmet1_l "tag_m200v" "TAG_M200V")

Executing: m1_vm100 = geomGetTexted(met1trm_dg hvmet1_l "tag_m100v" "TAG_M100V")

Executing: m1_vm60 = geomGetTexted(met1trm_dg hvmet1_l "tag_m60v" "TAG_M60V")

Executing: m1_vm25 = geomGetTexted(met1trm_dg hvmet1_l "tag_m25v" "TAG_M25V")

Executing: m2_vm200 = geomGetTexted(met2trm_dg hvmet2_l "tag_m200v" "TAG_M200V")

Executing: m2_vm100 = geomGetTexted(met2trm_dg hvmet2_l "tag_m100v" "TAG_M100V")

Executing: m2_vm60 = geomGetTexted(met2trm_dg hvmet2_l "tag_m60v" "TAG_M60V")

Executing: m2_vm25 = geomGetTexted(met2trm_dg hvmet2_l "tag_m25v" "TAG_M25V")

Executing: met3trm_dg = geomAnd(met3trm met3dg)

Executing: geomStamp(met3trm_dg met3trm)

Executing: m3_v200 = geomGetTexted(met3trm_dg hvmet3_l "tag_200v" "TAG_200V")

Executing: m3_v100 = geomGetTexted(met3trm_dg hvmet3_l "tag_100v" "TAG_100V")

Executing: m3_v60 = geomGetTexted(met3trm_dg hvmet3_l "tag_60v" "TAG_60V")

Executing: m3_v25 = geomGetTexted(met3trm_dg hvmet3_l "tag_25v" "TAG_25V")

Executing: m3_vm200 = geomGetTexted(met3trm_dg hvmet3_l "tag_m200v" "TAG_M200V")

Executing: m3_vm100 = geomGetTexted(met3trm_dg hvmet3_l "tag_m100v" "TAG_M100V")

Executing: m3_vm60 = geomGetTexted(met3trm_dg hvmet3_l "tag_m60v" "TAG_M60V")

Executing: m3_vm25 = geomGetTexted(met3trm_dg hvmet3_l "tag_m25v" "TAG_M25V")

Executing: met4trm_dg = geomAnd(met4trm met4dg)

Executing: geomStamp(met4trm_dg met4trm)

Executing: m4_v200 = geomGetTexted(met4trm_dg hvmet4_l "tag_200v" "TAG_200V")

Executing: m4_v100 = geomGetTexted(met4trm_dg hvmet4_l "tag_100v" "TAG_100V")

Executing: m4_v60 = geomGetTexted(met4trm_dg hvmet4_l "tag_60v" "TAG_60V")

Executing: m4_v25 = geomGetTexted(met4trm_dg hvmet4_l "tag_25v" "TAG_25V")

Executing: m4_vm200 = geomGetTexted(met4trm_dg hvmet4_l "tag_m200v" "TAG_M200V")

Executing: m4_vm100 = geomGetTexted(met4trm_dg hvmet4_l "tag_m100v" "TAG_M100V")

Executing: m4_vm60 = geomGetTexted(met4trm_dg hvmet4_l "tag_m60v" "TAG_M60V")

Executing: m4_vm25 = geomGetTexted(met4trm_dg hvmet4_l "tag_m25v" "TAG_M25V")

Executing: mtptrm_dg = geomAnd(mtptrm mtpdg)

Executing: geomStamp(mtptrm_dg mtptrm)

Executing: mt_v200 = geomGetTexted(mtptrm_dg hvmtp_l "tag_200v" "TAG_200V")

Executing: mt_v100 = geomGetTexted(mtptrm_dg hvmtp_l "tag_100v" "TAG_100V")

Executing: mt_v60 = geomGetTexted(mtptrm_dg hvmtp_l "tag_60v" "TAG_60V")

Executing: mt_v25 = geomGetTexted(mtptrm_dg hvmtp_l "tag_25v" "TAG_25V")

Executing: mt_vm200 = geomGetTexted(mtptrm_dg hvmtp_l "tag_m200v" "TAG_M200V")

Executing: mt_vm100 = geomGetTexted(mtptrm_dg hvmtp_l "tag_m100v" "TAG_M100V")

Executing: mt_vm60 = geomGetTexted(mtptrm_dg hvmtp_l "tag_m60v" "TAG_M60V")

Executing: mt_vm25 = geomGetTexted(mtptrm_dg hvmtp_l "tag_m25v" "TAG_M25V")

Executing: mtpltrm_dg = geomAnd(mtpltrm mtpldg)

Executing: geomStamp(mtpltrm_dg mtpltrm)

Executing: mtl_v200 = geomGetTexted(mtpltrm_dg hvmtpl_l "tag_200v" "TAG_200V")

Executing: mtl_v100 = geomGetTexted(mtpltrm_dg hvmtpl_l "tag_100v" "TAG_100V")

Executing: mtl_v60 = geomGetTexted(mtpltrm_dg hvmtpl_l "tag_60v" "TAG_60V")

Executing: mtl_v25 = geomGetTexted(mtpltrm_dg hvmtpl_l "tag_25v" "TAG_25V")

Executing: mtl_vm200 = geomGetTexted(mtpltrm_dg hvmtpl_l "tag_m200v" "TAG_M200V")

Executing: mtl_vm100 = geomGetTexted(mtpltrm_dg hvmtpl_l "tag_m100v" "TAG_M100V")

Executing: mtl_vm60 = geomGetTexted(mtpltrm_dg hvmtpl_l "tag_m60v" "TAG_M60V")

Executing: mtl_vm25 = geomGetTexted(mtpltrm_dg hvmtpl_l "tag_m25v" "TAG_M25V")

Executing: v25_p11 = geomNodeRelate(polytrm_dg p1_v25 conn)

Executing: v25_p1m1 = geomNodeRelate(polytrm_dg m1_v25 conn)

Executing: v25_p1m2 = geomNodeRelate(polytrm_dg m2_v25 conn)

Executing: v25_met1p1 = geomNodeRelate(met1trm_dg p1_v25 conn)

Executing: v25_met11 = geomNodeRelate(met1trm_dg m1_v25 conn)

Executing: v25_met12 = geomNodeRelate(met1trm_dg m2_v25 conn)

Executing: v25_met2p1 = geomNodeRelate(met2trm_dg p1_v25 conn)

Executing: v25_met21 = geomNodeRelate(met2trm_dg m1_v25 conn)

Executing: v25_met22 = geomNodeRelate(met2trm_dg m2_v25 conn)

Executing: v60_p11 = geomNodeRelate(polytrm_dg p1_v60 conn)

Executing: v60_p1m1 = geomNodeRelate(polytrm_dg m1_v60 conn)

Executing: v60_p1m2 = geomNodeRelate(polytrm_dg m2_v60 conn)

Executing: v60_met1p1 = geomNodeRelate(met1trm_dg p1_v60 conn)

Executing: v60_met11 = geomNodeRelate(met1trm_dg m1_v60 conn)

Executing: v60_met12 = geomNodeRelate(met1trm_dg m2_v60 conn)

Executing: v60_met2p1 = geomNodeRelate(met2trm_dg p1_v60 conn)

Executing: v60_met21 = geomNodeRelate(met2trm_dg m1_v60 conn)

Executing: v60_met22 = geomNodeRelate(met2trm_dg m2_v60 conn)

Executing: v100_p11 = geomNodeRelate(polytrm_dg p1_v100 conn)

Executing: v100_p1m1 = geomNodeRelate(polytrm_dg m1_v100 conn)

Executing: v100_p1m2 = geomNodeRelate(polytrm_dg m2_v100 conn)

Executing: v100_met1p1 = geomNodeRelate(met1trm_dg p1_v100 conn)

Executing: v100_met11 = geomNodeRelate(met1trm_dg m1_v100 conn)

Executing: v100_met12 = geomNodeRelate(met1trm_dg m2_v100 conn)

Executing: v100_met2p1 = geomNodeRelate(met2trm_dg p1_v100 conn)

Executing: v100_met21 = geomNodeRelate(met2trm_dg m1_v100 conn)

Executing: v100_met22 = geomNodeRelate(met2trm_dg m2_v100 conn)

Executing: v200_p11 = geomNodeRelate(polytrm_dg p1_v200 conn)

Executing: v200_p1m1 = geomNodeRelate(polytrm_dg m1_v200 conn)

Executing: v200_p1m2 = geomNodeRelate(polytrm_dg m2_v200 conn)

Executing: v200_met1p1 = geomNodeRelate(met1trm_dg p1_v200 conn)

Executing: v200_met11 = geomNodeRelate(met1trm_dg m1_v200 conn)

Executing: v200_met12 = geomNodeRelate(met1trm_dg m2_v200 conn)

Executing: v200_met2p1 = geomNodeRelate(met2trm_dg p1_v200 conn)

Executing: v200_met21 = geomNodeRelate(met2trm_dg m1_v200 conn)

Executing: v200_met22 = geomNodeRelate(met2trm_dg m2_v200 conn)

Executing: v25_p1m3 = geomNodeRelate(polytrm_dg m3_v25 conn)

Executing: v25_met13 = geomNodeRelate(met1trm_dg m3_v25 conn)

Executing: v25_met23 = geomNodeRelate(met2trm_dg m3_v25 conn)

Executing: v25_met3p1 = geomNodeRelate(met3trm_dg p1_v25 conn)

Executing: v25_met31 = geomNodeRelate(met3trm_dg m1_v25 conn)

Executing: v25_met32 = geomNodeRelate(met3trm_dg m2_v25 conn)

Executing: v25_met33 = geomNodeRelate(met3trm_dg m3_v25 conn)

Executing: v60_p1m3 = geomNodeRelate(polytrm_dg m3_v60 conn)

Executing: v60_met13 = geomNodeRelate(met1trm_dg m3_v60 conn)

Executing: v60_met23 = geomNodeRelate(met2trm_dg m3_v60 conn)

Executing: v60_met3p1 = geomNodeRelate(met3trm_dg p1_v60 conn)

Executing: v60_met31 = geomNodeRelate(met3trm_dg m1_v60 conn)

Executing: v60_met32 = geomNodeRelate(met3trm_dg m2_v60 conn)

Executing: v60_met33 = geomNodeRelate(met3trm_dg m3_v60 conn)

Executing: v100_p1m3 = geomNodeRelate(polytrm_dg m3_v100 conn)

Executing: v100_met13 = geomNodeRelate(met1trm_dg m3_v100 conn)

Executing: v100_met23 = geomNodeRelate(met2trm_dg m3_v100 conn)

Executing: v100_met3p1 = geomNodeRelate(met3trm_dg p1_v100 conn)

Executing: v100_met31 = geomNodeRelate(met3trm_dg m1_v100 conn)

Executing: v100_met32 = geomNodeRelate(met3trm_dg m2_v100 conn)

Executing: v100_met33 = geomNodeRelate(met3trm_dg m3_v100 conn)

Executing: v200_p1m3 = geomNodeRelate(polytrm_dg m3_v200 conn)

Executing: v200_met13 = geomNodeRelate(met1trm_dg m3_v200 conn)

Executing: v200_met23 = geomNodeRelate(met2trm_dg m3_v200 conn)

Executing: v200_met3p1 = geomNodeRelate(met3trm_dg p1_v200 conn)

Executing: v200_met31 = geomNodeRelate(met3trm_dg m1_v200 conn)

Executing: v200_met32 = geomNodeRelate(met3trm_dg m2_v200 conn)

Executing: v200_met33 = geomNodeRelate(met3trm_dg m3_v200 conn)

Executing: v25_p1m4 = geomNodeRelate(polytrm_dg m4_v25 conn)

Executing: v25_met14 = geomNodeRelate(met1trm_dg m4_v25 conn)

Executing: v25_met24 = geomNodeRelate(met2trm_dg m4_v25 conn)

Executing: v25_met34 = geomNodeRelate(met3trm_dg m4_v25 conn)

Executing: v25_met4p1 = geomNodeRelate(met4trm_dg p1_v25 conn)

Executing: v25_met41 = geomNodeRelate(met4trm_dg m1_v25 conn)

Executing: v25_met42 = geomNodeRelate(met4trm_dg m2_v25 conn)

Executing: v25_met43 = geomNodeRelate(met4trm_dg m3_v25 conn)

Executing: v25_met44 = geomNodeRelate(met4trm_dg m4_v25 conn)

Executing: v60_p1m4 = geomNodeRelate(polytrm_dg m4_v60 conn)

Executing: v60_met14 = geomNodeRelate(met1trm_dg m4_v60 conn)

Executing: v60_met24 = geomNodeRelate(met2trm_dg m4_v60 conn)

Executing: v60_met34 = geomNodeRelate(met3trm_dg m4_v60 conn)

Executing: v60_met4p1 = geomNodeRelate(met4trm_dg p1_v60 conn)

Executing: v60_met41 = geomNodeRelate(met4trm_dg m1_v60 conn)

Executing: v60_met42 = geomNodeRelate(met4trm_dg m2_v60 conn)

Executing: v60_met43 = geomNodeRelate(met4trm_dg m3_v60 conn)

Executing: v60_met44 = geomNodeRelate(met4trm_dg m4_v60 conn)

Executing: v100_p1m4 = geomNodeRelate(polytrm_dg m4_v100 conn)

Executing: v100_met14 = geomNodeRelate(met1trm_dg m4_v100 conn)

Executing: v100_met24 = geomNodeRelate(met2trm_dg m4_v100 conn)

Executing: v100_met34 = geomNodeRelate(met3trm_dg m4_v100 conn)

Executing: v100_met4p1 = geomNodeRelate(met4trm_dg p1_v100 conn)

Executing: v100_met41 = geomNodeRelate(met4trm_dg m1_v100 conn)

Executing: v100_met42 = geomNodeRelate(met4trm_dg m2_v100 conn)

Executing: v100_met43 = geomNodeRelate(met4trm_dg m3_v100 conn)

Executing: v100_met44 = geomNodeRelate(met4trm_dg m4_v100 conn)

Executing: v200_p1m4 = geomNodeRelate(polytrm_dg m4_v200 conn)

Executing: v200_met14 = geomNodeRelate(met1trm_dg m4_v200 conn)

Executing: v200_met24 = geomNodeRelate(met2trm_dg m4_v200 conn)

Executing: v200_met34 = geomNodeRelate(met3trm_dg m4_v200 conn)

Executing: v200_met4p1 = geomNodeRelate(met4trm_dg p1_v200 conn)

Executing: v200_met41 = geomNodeRelate(met4trm_dg m1_v200 conn)

Executing: v200_met42 = geomNodeRelate(met4trm_dg m2_v200 conn)

Executing: v200_met43 = geomNodeRelate(met4trm_dg m3_v200 conn)

Executing: v200_met44 = geomNodeRelate(met4trm_dg m4_v200 conn)

Executing: v25_p1mt = geomNodeRelate(polytrm_dg mt_v25 conn)

Executing: v25_met1t = geomNodeRelate(met1trm_dg mt_v25 conn)

Executing: v25_met2t = geomNodeRelate(met2trm_dg mt_v25 conn)

Executing: v25_mtp1 = geomNodeRelate(mtptrm_dg p1_v25 conn)

Executing: v25_mt1 = geomNodeRelate(mtptrm_dg m1_v25 conn)

Executing: v25_mt2 = geomNodeRelate(mtptrm_dg m2_v25 conn)

Executing: v25_mtt = geomNodeRelate(mtptrm_dg mt_v25 conn)

Executing: v60_p1mt = geomNodeRelate(polytrm_dg mt_v60 conn)

Executing: v60_met1t = geomNodeRelate(met1trm_dg mt_v60 conn)

Executing: v60_met2t = geomNodeRelate(met2trm_dg mt_v60 conn)

Executing: v60_mtp1 = geomNodeRelate(mtptrm_dg p1_v60 conn)

Executing: v60_mt1 = geomNodeRelate(mtptrm_dg m1_v60 conn)

Executing: v60_mt2 = geomNodeRelate(mtptrm_dg m2_v60 conn)

Executing: v60_mtt = geomNodeRelate(mtptrm_dg mt_v60 conn)

Executing: v100_p1mt = geomNodeRelate(polytrm_dg mt_v100 conn)

Executing: v100_met1t = geomNodeRelate(met1trm_dg mt_v100 conn)

Executing: v100_met2t = geomNodeRelate(met2trm_dg mt_v100 conn)

Executing: v100_mtp1 = geomNodeRelate(mtptrm_dg p1_v100 conn)

Executing: v100_mt1 = geomNodeRelate(mtptrm_dg m1_v100 conn)

Executing: v100_mt2 = geomNodeRelate(mtptrm_dg m2_v100 conn)

Executing: v100_mtt = geomNodeRelate(mtptrm_dg mt_v100 conn)

Executing: v200_p1mt = geomNodeRelate(polytrm_dg mt_v200 conn)

Executing: v200_met1t = geomNodeRelate(met1trm_dg mt_v200 conn)

Executing: v200_met2t = geomNodeRelate(met2trm_dg mt_v200 conn)

Executing: v200_mtp1 = geomNodeRelate(mtptrm_dg p1_v200 conn)

Executing: v200_mt1 = geomNodeRelate(mtptrm_dg m1_v200 conn)

Executing: v200_mt2 = geomNodeRelate(mtptrm_dg m2_v200 conn)

Executing: v200_mtt = geomNodeRelate(mtptrm_dg mt_v200 conn)

Executing: v25_met3t = geomNodeRelate(met3trm_dg mt_v25 conn)

Executing: v25_mt3 = geomNodeRelate(mtptrm_dg m3_v25 conn)

Executing: v60_met3t = geomNodeRelate(met3trm_dg mt_v60 conn)

Executing: v60_mt3 = geomNodeRelate(mtptrm_dg m3_v60 conn)

Executing: v100_met3t = geomNodeRelate(met3trm_dg mt_v100 conn)

Executing: v100_mt3 = geomNodeRelate(mtptrm_dg m3_v100 conn)

Executing: v200_met3t = geomNodeRelate(met3trm_dg mt_v200 conn)

Executing: v200_mt3 = geomNodeRelate(mtptrm_dg m3_v200 conn)

Executing: v25_met4t = geomNodeRelate(met4trm_dg mt_v25 conn)

Executing: v25_mt4 = geomNodeRelate(mtptrm_dg m4_v25 conn)

Executing: v60_met4t = geomNodeRelate(met4trm_dg mt_v60 conn)

Executing: v60_mt4 = geomNodeRelate(mtptrm_dg m4_v60 conn)

Executing: v100_met4t = geomNodeRelate(met4trm_dg mt_v100 conn)

Executing: v100_mt4 = geomNodeRelate(mtptrm_dg m4_v100 conn)

Executing: v200_met4t = geomNodeRelate(met4trm_dg mt_v200 conn)

Executing: v200_mt4 = geomNodeRelate(mtptrm_dg m4_v200 conn)

Executing: v25_p1ml = geomNodeRelate(polytrm_dg mtl_v25 conn)

Executing: v25_met1l = geomNodeRelate(met1trm_dg mtl_v25 conn)

Executing: v25_met2l = geomNodeRelate(met2trm_dg mtl_v25 conn)

Executing: v25_mlp1 = geomNodeRelate(mtpltrm_dg p1_v25 conn)

Executing: v25_ml1 = geomNodeRelate(mtpltrm_dg m1_v25 conn)

Executing: v25_ml2 = geomNodeRelate(mtpltrm_dg m2_v25 conn)

Executing: v25_mll = geomNodeRelate(mtpltrm_dg mtl_v25 conn)

Executing: v60_p1ml = geomNodeRelate(polytrm_dg mtl_v60 conn)

Executing: v60_met1l = geomNodeRelate(met1trm_dg mtl_v60 conn)

Executing: v60_met2l = geomNodeRelate(met2trm_dg mtl_v60 conn)

Executing: v60_mlp1 = geomNodeRelate(mtpltrm_dg p1_v60 conn)

Executing: v60_ml1 = geomNodeRelate(mtpltrm_dg m1_v60 conn)

Executing: v60_ml2 = geomNodeRelate(mtpltrm_dg m2_v60 conn)

Executing: v60_mll = geomNodeRelate(mtpltrm_dg mtl_v60 conn)

Executing: v100_p1ml = geomNodeRelate(polytrm_dg mtl_v100 conn)

Executing: v100_met1l = geomNodeRelate(met1trm_dg mtl_v100 conn)

Executing: v100_met2l = geomNodeRelate(met2trm_dg mtl_v100 conn)

Executing: v100_mlp1 = geomNodeRelate(mtpltrm_dg p1_v100 conn)

Executing: v100_ml1 = geomNodeRelate(mtpltrm_dg m1_v100 conn)

Executing: v100_ml2 = geomNodeRelate(mtpltrm_dg m2_v100 conn)

Executing: v100_mll = geomNodeRelate(mtpltrm_dg mtl_v100 conn)

Executing: v200_p1ml = geomNodeRelate(polytrm_dg mtl_v200 conn)

Executing: v200_met1l = geomNodeRelate(met1trm_dg mtl_v200 conn)

Executing: v200_met2l = geomNodeRelate(met2trm_dg mtl_v200 conn)

Executing: v200_mlp1 = geomNodeRelate(mtpltrm_dg p1_v200 conn)

Executing: v200_ml1 = geomNodeRelate(mtpltrm_dg m1_v200 conn)

Executing: v200_ml2 = geomNodeRelate(mtpltrm_dg m2_v200 conn)

Executing: v200_mll = geomNodeRelate(mtpltrm_dg mtl_v200 conn)

Executing: v25_met3l = geomNodeRelate(met3trm_dg mtl_v25 conn)

Executing: v25_ml3 = geomNodeRelate(mtpltrm_dg m3_v25 conn)

Executing: v60_met3l = geomNodeRelate(met3trm_dg mtl_v60 conn)

Executing: v60_ml3 = geomNodeRelate(mtpltrm_dg m3_v60 conn)

Executing: v100_met3l = geomNodeRelate(met3trm_dg mtl_v100 conn)

Executing: v100_ml3 = geomNodeRelate(mtpltrm_dg m3_v100 conn)

Executing: v200_met3l = geomNodeRelate(met3trm_dg mtl_v200 conn)

Executing: v200_ml3 = geomNodeRelate(mtpltrm_dg m3_v200 conn)

Executing: v25_met4l = geomNodeRelate(met4trm_dg mtl_v25 conn)

Executing: v25_ml4 = geomNodeRelate(mtpltrm_dg m4_v25 conn)

Executing: v60_met4l = geomNodeRelate(met4trm_dg mtl_v60 conn)

Executing: v60_ml4 = geomNodeRelate(mtpltrm_dg m4_v60 conn)

Executing: v100_met4l = geomNodeRelate(met4trm_dg mtl_v100 conn)

Executing: v100_ml4 = geomNodeRelate(mtpltrm_dg m4_v100 conn)

Executing: v200_met4l = geomNodeRelate(met4trm_dg mtl_v200 conn)

Executing: v200_ml4 = geomNodeRelate(mtpltrm_dg m4_v200 conn)

Executing: v25_mettl = geomNodeRelate(mtptrm_dg mtl_v25 conn)

Executing: v25_mlt = geomNodeRelate(mtpltrm_dg mt_v25 conn)

Executing: v60_mettl = geomNodeRelate(mtptrm_dg mtl_v60 conn)

Executing: v60_mlt = geomNodeRelate(mtpltrm_dg mt_v60 conn)

Executing: v100_mettl = geomNodeRelate(mtptrm_dg mtl_v100 conn)

Executing: v100_mlt = geomNodeRelate(mtpltrm_dg mt_v100 conn)

Executing: v200_mettl = geomNodeRelate(mtptrm_dg mtl_v200 conn)

Executing: v200_mlt = geomNodeRelate(mtpltrm_dg mt_v200 conn)

Executing: v25_p1 = geomOr(v25_p11 v25_p1m1 v25_p1m2 v25_p1m3 v25_p1m4 v25_p1mt v25_p1ml)

Executing: v25_met1 = geomOr(v25_met1p1 v25_met11 v25_met12 v25_met13 v25_met14 v25_met1...

Executing: v25_met2 = geomOr(v25_met2p1 v25_met21 v25_met22 v25_met23 v25_met24 v25_met2...

Executing: v25_met3 = geomOr(v25_met3p1 v25_met31 v25_met32 v25_met33 v25_met34 v25_met3...

Executing: v25_met4 = geomOr(v25_met4p1 v25_met41 v25_met42 v25_met43 v25_met44 v25_met4...

Executing: v25_mtp = geomOr(v25_mtp1 v25_mt1 v25_mt2 v25_mt3 v25_mt4 v25_mtt v25_mettl)

Executing: v25_ml = geomOr(v25_mll v25_mlp1 v25_ml1 v25_ml2 v25_ml3 v25_ml4 v25_mlt)

Executing: v60_p1 = geomOr(v60_p11 v60_p1m1 v60_p1m2 v60_p1m3 v60_p1m4 v60_p1mt v60_p1ml)

Executing: v60_met1 = geomOr(v60_met1p1 v60_met11 v60_met12 v60_met13 v60_met14 v60_met1...

Executing: v60_met2 = geomOr(v60_met2p1 v60_met21 v60_met22 v60_met23 v60_met24 v60_met2...

Executing: v60_met3 = geomOr(v60_met3p1 v60_met31 v60_met32 v60_met33 v60_met34 v60_met3...

Executing: v60_met4 = geomOr(v60_met4p1 v60_met41 v60_met42 v60_met43 v60_met44 v60_met4...

Executing: v60_mtp = geomOr(v60_mtp1 v60_mt1 v60_mt2 v60_mt3 v60_mt4 v60_mtt v60_mettl)

Executing: v60_ml = geomOr(v60_mll v60_mlp1 v60_ml1 v60_ml2 v60_ml3 v60_ml4 v60_mlt)

Executing: v100_p1 = geomOr(v100_p11 v100_p1m1 v100_p1m2 v100_p1m3 v100_p1m4 v100_p1mt v...

Executing: v100_met1 = geomOr(v100_met1p1 v100_met11 v100_met12 v100_met13 v100_met14 v1...

Executing: v100_met2 = geomOr(v100_met2p1 v100_met21 v100_met22 v100_met23 v100_met24 v1...

Executing: v100_met3 = geomOr(v100_met3p1 v100_met31 v100_met32 v100_met33 v100_met34 v1...

Executing: v100_met4 = geomOr(v100_met4p1 v100_met41 v100_met42 v100_met43 v100_met44 v1...

Executing: v100_mtp = geomOr(v100_mtp1 v100_mt1 v100_mt2 v100_mt3 v100_mt4 v100_mtt v100...

Executing: v100_ml = geomOr(v100_mll v100_mlp1 v100_ml1 v100_ml2 v100_ml3 v100_ml4 v100_...

Executing: v200_p1 = geomOr(v200_p11 v200_p1m1 v200_p1m2 v200_p1m3 v200_p1m4 v200_p1mt v...

Executing: v200_met1 = geomOr(v200_met1p1 v200_met11 v200_met12 v200_met13 v200_met14 v2...

Executing: v200_met2 = geomOr(v200_met2p1 v200_met21 v200_met22 v200_met23 v200_met24 v2...

Executing: v200_met3 = geomOr(v200_met3p1 v200_met31 v200_met32 v200_met33 v200_met34 v2...

Executing: v200_met4 = geomOr(v200_met4p1 v200_met41 v200_met42 v200_met43 v200_met44 v2...

Executing: v200_mtp = geomOr(v200_mtp1 v200_mt1 v200_mt2 v200_mt3 v200_mt4 v200_mtt v200...

Executing: v200_ml = geomOr(v200_mll v200_mlp1 v200_ml1 v200_ml2 v200_ml3 v200_ml4 v200_...

Executing: vm25_p11 = geomNodeRelate(polytrm_dg p1_vm25 conn)

Executing: vm25_p1m1 = geomNodeRelate(polytrm_dg m1_vm25 conn)

Executing: vm25_p1m2 = geomNodeRelate(polytrm_dg m2_vm25 conn)

Executing: vm25_met1p1 = geomNodeRelate(met1trm_dg p1_vm25 conn)

Executing: vm25_met11 = geomNodeRelate(met1trm_dg m1_vm25 conn)

Executing: vm25_met12 = geomNodeRelate(met1trm_dg m2_vm25 conn)

Executing: vm25_met2p1 = geomNodeRelate(met2trm_dg p1_vm25 conn)

Executing: vm25_met21 = geomNodeRelate(met2trm_dg m1_vm25 conn)

Executing: vm25_met22 = geomNodeRelate(met2trm_dg m2_vm25 conn)

Executing: vm60_p11 = geomNodeRelate(polytrm_dg p1_vm60 conn)

Executing: vm60_p1m1 = geomNodeRelate(polytrm_dg m1_vm60 conn)

Executing: vm60_p1m2 = geomNodeRelate(polytrm_dg m2_vm60 conn)

Executing: vm60_met1p1 = geomNodeRelate(met1trm_dg p1_vm60 conn)

Executing: vm60_met11 = geomNodeRelate(met1trm_dg m1_vm60 conn)

Executing: vm60_met12 = geomNodeRelate(met1trm_dg m2_vm60 conn)

Executing: vm60_met2p1 = geomNodeRelate(met2trm_dg p1_vm60 conn)

Executing: vm60_met21 = geomNodeRelate(met2trm_dg m1_vm60 conn)

Executing: vm60_met22 = geomNodeRelate(met2trm_dg m2_vm60 conn)

Executing: vm100_p11 = geomNodeRelate(polytrm_dg p1_vm100 conn)

Executing: vm100_p1m1 = geomNodeRelate(polytrm_dg m1_vm100 conn)

Executing: vm100_p1m2 = geomNodeRelate(polytrm_dg m2_vm100 conn)

Executing: vm100_met1p1 = geomNodeRelate(met1trm_dg p1_vm100 conn)

Executing: vm100_met11 = geomNodeRelate(met1trm_dg m1_vm100 conn)

Executing: vm100_met12 = geomNodeRelate(met1trm_dg m2_vm100 conn)

Executing: vm100_met2p1 = geomNodeRelate(met2trm_dg p1_vm100 conn)

Executing: vm100_met21 = geomNodeRelate(met2trm_dg m1_vm100 conn)

Executing: vm100_met22 = geomNodeRelate(met2trm_dg m2_vm100 conn)

Executing: vm200_p11 = geomNodeRelate(polytrm_dg p1_vm200 conn)

Executing: vm200_p1m1 = geomNodeRelate(polytrm_dg m1_vm200 conn)

Executing: vm200_p1m2 = geomNodeRelate(polytrm_dg m2_vm200 conn)

Executing: vm200_met1p1 = geomNodeRelate(met1trm_dg p1_vm200 conn)

Executing: vm200_met11 = geomNodeRelate(met1trm_dg m1_vm200 conn)

Executing: vm200_met12 = geomNodeRelate(met1trm_dg m2_vm200 conn)

Executing: vm200_met2p1 = geomNodeRelate(met2trm_dg p1_vm200 conn)

Executing: vm200_met21 = geomNodeRelate(met2trm_dg m1_vm200 conn)

Executing: vm200_met22 = geomNodeRelate(met2trm_dg m2_vm200 conn)

Executing: vm25_p1m3 = geomNodeRelate(polytrm_dg m3_vm25 conn)

Executing: vm25_met13 = geomNodeRelate(met1trm_dg m3_vm25 conn)

Executing: vm25_met23 = geomNodeRelate(met2trm_dg m3_vm25 conn)

Executing: vm25_met3p1 = geomNodeRelate(met3trm_dg p1_vm25 conn)

Executing: vm25_met31 = geomNodeRelate(met3trm_dg m1_vm25 conn)

Executing: vm25_met32 = geomNodeRelate(met3trm_dg m2_vm25 conn)

Executing: vm25_met33 = geomNodeRelate(met3trm_dg m3_vm25 conn)

Executing: vm60_p1m3 = geomNodeRelate(polytrm_dg m3_vm60 conn)

Executing: vm60_met13 = geomNodeRelate(met1trm_dg m3_vm60 conn)

Executing: vm60_met23 = geomNodeRelate(met2trm_dg m3_vm60 conn)

Executing: vm60_met3p1 = geomNodeRelate(met3trm_dg p1_vm60 conn)

Executing: vm60_met31 = geomNodeRelate(met3trm_dg m1_vm60 conn)

Executing: vm60_met32 = geomNodeRelate(met3trm_dg m2_vm60 conn)

Executing: vm60_met33 = geomNodeRelate(met3trm_dg m3_vm60 conn)

Executing: vm100_p1m3 = geomNodeRelate(polytrm_dg m3_vm100 conn)

Executing: vm100_met13 = geomNodeRelate(met1trm_dg m3_vm100 conn)

Executing: vm100_met23 = geomNodeRelate(met2trm_dg m3_vm100 conn)

Executing: vm100_met3p1 = geomNodeRelate(met3trm_dg p1_vm100 conn)

Executing: vm100_met31 = geomNodeRelate(met3trm_dg m1_vm100 conn)

Executing: vm100_met32 = geomNodeRelate(met3trm_dg m2_vm100 conn)

Executing: vm100_met33 = geomNodeRelate(met3trm_dg m3_vm100 conn)

Executing: vm200_p1m3 = geomNodeRelate(polytrm_dg m3_vm200 conn)

Executing: vm200_met13 = geomNodeRelate(met1trm_dg m3_vm200 conn)

Executing: vm200_met23 = geomNodeRelate(met2trm_dg m3_vm200 conn)

Executing: vm200_met3p1 = geomNodeRelate(met3trm_dg p1_vm200 conn)

Executing: vm200_met31 = geomNodeRelate(met3trm_dg m1_vm200 conn)

Executing: vm200_met32 = geomNodeRelate(met3trm_dg m2_vm200 conn)

Executing: vm200_met33 = geomNodeRelate(met3trm_dg m3_vm200 conn)

Executing: vm25_p1m4 = geomNodeRelate(polytrm_dg m4_vm25 conn)

Executing: vm25_met14 = geomNodeRelate(met1trm_dg m4_vm25 conn)

Executing: vm25_met24 = geomNodeRelate(met2trm_dg m4_vm25 conn)

Executing: vm25_met34 = geomNodeRelate(met3trm_dg m4_vm25 conn)

Executing: vm25_met4p1 = geomNodeRelate(met4trm_dg p1_vm25 conn)

Executing: vm25_met41 = geomNodeRelate(met4trm_dg m1_vm25 conn)

Executing: vm25_met42 = geomNodeRelate(met4trm_dg m2_vm25 conn)

Executing: vm25_met43 = geomNodeRelate(met4trm_dg m3_vm25 conn)

Executing: vm25_met44 = geomNodeRelate(met4trm_dg m4_vm25 conn)

Executing: vm60_p1m4 = geomNodeRelate(polytrm_dg m4_vm60 conn)

Executing: vm60_met14 = geomNodeRelate(met1trm_dg m4_vm60 conn)

Executing: vm60_met24 = geomNodeRelate(met2trm_dg m4_vm60 conn)

Executing: vm60_met34 = geomNodeRelate(met3trm_dg m4_vm60 conn)

Executing: vm60_met4p1 = geomNodeRelate(met4trm_dg p1_vm60 conn)

Executing: vm60_met41 = geomNodeRelate(met4trm_dg m1_vm60 conn)

Executing: vm60_met42 = geomNodeRelate(met4trm_dg m2_vm60 conn)

Executing: vm60_met43 = geomNodeRelate(met4trm_dg m3_vm60 conn)

Executing: vm60_met44 = geomNodeRelate(met4trm_dg m4_vm60 conn)

Executing: vm100_p1m4 = geomNodeRelate(polytrm_dg m4_vm100 conn)

Executing: vm100_met14 = geomNodeRelate(met1trm_dg m4_vm100 conn)

Executing: vm100_met24 = geomNodeRelate(met2trm_dg m4_vm100 conn)

Executing: vm100_met34 = geomNodeRelate(met3trm_dg m4_vm100 conn)

Executing: vm100_met4p1 = geomNodeRelate(met4trm_dg p1_vm100 conn)

Executing: vm100_met41 = geomNodeRelate(met4trm_dg m1_vm100 conn)

Executing: vm100_met42 = geomNodeRelate(met4trm_dg m2_vm100 conn)

Executing: vm100_met43 = geomNodeRelate(met4trm_dg m3_vm100 conn)

Executing: vm100_met44 = geomNodeRelate(met4trm_dg m4_vm100 conn)

Executing: vm200_p1m4 = geomNodeRelate(polytrm_dg m4_vm200 conn)

Executing: vm200_met14 = geomNodeRelate(met1trm_dg m4_vm200 conn)

Executing: vm200_met24 = geomNodeRelate(met2trm_dg m4_vm200 conn)

Executing: vm200_met34 = geomNodeRelate(met3trm_dg m4_vm200 conn)

Executing: vm200_met4p1 = geomNodeRelate(met4trm_dg p1_vm200 conn)

Executing: vm200_met41 = geomNodeRelate(met4trm_dg m1_vm200 conn)

Executing: vm200_met42 = geomNodeRelate(met4trm_dg m2_vm200 conn)

Executing: vm200_met43 = geomNodeRelate(met4trm_dg m3_vm200 conn)

Executing: vm200_met44 = geomNodeRelate(met4trm_dg m4_vm200 conn)

Executing: vm25_p1mt = geomNodeRelate(polytrm_dg mt_vm25 conn)

Executing: vm25_met1t = geomNodeRelate(met1trm_dg mt_vm25 conn)

Executing: vm25_met2t = geomNodeRelate(met2trm_dg mt_vm25 conn)

Executing: vm25_mtp1 = geomNodeRelate(mtptrm_dg p1_vm25 conn)

Executing: vm25_mt1 = geomNodeRelate(mtptrm_dg m1_vm25 conn)

Executing: vm25_mt2 = geomNodeRelate(mtptrm_dg m2_vm25 conn)

Executing: vm25_mtt = geomNodeRelate(mtptrm_dg mt_vm25 conn)

Executing: vm60_p1mt = geomNodeRelate(polytrm_dg mt_vm60 conn)

Executing: vm60_met1t = geomNodeRelate(met1trm_dg mt_vm60 conn)

Executing: vm60_met2t = geomNodeRelate(met2trm_dg mt_vm60 conn)

Executing: vm60_mtp1 = geomNodeRelate(mtptrm_dg p1_vm60 conn)

Executing: vm60_mt1 = geomNodeRelate(mtptrm_dg m1_vm60 conn)

Executing: vm60_mt2 = geomNodeRelate(mtptrm_dg m2_vm60 conn)

Executing: vm60_mtt = geomNodeRelate(mtptrm_dg mt_vm60 conn)

Executing: vm100_p1mt = geomNodeRelate(polytrm_dg mt_vm100 conn)

Executing: vm100_met1t = geomNodeRelate(met1trm_dg mt_vm100 conn)

Executing: vm100_met2t = geomNodeRelate(met2trm_dg mt_vm100 conn)

Executing: vm100_mtp1 = geomNodeRelate(mtptrm_dg p1_vm100 conn)

Executing: vm100_mt1 = geomNodeRelate(mtptrm_dg m1_vm100 conn)

Executing: vm100_mt2 = geomNodeRelate(mtptrm_dg m2_vm100 conn)

Executing: vm100_mtt = geomNodeRelate(mtptrm_dg mt_vm100 conn)

Executing: vm200_p1mt = geomNodeRelate(polytrm_dg mt_vm200 conn)

Executing: vm200_met1t = geomNodeRelate(met1trm_dg mt_vm200 conn)

Executing: vm200_met2t = geomNodeRelate(met2trm_dg mt_vm200 conn)

Executing: vm200_mtp1 = geomNodeRelate(mtptrm_dg p1_vm200 conn)

Executing: vm200_mt1 = geomNodeRelate(mtptrm_dg m1_vm200 conn)

Executing: vm200_mt2 = geomNodeRelate(mtptrm_dg m2_vm200 conn)

Executing: vm200_mtt = geomNodeRelate(mtptrm_dg mt_vm200 conn)

Executing: vm25_met3t = geomNodeRelate(met3trm_dg mt_vm25 conn)

Executing: vm25_mt3 = geomNodeRelate(mtptrm_dg m3_vm25 conn)

Executing: vm60_met3t = geomNodeRelate(met3trm_dg mt_vm60 conn)

Executing: vm60_mt3 = geomNodeRelate(mtptrm_dg m3_vm60 conn)

Executing: vm100_met3t = geomNodeRelate(met3trm_dg mt_vm100 conn)

Executing: vm100_mt3 = geomNodeRelate(mtptrm_dg m3_vm100 conn)

Executing: vm200_met3t = geomNodeRelate(met3trm_dg mt_vm200 conn)

Executing: vm200_mt3 = geomNodeRelate(mtptrm_dg m3_vm200 conn)

Executing: vm25_met4t = geomNodeRelate(met4trm_dg mt_vm25 conn)

Executing: vm25_mt4 = geomNodeRelate(mtptrm_dg m4_vm25 conn)

Executing: vm60_met4t = geomNodeRelate(met4trm_dg mt_vm60 conn)

Executing: vm60_mt4 = geomNodeRelate(mtptrm_dg m4_vm60 conn)

Executing: vm100_met4t = geomNodeRelate(met4trm_dg mt_vm100 conn)

Executing: vm100_mt4 = geomNodeRelate(mtptrm_dg m4_vm100 conn)

Executing: vm200_met4t = geomNodeRelate(met4trm_dg mt_vm200 conn)

Executing: vm200_mt4 = geomNodeRelate(mtptrm_dg m4_vm200 conn)

Executing: vm25_p1ml = geomNodeRelate(polytrm_dg mtl_vm25 conn)

Executing: vm25_met1l = geomNodeRelate(met1trm_dg mtl_vm25 conn)

Executing: vm25_met2l = geomNodeRelate(met2trm_dg mtl_vm25 conn)

Executing: vm25_mlp1 = geomNodeRelate(mtpltrm_dg p1_vm25 conn)

Executing: vm25_ml1 = geomNodeRelate(mtpltrm_dg m1_vm25 conn)

Executing: vm25_ml2 = geomNodeRelate(mtpltrm_dg m2_vm25 conn)

Executing: vm25_mll = geomNodeRelate(mtpltrm_dg mtl_vm25 conn)

Executing: vm60_p1ml = geomNodeRelate(polytrm_dg mtl_vm60 conn)

Executing: vm60_met1l = geomNodeRelate(met1trm_dg mtl_vm60 conn)

Executing: vm60_met2l = geomNodeRelate(met2trm_dg mtl_vm60 conn)

Executing: vm60_mlp1 = geomNodeRelate(mtpltrm_dg p1_vm60 conn)

Executing: vm60_ml1 = geomNodeRelate(mtpltrm_dg m1_vm60 conn)

Executing: vm60_ml2 = geomNodeRelate(mtpltrm_dg m2_vm60 conn)

Executing: vm60_mll = geomNodeRelate(mtpltrm_dg mtl_vm60 conn)

Executing: vm100_p1ml = geomNodeRelate(polytrm_dg mtl_vm100 conn)

Executing: vm100_met1l = geomNodeRelate(met1trm_dg mtl_vm100 conn)

Executing: vm100_met2l = geomNodeRelate(met2trm_dg mtl_vm100 conn)

Executing: vm100_mlp1 = geomNodeRelate(mtpltrm_dg p1_vm100 conn)

Executing: vm100_ml1 = geomNodeRelate(mtpltrm_dg m1_vm100 conn)

Executing: vm100_ml2 = geomNodeRelate(mtpltrm_dg m2_vm100 conn)

Executing: vm100_mll = geomNodeRelate(mtpltrm_dg mtl_vm100 conn)

Executing: vm200_p1ml = geomNodeRelate(polytrm_dg mtl_vm200 conn)

Executing: vm200_met1l = geomNodeRelate(met1trm_dg mtl_vm200 conn)

Executing: vm200_met2l = geomNodeRelate(met2trm_dg mtl_vm200 conn)

Executing: vm200_mlp1 = geomNodeRelate(mtpltrm_dg p1_vm200 conn)

Executing: vm200_ml1 = geomNodeRelate(mtpltrm_dg m1_vm200 conn)

Executing: vm200_ml2 = geomNodeRelate(mtpltrm_dg m2_vm200 conn)

Executing: vm200_mll = geomNodeRelate(mtpltrm_dg mtl_vm200 conn)

Executing: vm25_met3l = geomNodeRelate(met3trm_dg mtl_vm25 conn)

Executing: vm25_ml3 = geomNodeRelate(mtpltrm_dg m3_vm25 conn)

Executing: vm60_met3l = geomNodeRelate(met3trm_dg mtl_vm60 conn)

Executing: vm60_ml3 = geomNodeRelate(mtpltrm_dg m3_vm60 conn)

Executing: vm100_met3l = geomNodeRelate(met3trm_dg mtl_vm100 conn)

Executing: vm100_ml3 = geomNodeRelate(mtpltrm_dg m3_vm100 conn)

Executing: vm200_met3l = geomNodeRelate(met3trm_dg mtl_vm200 conn)

Executing: vm200_ml3 = geomNodeRelate(mtpltrm_dg m3_vm200 conn)

Executing: vm25_met4l = geomNodeRelate(met4trm_dg mtl_vm25 conn)

Executing: vm25_ml4 = geomNodeRelate(mtpltrm_dg m4_vm25 conn)

Executing: vm60_met4l = geomNodeRelate(met4trm_dg mtl_vm60 conn)

Executing: vm60_ml4 = geomNodeRelate(mtpltrm_dg m4_vm60 conn)

Executing: vm100_met4l = geomNodeRelate(met4trm_dg mtl_vm100 conn)

Executing: vm100_ml4 = geomNodeRelate(mtpltrm_dg m4_vm100 conn)

Executing: vm200_met4l = geomNodeRelate(met4trm_dg mtl_vm200 conn)

Executing: vm200_ml4 = geomNodeRelate(mtpltrm_dg m4_vm200 conn)

Executing: vm25_mettl = geomNodeRelate(mtptrm_dg mtl_vm25 conn)

Executing: vm25_mlt = geomNodeRelate(mtpltrm_dg mt_vm25 conn)

Executing: vm60_mettl = geomNodeRelate(mtptrm_dg mtl_vm60 conn)

Executing: vm60_mlt = geomNodeRelate(mtpltrm_dg mt_vm60 conn)

Executing: vm100_mettl = geomNodeRelate(mtptrm_dg mtl_vm100 conn)

Executing: vm100_mlt = geomNodeRelate(mtpltrm_dg mt_vm100 conn)

Executing: vm200_mettl = geomNodeRelate(mtptrm_dg mtl_vm200 conn)

Executing: vm200_mlt = geomNodeRelate(mtpltrm_dg mt_vm200 conn)

Executing: vm25_p1 = geomOr(vm25_p11 vm25_p1m1 vm25_p1m2 vm25_p1m3 vm25_p1m4 vm25_p1mt v...

Executing: vm25_met1 = geomOr(vm25_met1p1 vm25_met11 vm25_met12 vm25_met13 vm25_met14 vm...

Executing: vm25_met2 = geomOr(vm25_met2p1 vm25_met21 vm25_met22 vm25_met23 vm25_met24 vm...

Executing: vm25_met3 = geomOr(vm25_met3p1 vm25_met31 vm25_met32 vm25_met33 vm25_met34 vm...

Executing: vm25_met4 = geomOr(vm25_met4p1 vm25_met41 vm25_met42 vm25_met43 vm25_met44 vm...

Executing: vm25_mtp = geomOr(vm25_mtp1 vm25_mt1 vm25_mt2 vm25_mt3 vm25_mt4 vm25_mtt vm25...

Executing: vm25_ml = geomOr(vm25_mll vm25_mlp1 vm25_ml1 vm25_ml2 vm25_ml3 vm25_ml4 vm25_...

Executing: vm60_p1 = geomOr(vm60_p11 vm60_p1m1 vm60_p1m2 vm60_p1m3 vm60_p1m4 vm60_p1mt v...

Executing: vm60_met1 = geomOr(vm60_met1p1 vm60_met11 vm60_met12 vm60_met13 vm60_met14 vm...

Executing: vm60_met2 = geomOr(vm60_met2p1 vm60_met21 vm60_met22 vm60_met23 vm60_met24 vm...

Executing: vm60_met3 = geomOr(vm60_met3p1 vm60_met31 vm60_met32 vm60_met33 vm60_met34 vm...

Executing: vm60_met4 = geomOr(vm60_met4p1 vm60_met41 vm60_met42 vm60_met43 vm60_met44 vm...

Executing: vm60_mtp = geomOr(vm60_mtp1 vm60_mt1 vm60_mt2 vm60_mt3 vm60_mt4 vm60_mtt vm60...

Executing: vm60_ml = geomOr(vm60_mll vm60_mlp1 vm60_ml1 vm60_ml2 vm60_ml3 vm60_ml4 vm60_...

Executing: vm100_p1 = geomOr(vm100_p11 vm100_p1m1 vm100_p1m2 vm100_p1m3 vm100_p1m4 vm100...

Executing: vm100_met1 = geomOr(vm100_met1p1 vm100_met11 vm100_met12 vm100_met13 vm100_me...

Executing: vm100_met2 = geomOr(vm100_met2p1 vm100_met21 vm100_met22 vm100_met23 vm100_me...

Executing: vm100_met3 = geomOr(vm100_met3p1 vm100_met31 vm100_met32 vm100_met33 vm100_me...

Executing: vm100_met4 = geomOr(vm100_met4p1 vm100_met41 vm100_met42 vm100_met43 vm100_me...

Executing: vm100_mtp = geomOr(vm100_mtp1 vm100_mt1 vm100_mt2 vm100_mt3 vm100_mt4 vm100_m...

Executing: vm100_ml = geomOr(vm100_mll vm100_mlp1 vm100_ml1 vm100_ml2 vm100_ml3 vm100_ml...

Executing: vm200_p1 = geomOr(vm200_p11 vm200_p1m1 vm200_p1m2 vm200_p1m3 vm200_p1m4 vm200...

Executing: vm200_met1 = geomOr(vm200_met1p1 vm200_met11 vm200_met12 vm200_met13 vm200_me...

Executing: vm200_met2 = geomOr(vm200_met2p1 vm200_met21 vm200_met22 vm200_met23 vm200_me...

Executing: vm200_met3 = geomOr(vm200_met3p1 vm200_met31 vm200_met32 vm200_met33 vm200_me...

Executing: vm200_met4 = geomOr(vm200_met4p1 vm200_met41 vm200_met42 vm200_met43 vm200_me...

Executing: vm200_mtp = geomOr(vm200_mtp1 vm200_mt1 vm200_mt2 vm200_mt3 vm200_mt4 vm200_m...

Executing: vm200_ml = geomOr(vm200_mll vm200_mlp1 vm200_ml1 vm200_ml2 vm200_ml3 vm200_ml...

Executing: geomStamp(v25_p1 polytrm_dg)

Executing: geomStamp(v25_met1 met1trm_dg)

Executing: geomStamp(v25_met2 met2trm_dg)

Executing: poly_v25 = geomOverlap(polytrm_dg v25_p1 sameNet)

Executing: met1_v25 = geomOverlap(met1trm_dg v25_met1 sameNet)

Executing: met2_v25 = geomOverlap(met2trm_dg v25_met2 sameNet)

Executing: met1res_v25 = geomButting(met1res met1_v25)

Executing: met1_v25r = geomOr(met1_v25 met1res_v25)

Executing: met2res_v25 = geomButting(met2res met2_v25)

Executing: met2_v25r = geomOr(met2_v25 met2res_v25)

Executing: geomStamp(v60_p1 polytrm_dg)

Executing: geomStamp(v60_met1 met1trm_dg)

Executing: geomStamp(v60_met2 met2trm_dg)

Executing: poly_v60 = geomOverlap(polytrm_dg v60_p1 sameNet)

Executing: met1_v60 = geomOverlap(met1trm_dg v60_met1 sameNet)

Executing: met2_v60 = geomOverlap(met2trm_dg v60_met2 sameNet)

Executing: met1res_v60 = geomButting(met1res met1_v60)

Executing: met1_v60r = geomOr(met1_v60 met1res_v60)

Executing: met2res_v60 = geomButting(met2res met2_v60)

Executing: met2_v60r = geomOr(met2_v60 met2res_v60)

Executing: geomStamp(v100_p1 polytrm_dg)

Executing: geomStamp(v100_met1 met1trm_dg)

Executing: geomStamp(v100_met2 met2trm_dg)

Executing: poly_v100 = geomOverlap(polytrm_dg v100_p1 sameNet)

Executing: met1_v100 = geomOverlap(met1trm_dg v100_met1 sameNet)

Executing: met2_v100 = geomOverlap(met2trm_dg v100_met2 sameNet)

Executing: met1res_v100 = geomButting(met1res met1_v100)

Executing: met1_v100r = geomOr(met1_v100 met1res_v100)

Executing: met2res_v100 = geomButting(met2res met2_v100)

Executing: met2_v100r = geomOr(met2_v100 met2res_v100)

Executing: geomStamp(v200_p1 polytrm_dg)

Executing: geomStamp(v200_met1 met1trm_dg)

Executing: geomStamp(v200_met2 met2trm_dg)

Executing: poly_v200 = geomOverlap(polytrm_dg v200_p1 sameNet)

Executing: met1_v200 = geomOverlap(met1trm_dg v200_met1 sameNet)

Executing: met2_v200 = geomOverlap(met2trm_dg v200_met2 sameNet)

Executing: met1res_v200 = geomButting(met1res met1_v200)

Executing: met1_v200r = geomOr(met1_v200 met1res_v200)

Executing: met2res_v200 = geomButting(met2res met2_v200)

Executing: met2_v200r = geomOr(met2_v200 met2res_v200)

Executing: geomStamp(v25_met3 met3trm_dg)

Executing: met3_v25 = geomOverlap(met3trm_dg v25_met3 sameNet)

Executing: met3res_v25 = geomButting(met3res met3_v25)

Executing: met3_v25r = geomOr(met3_v25 met3res_v25)

Executing: geomStamp(v60_met3 met3trm_dg)

Executing: met3_v60 = geomOverlap(met3trm_dg v60_met3 sameNet)

Executing: met3res_v60 = geomButting(met3res met3_v60)

Executing: met3_v60r = geomOr(met3_v60 met3res_v60)

Executing: geomStamp(v100_met3 met3trm_dg)

Executing: met3_v100 = geomOverlap(met3trm_dg v100_met3 sameNet)

Executing: met3res_v100 = geomButting(met3res met3_v100)

Executing: met3_v100r = geomOr(met3_v100 met3res_v100)

Executing: geomStamp(v200_met3 met3trm_dg)

Executing: met3_v200 = geomOverlap(met3trm_dg v200_met3 sameNet)

Executing: met3res_v200 = geomButting(met3res met3_v200)

Executing: met3_v200r = geomOr(met3_v200 met3res_v200)

Executing: geomStamp(v25_met4 met4trm_dg)

Executing: met4_v25 = geomOverlap(met4trm_dg v25_met4 sameNet)

Executing: met4res_v25 = geomButting(met4res met4_v25)

Executing: met4_v25r = geomOr(met4_v25 met4res_v25)

Executing: geomStamp(v60_met4 met4trm_dg)

Executing: met4_v60 = geomOverlap(met4trm_dg v60_met4 sameNet)

Executing: met4res_v60 = geomButting(met4res met4_v60)

Executing: met4_v60r = geomOr(met4_v60 met4res_v60)

Executing: geomStamp(v100_met4 met4trm_dg)

Executing: met4_v100 = geomOverlap(met4trm_dg v100_met4 sameNet)

Executing: met4res_v100 = geomButting(met4res met4_v100)

Executing: met4_v100r = geomOr(met4_v100 met4res_v100)

Executing: geomStamp(v200_met4 met4trm_dg)

Executing: met4_v200 = geomOverlap(met4trm_dg v200_met4 sameNet)

Executing: met4res_v200 = geomButting(met4res met4_v200)

Executing: met4_v200r = geomOr(met4_v200 met4res_v200)

Executing: geomStamp(v25_mtp mtptrm_dg)

Executing: mtp_v25 = geomOverlap(mtptrm_dg v25_mtp sameNet)

Executing: mtpres_v25 = geomButting(mtpres mtp_v25)

Executing: mtp_v25r = geomOr(mtp_v25 mtpres_v25)

Executing: geomStamp(v60_mtp mtptrm_dg)

Executing: mtp_v60 = geomOverlap(mtptrm_dg v60_mtp sameNet)

Executing: mtpres_v60 = geomButting(mtpres mtp_v60)

Executing: mtp_v60r = geomOr(mtp_v60 mtpres_v60)

Executing: geomStamp(v100_mtp mtptrm_dg)

Executing: mtp_v100 = geomOverlap(mtptrm_dg v100_mtp sameNet)

Executing: mtpres_v100 = geomButting(mtpres mtp_v100)

Executing: mtp_v100r = geomOr(mtp_v100 mtpres_v100)

Executing: geomStamp(v200_mtp mtptrm_dg)

Executing: mtp_v200 = geomOverlap(mtptrm_dg v200_mtp sameNet)

Executing: mtpres_v200 = geomButting(mtpres mtp_v200)

Executing: mtp_v200r = geomOr(mtp_v200 mtpres_v200)

Executing: geomStamp(vm25_p1 polytrm_dg)

Executing: geomStamp(vm25_met1 met1trm_dg)

Executing: geomStamp(vm25_met2 met2trm_dg)

Executing: poly_vm25 = geomOverlap(polytrm_dg vm25_p1 sameNet)

Executing: met1_vm25 = geomOverlap(met1trm_dg vm25_met1 sameNet)

Executing: met2_vm25 = geomOverlap(met2trm_dg vm25_met2 sameNet)

Executing: met1res_vm25 = geomButting(met1res met1_vm25)

Executing: met1_vm25r = geomOr(met1_vm25 met1res_vm25)

Executing: met2res_vm25 = geomButting(met2res met2_vm25)

Executing: met2_vm25r = geomOr(met2_vm25 met2res_vm25)

Executing: geomStamp(vm60_p1 polytrm_dg)

Executing: geomStamp(vm60_met1 met1trm_dg)

Executing: geomStamp(vm60_met2 met2trm_dg)

Executing: poly_vm60 = geomOverlap(polytrm_dg vm60_p1 sameNet)

Executing: met1_vm60 = geomOverlap(met1trm_dg vm60_met1 sameNet)

Executing: met2_vm60 = geomOverlap(met2trm_dg vm60_met2 sameNet)

Executing: met1res_vm60 = geomButting(met1res met1_vm60)

Executing: met1_vm60r = geomOr(met1_vm60 met1res_vm60)

Executing: met2res_vm60 = geomButting(met2res met2_vm60)

Executing: met2_vm60r = geomOr(met2_vm60 met2res_vm60)

Executing: geomStamp(vm100_p1 polytrm_dg)

Executing: geomStamp(vm100_met1 met1trm_dg)

Executing: geomStamp(vm100_met2 met2trm_dg)

Executing: poly_vm100 = geomOverlap(polytrm_dg vm100_p1 sameNet)

Executing: met1_vm100 = geomOverlap(met1trm_dg vm100_met1 sameNet)

Executing: met2_vm100 = geomOverlap(met2trm_dg vm100_met2 sameNet)

Executing: met1res_vm100 = geomButting(met1res met1_vm100)

Executing: met1_vm100r = geomOr(met1_vm100 met1res_vm100)

Executing: met2res_vm100 = geomButting(met2res met2_vm100)

Executing: met2_vm100r = geomOr(met2_vm100 met2res_vm100)

Executing: geomStamp(vm200_p1 polytrm_dg)

Executing: geomStamp(vm200_met1 met1trm_dg)

Executing: geomStamp(vm200_met2 met2trm_dg)

Executing: poly_vm200 = geomOverlap(polytrm_dg vm200_p1 sameNet)

Executing: met1_vm200 = geomOverlap(met1trm_dg vm200_met1 sameNet)

Executing: met2_vm200 = geomOverlap(met2trm_dg vm200_met2 sameNet)

Executing: met1res_vm200 = geomButting(met1res met1_vm200)

Executing: met1_vm200r = geomOr(met1_vm200 met1res_vm200)

Executing: met2res_vm200 = geomButting(met2res met2_vm200)

Executing: met2_vm200r = geomOr(met2_vm200 met2res_vm200)

Executing: geomStamp(vm25_met3 met3trm_dg)

Executing: met3_vm25 = geomOverlap(met3trm_dg vm25_met3 sameNet)

Executing: met3res_vm25 = geomButting(met3res met3_vm25)

Executing: met3_vm25r = geomOr(met3_vm25 met3res_vm25)

Executing: geomStamp(vm60_met3 met3trm_dg)

Executing: met3_vm60 = geomOverlap(met3trm_dg vm60_met3 sameNet)

Executing: met3res_vm60 = geomButting(met3res met3_vm60)

Executing: met3_vm60r = geomOr(met3_vm60 met3res_vm60)

Executing: geomStamp(vm100_met3 met3trm_dg)

Executing: met3_vm100 = geomOverlap(met3trm_dg vm100_met3 sameNet)

Executing: met3res_vm100 = geomButting(met3res met3_vm100)

Executing: met3_vm100r = geomOr(met3_vm100 met3res_vm100)

Executing: geomStamp(vm200_met3 met3trm_dg)

Executing: met3_vm200 = geomOverlap(met3trm_dg vm200_met3 sameNet)

Executing: met3res_vm200 = geomButting(met3res met3_vm200)

Executing: met3_vm200r = geomOr(met3_vm200 met3res_vm200)

Executing: geomStamp(vm25_met4 met4trm_dg)

Executing: met4_vm25 = geomOverlap(met4trm_dg vm25_met4 sameNet)

Executing: met4res_vm25 = geomButting(met4res met4_vm25)

Executing: met4_vm25r = geomOr(met4_vm25 met4res_vm25)

Executing: geomStamp(vm60_met4 met4trm_dg)

Executing: met4_vm60 = geomOverlap(met4trm_dg vm60_met4 sameNet)

Executing: met4res_vm60 = geomButting(met4res met4_vm60)

Executing: met4_vm60r = geomOr(met4_vm60 met4res_vm60)

Executing: geomStamp(vm100_met4 met4trm_dg)

Executing: met4_vm100 = geomOverlap(met4trm_dg vm100_met4 sameNet)

Executing: met4res_vm100 = geomButting(met4res met4_vm100)

Executing: met4_vm100r = geomOr(met4_vm100 met4res_vm100)

Executing: geomStamp(vm200_met4 met4trm_dg)

Executing: met4_vm200 = geomOverlap(met4trm_dg vm200_met4 sameNet)

Executing: met4res_vm200 = geomButting(met4res met4_vm200)

Executing: met4_vm200r = geomOr(met4_vm200 met4res_vm200)

Executing: geomStamp(vm25_mtp mtptrm_dg)

Executing: mtp_vm25 = geomOverlap(mtptrm_dg vm25_mtp sameNet)

Executing: mtpres_vm25 = geomButting(mtpres mtp_vm25)

Executing: mtp_vm25r = geomOr(mtp_vm25 mtpres_vm25)

Executing: geomStamp(vm60_mtp mtptrm_dg)

Executing: mtp_vm60 = geomOverlap(mtptrm_dg vm60_mtp sameNet)

Executing: mtpres_vm60 = geomButting(mtpres mtp_vm60)

Executing: mtp_vm60r = geomOr(mtp_vm60 mtpres_vm60)

Executing: geomStamp(vm100_mtp mtptrm_dg)

Executing: mtp_vm100 = geomOverlap(mtptrm_dg vm100_mtp sameNet)

Executing: mtpres_vm100 = geomButting(mtpres mtp_vm100)

Executing: mtp_vm100r = geomOr(mtp_vm100 mtpres_vm100)

Executing: geomStamp(vm200_mtp mtptrm_dg)

Executing: mtp_vm200 = geomOverlap(mtptrm_dg vm200_mtp sameNet)

Executing: mtpres_vm200 = geomButting(mtpres mtp_vm200)

Executing: mtp_vm200r = geomOr(mtp_vm200 mtpres_vm200)

Executing: poly_res = geomCat(polyre2 rpp1s pfuse)

Executing: poly_res_v200 = geomButting(poly_res poly_v200)

Executing: poly_v200r = geomOr(poly_v200 poly_res_v200)

Executing: poly_res_v100 = geomButting(poly_res poly_v100)

Executing: poly_v100r = geomOr(poly_v100 poly_res_v100)

Executing: poly_res_v60 = geomButting(poly_res poly_v60)

Executing: poly_v60r = geomOr(poly_v60 poly_res_v60)

Executing: poly_res_vm200 = geomButting(poly_res poly_vm200)

Executing: poly_vm200r = geomOr(poly_vm200 poly_res_vm200)

Executing: poly_res_vm100 = geomButting(poly_res poly_vm100)

Executing: poly_vm100r = geomOr(poly_vm100 poly_res_vm100)

Executing: poly_res_vm60 = geomButting(poly_res poly_vm60)

Executing: poly_vm60r = geomOr(poly_vm60 poly_res_vm60)

Executing: poly_res_v25 = geomButting(poly_res poly_v25)

Executing: poly_v25r = geomOr(poly_v25 poly_res_v25)

Executing: poly_res_vm25 = geomButting(poly_res poly_vm25)

Executing: poly_vm25r = geomOr(poly_vm25 poly_res_vm25)

Executing: vg_p1 = geomOr(v200_p1 v100_p1 v60_p1)

Executing: vmg_p1 = geomOr(vm200_p1 vm100_p1 vm60_p1)

Executing: vmg25_p1_a = geomOr(v25_p1 vm25_p1)

Executing: val_p1_a = geomOr(vmg25_p1_a vg_p1 vmg_p1)

Executing: vg_p1r = geomOr(poly_v200r poly_v100r poly_v60r)

Executing: vmg_p1r = geomOr(poly_vm200r poly_vm100r poly_vm60r)

Executing: val_p1r = geomOr(vg_p1r vmg_p1r)

Executing: poly_vn0 = geomAndNot(geomOr(polytrm_dg poly_res) val_p1r)

Executing: p1_vn0r_a = geomAndNot(poly_vn0 geomOverlap(poly_vn0 vmg25_p1_a))

Executing: poly_vn1_1 = geomOr(poly_vn0 poly_v25r)

Executing: poly_vn1_2 = geomOr(poly_vn0 poly_vm25r)

Executing: poly_vn1_3 = geomOr(poly_vn1_1 poly_vn1_2)

Executing: diffn_v200 = geomNodeRelate(ndiff v200_met1 conn)

Executing: diffp_v200 = geomNodeRelate(pdiff v200_met1 conn)

Executing: diffn_v100 = geomNodeRelate(ndiff v100_met1 conn)

Executing: diffp_v100 = geomNodeRelate(pdiff v100_met1 conn)

Executing: diffn_v60 = geomNodeRelate(ndiff v60_met1 conn)

Executing: diffp_v60 = geomNodeRelate(pdiff v60_met1 conn)

Executing: diffn_v25 = geomNodeRelate(ndiff v25_met1 conn)

Executing: diffp_v25 = geomNodeRelate(pdiff v25_met1 conn)

Executing: diffn_vm200 = geomNodeRelate(ndiff vm200_met1 conn)

Executing: diffp_vm200 = geomNodeRelate(pdiff vm200_met1 conn)

Executing: diffn_vm100 = geomNodeRelate(ndiff vm100_met1 conn)

Executing: diffp_vm100 = geomNodeRelate(pdiff vm100_met1 conn)

Executing: diffn_vm60 = geomNodeRelate(ndiff vm60_met1 conn)

Executing: diffp_vm60 = geomNodeRelate(pdiff vm60_met1 conn)

Executing: diffn_vm25 = geomNodeRelate(ndiff vm25_met1 conn)

Executing: diffp_vm25 = geomNodeRelate(pdiff vm25_met1 conn)

Executing: rdn_v200 = geomButting(rdn_a1 diffn_v200)

Executing: rdn_v100 = geomButting(rdn_a1 diffn_v100)

Executing: rdn_v60 = geomButting(rdn_a1 diffn_v60)

Executing: rdn_v25 = geomButting(rdn_a1 diffn_v25)

Executing: diffn_v200r = geomOr(diffn_v200 rdn_v200)

Executing: diffn_v100r = geomOr(diffn_v100 rdn_v100)

Executing: diffn_v60r = geomOr(diffn_v60 rdn_v60)

Executing: diffn_v25r = geomOr(diffn_v25 rdn_v25)

Executing: rdp_v200 = geomButting(rdp_a1 diffp_v200)

Executing: rdp_v100 = geomButting(rdp_a1 diffp_v100)

Executing: rdp_v60 = geomButting(rdp_a1 diffp_v60)

Executing: rdp_v25 = geomButting(rdp_a1 diffp_v25)

Executing: diffp_v200r = geomOr(diffp_v200 rdp_v200)

Executing: diffp_v100r = geomOr(diffp_v100 rdp_v100)

Executing: diffp_v60r = geomOr(diffp_v60 rdp_v60)

Executing: diffp_v25r = geomOr(diffp_v25 rdp_v25)

Executing: rdn_vm200 = geomButting(rdn_a1 diffn_vm200)

Executing: rdn_vm100 = geomButting(rdn_a1 diffn_vm100)

Executing: rdn_vm60 = geomButting(rdn_a1 diffn_vm60)

Executing: rdn_vm25 = geomButting(rdn_a1 diffn_vm25)

Executing: diffn_vm200r = geomOr(diffn_vm200 rdn_vm200)

Executing: diffn_vm100r = geomOr(diffn_vm100 rdn_vm100)

Executing: diffn_vm60r = geomOr(diffn_vm60 rdn_vm60)

Executing: diffn_vm25r = geomOr(diffn_vm25 rdn_vm25)

Executing: rdp_vm200 = geomButting(rdp_a1 diffp_vm200)

Executing: rdp_vm100 = geomButting(rdp_a1 diffp_vm100)

Executing: rdp_vm60 = geomButting(rdp_a1 diffp_vm60)

Executing: rdp_vm25 = geomButting(rdp_a1 diffp_vm25)

Executing: diffp_vm200r = geomOr(diffp_vm200 rdp_vm200)

Executing: diffp_vm100r = geomOr(diffp_vm100 rdp_vm100)

Executing: diffp_vm60r = geomOr(diffp_vm60 rdp_vm60)

Executing: diffp_vm25r = geomOr(diffp_vm25 rdp_vm25)

Executing: diff_v200r = geomOr(diffn_v200r diffp_v200r)

Executing: diff_v100r = geomOr(diffn_v100r diffp_v100r)

Executing: diff_v60r = geomOr(diffn_v60r diffp_v60r)

Executing: diff_v25r = geomOr(diffn_v25r diffp_v25r)

Executing: diff_vm200r = geomOr(diffn_vm200r diffp_vm200r)

Executing: diff_vm100r = geomOr(diffn_vm100r diffp_vm100r)

Executing: diff_vm60r = geomOr(diffn_vm60r diffp_vm60r)

Executing: diff_vm25r = geomOr(diffn_vm25r diffp_vm25r)

Executing: vg_diffn = geomOr(diffn_v200 diffn_v100 diffn_v60)

Executing: vmg_diffn = geomOr(diffn_vm200 diffn_vm100 diffn_vm60)

Executing: vmg25_diffn_a = geomOr(diffn_v25 diffn_vm25)

Executing: val_diffn_a = geomOr(vmg25_diffn_a vg_diffn vmg_diffn)

Executing: vg_diffp = geomOr(diffp_v200 diffp_v100 diffp_v60)

Executing: vmg_diffp = geomOr(diffp_vm200 diffp_vm100 diffp_vm60)

Executing: vmg25_diffp_a = geomOr(diffp_v25 diffp_vm25)

Executing: val_diffp_a = geomOr(vmg25_diffp_a vg_diffp vmg_diffp)

Executing: diffnl = geomAndNot(ndiff val_diffn_a)

Executing: diffpl = geomAndNot(pdiff val_diffp_a)

Executing: vmg25_diff_a = geomOr(vmg25_diffn_a vmg25_diffp_a)

Executing: vg_diffr = geomOr(diff_v200r diff_v100r diff_v60r)

Executing: vmg_diffr = geomOr(diff_vm200r diff_vm100r diff_vm60r)

Executing: val_diffr = geomOr(vg_diffr vmg_diffr)

Executing: diff_vn0 = geomAndNot(geomOr(geomOr(pdiff rdp_a) geomOr(ndiff rdn_a)) val_diffr)

Executing: diff_vn0r_a = geomAndNot(diff_vn0 geomOverlap(diff_vn0 vmg25_diff_a))

Executing: diff_vn1_1 = geomOr(diff_vn0 diff_v25r)

Executing: diff_vn1_2 = geomOr(diff_vn0 diff_vm25r)

Executing: diff_vn1_3 = geomOr(diff_vn1_1 diff_vn1_2)

Executing: err_S3P1a = geomOr(drc(poly_v60r poly_vn1_1 ((0 < sep) < 0.5) shielded) drc(p...

Executing: err_S3P1b = geomOr(drc(poly_vm60r poly_vn1_2 ((0 < sep) < 0.5) shielded) drc(...

Executing: err_S3P1c = geomOr(drc(poly_vm25r poly_v25r ((0 < sep) < 0.5)) drc(poly_vm25r...

Executing: err_S3P1 = geomAndNot(geomOr(err_S3P1a err_S3P1b err_S3P1c) geomOr(drc(polytr...
	   errorLayer(err_S3P1 "S3P1 : Minimum POLY1 spacing for different voltage class = 0.5")

Executing: err_S4P1a = geomOr(drc(poly_v100r poly_vn1_1 ((0 < sep) < 0.8) shielded) drc(...

Executing: err_S4P1b = geomOr(drc(poly_vm100r poly_vn1_2 ((0 < sep) < 0.8) shielded) drc...

Executing: err_S4P1 = geomAndNot(geomOr(err_S4P1a err_S4P1b) geomOr(drc(polytrm (sep < 0...
	   errorLayer(err_S4P1 "S4P1 : Minimum POLY1 spacing for different voltage class = 0.8")

Executing: err_S5P1aa = geomOr(drc(poly_v200r poly_vn1_3 ((0 < sep) < 1.3) shielded) drc...

Executing: err_S5P1ab = geomOr(drc(poly_v100r poly_vm25r ((0 < sep) < 1.3)) drc(poly_vm1...

Executing: err_S5P1a = geomOr(err_S5P1aa err_S5P1ab)

Executing: err_S5P1ba = geomOr(drc(poly_v200r poly_v60r ((0 < sep) < 1.3) shielded) drc(...

Executing: err_S5P1bb = geomOr(drc(poly_v100r poly_vm60r ((0 < sep) < 1.3) shielded) drc...

Executing: err_S5P1bc = geomOr(drc(poly_v100r poly_vm100r ((0 < sep) < 1.3) shielded) dr...

Executing: err_S5P1b = geomOr(err_S5P1ba err_S5P1bb err_S5P1bc)

Executing: err_S5P1c = geomOr(drc(poly_v200r vmg_p1r ((0 < sep) < 1.3) shielded) drc(pol...

Executing: err_S5P1 = geomAndNot(geomOr(err_S5P1a err_S5P1b err_S5P1c) geomOr(drc(polytr...
	   errorLayer(err_S5P1 "S5P1 : Minimum POLY1 spacing for different voltage class = 1.3")

Executing: err_S5P1DFa = geomOr(drc(poly_v60r diff_vn1_1 ((0 < sep) < 0.5) shielded) drc...

Executing: err_S5P1DFb = geomOr(drc(poly_vm25r diff_v25r ((0 < sep) < 0.5) shielded) drc...

Executing: err_S5P1DFc = geomOr(drc(poly_vm60r diff_vn1_2 ((0 < sep) < 0.5) shielded) dr...

Executing: err_S5P1DFd = geomOr(drc(diff_vm60r poly_vn1_2 ((0 < sep) < 0.5) shielded) dr...

Executing: err_S5P1DFe = geomOr(drc(poly_vm25r diff_vn0r_a ((0 < sep) < 0.5) shielded) d...

Executing: err_S5P1DF = geomAndNot(geomOr(err_S5P1DFa err_S5P1DFb err_S5P1DFc err_S5P1DF...
	   errorLayer(err_S5P1DF "S5P1DF : Minimum POLY1 spacing to DIFF for different voltage class = 0.5")

Executing: err_S7P1DFa = geomOr(drc(poly_v100r diff_vn1_1 ((0 < sep) < 0.8) shielded) dr...

Executing: err_S7P1DFb = geomOr(drc(poly_vm100r diff_vn1_2 ((0 < sep) < 0.8) shielded) d...

Executing: err_S7P1DFc = geomOr(drc(poly_vm25r diff_v60r ((0 < sep) < 0.8) shielded) drc...

Executing: err_S7P1DFd = geomOr(drc(diff_vm25r poly_v60r ((0 < sep) < 0.8) shielded) drc...

Executing: err_S7P1DFe = geomOr(drc(poly_v200r diff_v100r ((0 < sep) < 0.8) shielded) dr...

Executing: err_S7P1DFf = geomOr(drc(diff_v200r poly_v100r ((0 < sep) < 0.8) shielded) dr...

Executing: err_S7P1DF = geomAndNot(geomOr(err_S7P1DFa err_S7P1DFb err_S7P1DFc err_S7P1DF...
	   errorLayer(err_S7P1DF "S7P1DF : Minimum POLY1 spacing to DIFF for different voltage class = 0.8")

Executing: err_S8P1DFaa = geomOr(drc(poly_v200r diff_vn1_3 ((0 < sep) < 1.3) shielded) d...

Executing: err_S8P1DFab = geomOr(drc(poly_vm200r diff_vn1_3 ((0 < sep) < 1.3) shielded) ...

Executing: err_S8P1DFac = geomOr(drc(poly_v100r diff_vm25r ((0 < sep) < 1.3) shielded) d...

Executing: err_S8P1DFad = geomOr(drc(diff_v100r poly_vm25r ((0 < sep) < 1.3) shielded) d...

Executing: err_S8P1DFa = geomOr(err_S8P1DFaa err_S8P1DFab err_S8P1DFac err_S8P1DFad)

Executing: err_S8P1DFba = geomOr(drc(poly_v200r diff_v60r ((0 < sep) < 1.3) shielded) dr...

Executing: err_S8P1DFbb = geomOr(drc(poly_v100r diff_vm60r ((0 < sep) < 1.3) shielded) d...

Executing: err_S8P1DFbc = geomOr(drc(poly_v100r diff_vm100r ((0 < sep) < 1.3) shielded) ...

Executing: err_S8P1DFbd = geomOr(drc(diff_v200r poly_v60r ((0 < sep) < 1.3) shielded) dr...

Executing: err_S8P1DFbe = geomOr(drc(diff_v100r poly_vm60r ((0 < sep) < 1.3) shielded) d...

Executing: err_S8P1DFbf = geomOr(drc(diff_v100r poly_vm100r ((0 < sep) < 1.3) shielded) ...

Executing: err_S8P1DFb = geomOr(err_S8P1DFba err_S8P1DFbb err_S8P1DFbc err_S8P1DFbd err_...

Executing: err_S8P1DFca = geomOr(drc(poly_v200r vmg_diffr ((0 < sep) < 1.3) shielded) dr...

Executing: err_S8P1DFcb = geomOr(drc(diff_v200r vmg_p1r ((0 < sep) < 1.3) shielded) drc(...

Executing: err_S8P1DFc = geomOr(err_S8P1DFca err_S8P1DFcb)

Executing: err_S8P1DF = geomAndNot(geomOr(err_S8P1DFa err_S8P1DFb err_S8P1DFc) geomOr(dr...
	   errorLayer(err_S8P1DF "S8P1DF : Minimum POLY1 spacing to DIFF for different voltage class = 1.3")

Executing: vg_met1 = geomOr(v200_met1 v100_met1 v60_met1)

Executing: vmg_met1 = geomOr(vm200_met1 vm100_met1 vm60_met1)

Executing: vmg25_met1_a = geomOr(v25_met1 vm25_met1)

Executing: val_met1_a = geomOr(vmg25_met1_a vg_met1 vmg_met1)

Executing: vg_m1r = geomOr(met1_v200r met1_v100r met1_v60r)

Executing: vmg_m1r = geomOr(met1_vm200r met1_vm100r met1_vm60r)

Executing: val_m1r = geomOr(vg_m1r vmg_m1r)

Executing: met1_vn0 = geomAndNot(geomOr(met1trm_dg met1res) val_m1r)

Executing: met1_vn0r_a = geomAndNot(met1_vn0 geomOverlap(met1_vn0 vmg25_met1_a))

Executing: met1_vn1_1 = geomOr(met1_vn0 met1_v25r)

Executing: met1_vn1_2 = geomOr(met1_vn0 met1_vm25r)

Executing: met1_vn1_3 = geomOr(met1_vn1_1 met1_vn1_2)

Executing: n_hvta_1 = geomOr(nhvta_1 ndhvta_1)

Executing: n_hvta_ndf = geomStraddle(geomAnd(ndf tub) n_hvta_1)

Executing: n_hvta_ndiff = geomInside(ndiff1 n_hvta_ndf)

Executing: n_hvta_s1 = geomSize(geomGetEdge(n_hvta_ndf inside n_hvta_1) -1.8)

Executing: n_hvta_s2 = geomSize(geomGetEdge(n_hvta_s1 butting ndiff1) -1.25)

Executing: n_hvta_ex61 = geomGetEdge(n_hvta_ndiff butting n_hvta_s2)

Executing: n_hvta_ex62 = geomGetEdge(n_hvta_ndiff outside n_hvta_s2)

Executing: n_hvta_ex63 = geomSize(n_hvta_ex61 0.5)

Executing: n_hvta_ex60 = geomOr(n_hvta_ndiff n_hvta_ex63)

Executing: n_hvta_ex65 = geomAndNot(geomSize(geomSize(n_hvta_ex62 1.5) 0.5) n_hvta_ex60)

Executing: n_hvta_ex67a = geomSize(geomGetEdge(n_hvta_ex60 outside n_hvta_ex63) 2.0)

Executing: n_hvta_ex67b = geomSize(geomGetEdge(n_hvta_ex67a inside n_hvta_ex65) 0.4)

Executing: n_hvta_ex67 = geomOr(n_hvta_ex67a n_hvta_ex67b)

Executing: n_hvta_ex3 = geomOr(n_hvta_ex63 geomAndNot(n_hvta_ex65 n_hvta_ex67))

Executing: met1_vn1_1_ex = geomAndNot(met1_vn1_1 n_hvta_ex3)

Executing: met1_vn1_2_ex = geomAndNot(met1_vn1_2 n_hvta_ex3)

Executing: met1_v25r_ex = geomAndNot(met1_v25r n_hvta_ex3)

Executing: met1_vm25r_ex = geomAndNot(met1_vm25r n_hvta_ex3)

Executing: met1_v60r_ex = geomAndNot(met1_v60r n_hvta_ex3)

Executing: met1_vm60r_ex = geomAndNot(met1_vm60r n_hvta_ex3)

Executing: met1_v100r_ex = geomAndNot(met1_v100r n_hvta_ex3)

Executing: met1_vm100r_ex = geomAndNot(met1_vm100r n_hvta_ex3)

Executing: met1_vn0r_a_ex = geomAndNot(met1_vn0r_a n_hvta_ex3)

Executing: err_S4M1a = geomOr(drc(met1_v60r_ex met1_vn1_1_ex ((0 < sep) < 0.38)) drc(met...

Executing: err_S4M1b = geomOr(drc(met1_vm60r_ex met1_vn1_2_ex ((0 < sep) < 0.38)) drc(me...

Executing: err_S4M1c = geomOr(drc(met1_vm25r_ex met1_v25r_ex ((0 < sep) < 0.38)) drc(met...

Executing: err_S4M1 = geomAndNot(geomOr(err_S4M1a err_S4M1b err_S4M1c) geomOr(drc(met1tr...
	   errorLayer(err_S4M1 "S4M1 : Minimum MET1 spacing for different voltage class = 0.38")

Executing: err_S5M1a = geomOr(drc(met1_v100r met1_vn1_1 ((0 < sep) < 0.6)) drc(met1_vm25...

Executing: err_S5M1b = geomOr(drc(met1_vm100r met1_vn1_2 ((0 < sep) < 0.6)) drc(met1_v25...

Executing: err_S5M1 = geomAndNot(geomOr(err_S5M1a err_S5M1b) geomOr(drc(met1trm (sep < 0...
	   errorLayer(err_S5M1 "S5M1 : Minimum MET1 spacing for different voltage class = 0.6")

Executing: err_S6M1aa = geomOr(drc(met1_v200r met1_vn1_3 ((0 < sep) < 1.0)) drc(met1_vm2...

Executing: err_S6M1ab = geomOr(drc(met1_v100r met1_vm25r ((0 < sep) < 1.0)) drc(met1_vm1...

Executing: err_S6M1a = geomOr(err_S6M1aa err_S6M1ab)

Executing: err_S6M1ba = geomOr(drc(met1_v200r met1_v60r ((0 < sep) < 1.0)) drc(met1_vm20...

Executing: err_S6M1bb = geomOr(drc(met1_v100r met1_vm60r ((0 < sep) < 1.0)) drc(met1_vm1...

Executing: err_S6M1bc = geomOr(drc(met1_v100r met1_vm100r ((0 < sep) < 1.0)) drc(met1_vm...

Executing: err_S6M1b = geomOr(err_S6M1ba err_S6M1bb err_S6M1bc)

Executing: err_S6M1c = geomOr(drc(met1_v200r vmg_m1r ((0 < sep) < 1.0)) drc(met1_vm200r ...

Executing: err_S6M1 = geomAndNot(geomOr(err_S6M1a err_S6M1b err_S6M1c) geomOr(drc(met1tr...
	   errorLayer(err_S6M1 "S6M1 : Minimum MET1 spacing for different voltage class = 1.0")

Executing: vg_met2 = geomOr(v200_met2 v100_met2 v60_met2)

Executing: vmg_met2 = geomOr(vm200_met2 vm100_met2 vm60_met2)

Executing: vmg25_met2_a = geomOr(v25_met2 vm25_met2)

Executing: val_met2_a = geomOr(vmg25_met2_a vg_met2 vmg_met2)

Executing: vg_m2r = geomOr(met2_v200r met2_v100r met2_v60r)

Executing: vmg_m2r = geomOr(met2_vm200r met2_vm100r met2_vm60r)

Executing: val_m2r = geomOr(vg_m2r vmg_m2r)

Executing: met2_vn0 = geomAndNot(geomOr(met2trm_dg met2res) val_m2r)

Executing: met2_vn0r_a = geomAndNot(met2_vn0 geomOverlap(met2_vn0 vmg25_met2_a))

Executing: met2_vn1_1 = geomOr(met2_vn0 met2_v25r)

Executing: met2_vn1_2 = geomOr(met2_vn0 met2_vm25r)

Executing: met2_vn1_3 = geomOr(met2_vn1_1 met2_vn1_2)

Executing: err_S4M2a = geomOr(drc(met2_v60r met2_vn1_1 ((0 < sep) < 0.4)) drc(met2_v100r...

Executing: err_S4M2b = geomOr(drc(met2_vm60r met2_vn1_2 ((0 < sep) < 0.4)) drc(met2_vm60...

Executing: err_S4M2c = geomOr(drc(met2_vm25r met2_v25r ((0 < sep) < 0.4)) drc(met2_vm25r...

Executing: err_S4M2 = geomAndNot(geomOr(err_S4M2a err_S4M2b err_S4M2c) geomOr(drc(met2tr...
	   errorLayer(err_S4M2 "S4M2 : Minimum MET2 spacing for different voltage class = 0.4")

Executing: err_S5M2a = geomOr(drc(met2_v100r met2_vn1_1 ((0 < sep) < 0.6)) drc(met2_vm25...

Executing: err_S5M2b = geomOr(drc(met2_vm100r met2_vn1_2 ((0 < sep) < 0.6)) drc(met2_v25...

Executing: err_S5M2 = geomAndNot(geomOr(err_S5M2a err_S5M2b) geomOr(drc(met2trm (sep < 0...
	   errorLayer(err_S5M2 "S5M2 : Minimum MET2 spacing for different voltage class = 0.6")

Executing: err_S6M2aa = geomOr(drc(met2_v200r met2_vn1_3 ((0 < sep) < 1.0)) drc(met2_vm2...

Executing: err_S6M2ab = geomOr(drc(met2_v100r met2_vm25r ((0 < sep) < 1.0)) drc(met2_vm1...

Executing: err_S6M2a = geomOr(err_S6M2aa err_S6M2ab)

Executing: err_S6M2ba = geomOr(drc(met2_v200r met2_v60r ((0 < sep) < 1.0)) drc(met2_vm20...

Executing: err_S6M2bb = geomOr(drc(met2_v100r met2_vm60r ((0 < sep) < 1.0)) drc(met2_vm1...

Executing: err_S6M2bc = geomOr(drc(met2_v100r met2_vm100r ((0 < sep) < 1.0)) drc(met2_vm...

Executing: err_S6M2b = geomOr(err_S6M2ba err_S6M2bb err_S6M2bc)

Executing: err_S6M2c = geomOr(drc(met2_v200r vmg_m2r ((0 < sep) < 1.0)) drc(met2_vm200r ...

Executing: err_S6M2 = geomAndNot(geomOr(err_S6M2a err_S6M2b err_S6M2c) geomOr(drc(met2tr...
	   errorLayer(err_S6M2 "S6M2 : Minimum MET2 spacing for different voltage class = 1.0")

Executing: vg_met3 = geomOr(v200_met3 v100_met3 v60_met3)

Executing: vmg_met3 = geomOr(vm200_met3 vm100_met3 vm60_met3)

Executing: vmg25_met3_a = geomOr(v25_met3 vm25_met3)

Executing: val_met3_a = geomOr(vmg25_met3_a vg_met3 vmg_met3)

Executing: vg_m3r = geomOr(met3_v200r met3_v100r met3_v60r)

Executing: vmg_m3r = geomOr(met3_vm200r met3_vm100r met3_vm60r)

Executing: val_m3r = geomOr(vg_m3r vmg_m3r)

Executing: met3_vn0 = geomAndNot(geomOr(met3trm_dg met3res) val_m3r)

Executing: met3_vn0r_a = geomAndNot(met3_vn0 geomOverlap(met3_vn0 vmg25_met3_a))

Executing: met3_vn1_1 = geomOr(met3_vn0 met3_v25r)

Executing: met3_vn1_2 = geomOr(met3_vn0 met3_vm25r)

Executing: met3_vn1_3 = geomOr(met3_vn1_1 met3_vn1_2)

Executing: err_S4M3a = geomOr(drc(met3_v60r met3_vn1_1 ((0 < sep) < 0.4)) drc(met3_v100r...

Executing: err_S4M3b = geomOr(drc(met3_vm60r met3_vn1_2 ((0 < sep) < 0.4)) drc(met3_vm60...

Executing: err_S4M3c = geomOr(drc(met3_vm25r met3_v25r ((0 < sep) < 0.4)) drc(met3_vm25r...

Executing: err_S4M3 = geomAndNot(geomOr(err_S4M3a err_S4M3b err_S4M3c) geomOr(drc(met3tr...
	   errorLayer(err_S4M3 "S4M3 : Minimum MET3 spacing for different voltage class = 0.4")

Executing: err_S5M3a = geomOr(drc(met3_v100r met3_vn1_1 ((0 < sep) < 0.6)) drc(met3_vm25...

Executing: err_S5M3b = geomOr(drc(met3_vm100r met3_vn1_2 ((0 < sep) < 0.6)) drc(met3_v25...

Executing: err_S5M3 = geomAndNot(geomOr(err_S5M3a err_S5M3b) geomOr(drc(met3trm (sep < 0...
	   errorLayer(err_S5M3 "S5M3 : Minimum MET3 spacing for different voltage class = 0.6")

Executing: err_S6M3aa = geomOr(drc(met3_v200r met3_vn1_3 ((0 < sep) < 1.0)) drc(met3_vm2...

Executing: err_S6M3ab = geomOr(drc(met3_v100r met3_vm25r ((0 < sep) < 1.0)) drc(met3_vm1...

Executing: err_S6M3a = geomOr(err_S6M3aa err_S6M3ab)

Executing: err_S6M3ba = geomOr(drc(met3_v200r met3_v60r ((0 < sep) < 1.0)) drc(met3_vm20...

Executing: err_S6M3bb = geomOr(drc(met3_v100r met3_vm60r ((0 < sep) < 1.0)) drc(met3_vm1...

Executing: err_S6M3bc = geomOr(drc(met3_v100r met3_vm100r ((0 < sep) < 1.0)) drc(met3_vm...

Executing: err_S6M3b = geomOr(err_S6M3ba err_S6M3bb err_S6M3bc)

Executing: err_S6M3c = geomOr(drc(met3_v200r vmg_m3r ((0 < sep) < 1.0)) drc(met3_vm200r ...

Executing: err_S6M3 = geomAndNot(geomOr(err_S6M3a err_S6M3b err_S6M3c) geomOr(drc(met3tr...
	   errorLayer(err_S6M3 "S6M3 : Minimum MET3 spacing for different voltage class = 1.0")

Executing: vg_met4 = geomOr(v200_met4 v100_met4 v60_met4)

Executing: vmg_met4 = geomOr(vm200_met4 vm100_met4 vm60_met4)

Executing: vmg25_met4_a = geomOr(v25_met4 vm25_met4)

Executing: val_met4_a = geomOr(vmg25_met4_a vg_met4 vmg_met4)

Executing: vg_m4r = geomOr(met4_v200r met4_v100r met4_v60r)

Executing: vmg_m4r = geomOr(met4_vm200r met4_vm100r met4_vm60r)

Executing: val_m4r = geomOr(vg_m4r vmg_m4r)

Executing: met4_vn0 = geomAndNot(geomOr(met4trm_dg met4res) val_m4r)

Executing: met4_vn0r_a = geomAndNot(met4_vn0 geomOverlap(met4_vn0 vmg25_met4_a))

Executing: met4_vn1_1 = geomOr(met4_vn0 met4_v25r)

Executing: met4_vn1_2 = geomOr(met4_vn0 met4_vm25r)

Executing: met4_vn1_3 = geomOr(met4_vn1_1 met4_vn1_2)

Executing: err_S4M4a = geomOr(drc(met4_v60r met4_vn1_1 ((0 < sep) < 0.4)) drc(met4_v100r...

Executing: err_S4M4b = geomOr(drc(met4_vm60r met4_vn1_2 ((0 < sep) < 0.4)) drc(met4_vm60...

Executing: err_S4M4c = geomOr(drc(met4_vm25r met4_v25r ((0 < sep) < 0.4)) drc(met4_vm25r...

Executing: err_S4M4 = geomAndNot(geomOr(err_S4M4a err_S4M4b err_S4M4c) geomOr(drc(met4tr...
	   errorLayer(err_S4M4 "S4M4 : Minimum MET4 spacing for different voltage class = 0.4")

Executing: err_S5M4a = geomOr(drc(met4_v100r met4_vn1_1 ((0 < sep) < 0.6)) drc(met4_vm25...

Executing: err_S5M4b = geomOr(drc(met4_vm100r met4_vn1_2 ((0 < sep) < 0.6)) drc(met4_v25...

Executing: err_S5M4 = geomAndNot(geomOr(err_S5M4a err_S5M4b) geomOr(drc(met4trm (sep < 0...
	   errorLayer(err_S5M4 "S5M4 : Minimum MET4 spacing for different voltage class = 0.6")

Executing: err_S6M4aa = geomOr(drc(met4_v200r met4_vn1_3 ((0 < sep) < 1.0)) drc(met4_vm2...

Executing: err_S6M4ab = geomOr(drc(met4_v100r met4_vm25r ((0 < sep) < 1.0)) drc(met4_vm1...

Executing: err_S6M4a = geomOr(err_S6M4aa err_S6M4ab)

Executing: err_S6M4ba = geomOr(drc(met4_v200r met4_v60r ((0 < sep) < 1.0)) drc(met4_vm20...

Executing: err_S6M4bb = geomOr(drc(met4_v100r met4_vm60r ((0 < sep) < 1.0)) drc(met4_vm1...

Executing: err_S6M4bc = geomOr(drc(met4_v100r met4_vm100r ((0 < sep) < 1.0)) drc(met4_vm...

Executing: err_S6M4b = geomOr(err_S6M4ba err_S6M4bb err_S6M4bc)

Executing: err_S6M4c = geomOr(drc(met4_v200r vmg_m2r ((0 < sep) < 1.0)) drc(met4_vm200r ...

Executing: err_S6M4 = geomAndNot(geomOr(err_S6M4a err_S6M4b err_S6M4c) geomOr(drc(met4tr...
	   errorLayer(err_S6M4 "S6M4 : Minimum MET4 spacing for different voltage class = 1.0")

Executing: vg_mtp = geomOr(v200_mtp v100_mtp v60_mtp)

Executing: vmg_mtp = geomOr(vm200_mtp vm100_mtp vm60_mtp)

Executing: vmg25_mtp_a = geomOr(v25_mtp vm25_mtp)

Executing: val_mtp_a = geomOr(vmg25_mtp_a vg_mtp vmg_mtp)

Executing: vg_mettr = geomOr(mtp_v200r mtp_v100r mtp_v60r)

Executing: vmg_mettr = geomOr(mtp_vm200r mtp_vm100r mtp_vm60r)

Executing: val_mettr = geomOr(vg_mettr vmg_mettr)

Executing: mtp_vn0 = geomAndNot(geomOr(mtptrm_dg mtpres) val_mettr)

Executing: mtp_vn0r_a = geomAndNot(mtp_vn0 geomOverlap(mtp_vn0 vmg25_mtp_a))

Executing: mtp_vn1_1 = geomOr(mtp_vn0 mtp_v25r)

Executing: mtp_vn1_2 = geomOr(mtp_vn0 mtp_vm25r)

Executing: mtp_vn1_3 = geomOr(mtp_vn1_1 mtp_vn1_2)

Executing: err_S4MTa = geomOr(drc(mtp_v60r mtp_vn1_1 ((0 < sep) < 0.5)) drc(mtp_v100r mt...

Executing: err_S4MTb = geomOr(drc(mtp_vm60r mtp_vn1_2 ((0 < sep) < 0.5)) drc(mtp_vm60r m...

Executing: err_S4MTc = geomOr(drc(mtp_vm25r mtp_v25r ((0 < sep) < 0.5)) drc(mtp_vm25r mt...

Executing: err_S4MT = geomAndNot(geomOr(err_S4MTa err_S4MTb err_S4MTc) geomOr(drc(mtptrm...
	   errorLayer(err_S4MT "S4MT : Minimum METTP spacing for different voltage class = 0.5")

Executing: err_S5MTa = geomOr(drc(mtp_v100r mtp_vn1_1 ((0 < sep) < 0.8)) drc(mtp_vm25r m...

Executing: err_S5MTb = geomOr(drc(mtp_vm100r mtp_vn1_2 ((0 < sep) < 0.8)) drc(mtp_v25r m...

Executing: err_S5MT = geomAndNot(geomOr(err_S5MTa err_S5MTb) geomOr(drc(mtptrm (sep < 0....
	   errorLayer(err_S5MT "S5MT : Minimum METTP spacing for different voltage class = 0.8")

Executing: err_S6MTaa = geomOr(drc(mtp_v200r mtp_vn1_3 ((0 < sep) < 1.0)) drc(mtp_vm200r...

Executing: err_S6MTab = geomOr(drc(mtp_v100r mtp_vm25r ((0 < sep) < 1.0)) drc(mtp_vm100r...

Executing: err_S6MTa = geomOr(err_S6MTaa err_S6MTab)

Executing: err_S6MTba = geomOr(drc(mtp_v200r mtp_v60r ((0 < sep) < 1.0)) drc(mtp_vm200r ...

Executing: err_S6MTbb = geomOr(drc(mtp_v100r mtp_vm60r ((0 < sep) < 1.0)) drc(mtp_vm100r...

Executing: err_S6MTbc = geomOr(drc(mtp_v100r mtp_vm100r ((0 < sep) < 1.0)) drc(mtp_vm60r...

Executing: err_S6MTb = geomOr(err_S6MTba err_S6MTbb err_S6MTbc)

Executing: err_S6MTc = geomOr(drc(mtp_v200r vmg_m2r ((0 < sep) < 1.0)) drc(mtp_vm200r vg...

Executing: err_S6MT = geomAndNot(geomOr(err_S6MTa err_S6MTb err_S6MTc) geomOr(drc(mtptrm...
	   errorLayer(err_S6MT "S6MT : Minimum METTP spacing for different voltage class = 1.0")

Executing: err_rdnterm = geomGetEdge(diffnl butting geomButting(rdn_a1 val_diffn_a (keep...
	   errorLayer(err_rdnterm "Q1M1 : Resistor terminal net without VLABEL")

Executing: err_rdpterm = geomGetEdge(diffpl butting geomButting(rdp_a1 val_diffp_a (keep...
	   errorLayer(err_rdpterm "Q1M1 : Resistor terminal net without VLABEL")

Executing: rnw_term = geomButting(nwtrm rnw1)

Executing: val_rnw_term = geomStraddle(rnw_term val_diffn_a)

Executing: err_rnwterm = geomGetEdge(geomAndNot(rnw_term val_rnw_term) butting geomButti...
	   errorLayer(err_rnwterm "Q1M1 : Resistor terminal net without VLABEL")

Executing: polyres_v = geomButting(poly_res val_p1_a (keep == 1))

Executing: geomGetEdge(polyres_v butting polytrm_dg outside val_p1_a)

Executing: met1res_v = geomButting(met1res val_met1_a (keep == 1))

Executing: geomGetEdge(met1res_v butting met1trm_dg outside val_met1_a)

Executing: met2res_v = geomButting(met2res val_met2_a (keep == 1))

Executing: geomGetEdge(met2res_v butting met2trm_dg outside val_met2_a)

Executing: met3res_v = geomButting(met3res val_met3_a (keep == 1))

Executing: geomGetEdge(met3res_v butting met3trm_dg outside val_met3_a)

Executing: met4res_v = geomButting(met4res val_met4_a (keep == 1))

Executing: geomGetEdge(met4res_v butting met4trm_dg outside val_met4_a)

Executing: mtpres_v = geomButting(mtpres val_mtp_a (keep == 1))

Executing: geomGetEdge(mtpres_v butting mtptrm_dg outside val_mtp_a)

Executing: vg_ml = geomOr(v200_ml v100_ml v60_ml)

Executing: vmg_ml = geomOr(vm200_ml vm100_ml vm60_ml)

Executing: vmg25_ml_a = geomOr(v25_ml vm25_ml)

Executing: val_ml_a = geomOr(vmg25_ml_a vg_ml vmg_ml)

Executing: mtplres_v = geomButting(mtplres val_ml_a (keep == 1))

Executing: geomGetEdge(mtplres_v butting mtpltrm_dg outside val_ml_a)

Executing: N1 = geomOr(geomGetNon45(pwblk))
	   errorLayer(N1 "PWBLK not multiple 45 degrees")

Executing: N2 = geomOr(geomGetNon45(pad))
	   errorLayer(N2 "PAD not multiple 45 degrees")

Executing: N3 = geomOr(geomGetNon45(diff))
	   errorLayer(N3 "DIFF not multiple 45 degrees")

Executing: N4 = geomOr(geomGetNon45(pimp))
	   errorLayer(N4 "PIMP not multiple 45 degrees")

Executing: N5 = geomOr(geomGetNon45(nimp))
	   errorLayer(N5 "NIMP not multiple 45 degrees")

Executing: N6 = geomOr(geomGetNon45(sblk))
	   errorLayer(N6 "SBLK not multiple 45 degrees")

Executing: N7 = geomOr(geomGetNon45(nwell))
	   errorLayer(N7 "NWELL not multiple 45 degrees")

Executing: N10 = geomOr(geomGetNon45(mv))
	   errorLayer(N10 "MV not multiple 45 degrees")

Executing: N11 = geomOr(geomGetNon45(cont))
	   errorLayer(N11 "CONT not multiple 45 degrees")

Executing: N12 = geomOr(geomGetNon45(poly))
	   errorLayer(N12 "POLY1 not multiple 45 degrees")

Executing: N13 = geomOr(geomGetNon45(geomCat(met1dg met1_dy)))
	   errorLayer(N13 "MET1 not multiple 45 degrees")

Executing: N14 = geomOr(geomGetNon45(geomCat(met2dg met2_dy)))
	   errorLayer(N14 "MET2 not multiple 45 degrees")

Executing: N16 = geomOr(geomGetNon45(met1s))
	   errorLayer(N16 "M1HOLE not multiple 45 degrees")

Executing: N17 = geomOr(geomGetNon45(met2s))
	   errorLayer(N17 "M2HOLE not multiple 45 degrees")

Executing: N15 = geomOr(geomGetNon45(geomCat(met3dg met3_dy)))
	   errorLayer(N15 "MET3 not multiple 45 degrees")

Executing: N18 = geomOr(geomGetNon45(met3s))
	   errorLayer(N18 "M3HOLE not multiple 45 degrees")

Executing: N30 = geomOr(geomGetNon45(via2))
	   errorLayer(N30 "VIA2 not multiple 45 degrees")

Executing: N19 = geomOr(geomGetNon45(geomCat(met4dg met4_dy)))
	   errorLayer(N19 "MET4 not multiple 45 degrees")

Executing: N20 = geomOr(geomGetNon45(met4s))
	   errorLayer(N20 "M4HOLE not multiple 45 degrees")

Executing: N21 = geomOr(geomGetNon45(via3))
	   errorLayer(N21 "VIA3 not multiple 45 degrees")

Executing: N25 = geomOr(geomGetNon45(geomCat(mtpldg mtpl_dy)))
	   errorLayer(N25 "METTPL not multiple 45 degrees")

Executing: N26 = geomOr(geomGetNon45(vtpl))
	   errorLayer(N26 "VIATPL not multiple 45 degrees")

Executing: N27 = geomOr(geomGetNon45(geomCat(mtpdg mtp_dy)))
	   errorLayer(N27 "METTP not multiple 45 degrees")

Executing: N28 = geomOr(geomGetNon45(mtps))
	   errorLayer(N28 "MTHOLE not multiple 45 degrees")

Executing: N31 = geomOr(geomGetNon45(vtp))
	   errorLayer(N31 "VIATP not multiple 45 degrees")

Executing: N29 = geomOr(geomGetNon45(via1))
	   errorLayer(N29 "VIA1 not multiple 45 degrees")

Executing: N32 = geomOr(geomGetNon45(cm))
	   errorLayer(N32 "CM not multiple 45 degrees")

Executing: N33 = geomOr(geomGetNon45(cm2))
	   errorLayer(N33 "CM2 not multiple 45 degrees")

Executing: N34 = geomOr(geomGetNon45(cm3))
	   errorLayer(N34 "CM3 not multiple 45 degrees")

Executing: N35 = geomOr(geomGetNon45(hvpwell))
	   errorLayer(N35 "HVPWELL not multiple 45 degrees")

Executing: N36 = geomOr(geomGetNon45(subblk))
	   errorLayer(N36 "SUBBLK not multiple 45 degrees")

Executing: N37 = geomOr(geomGetNon45(hvnwell))
	   errorLayer(N37 "HVNWELL not multiple 45 degrees")

Executing: N38 = geomOr(geomGetNon45(depl))
	   errorLayer(N38 "DEPL not multiple 45 degrees")

Executing: N39 = geomOr(geomGetNon45(sci))
	   errorLayer(N39 "SCI not multiple 45 degrees")

Executing: N40 = geomOr(geomGetNon45(hres))
	   errorLayer(N40 "HRES not multiple 45 degrees")

Executing: N42 = geomOr(geomGetNon45(mres))
	   errorLayer(N42 "MRES not multiple 45 degrees")

Executing: N43 = geomOr(geomGetNon45(nopim))
	   errorLayer(N43 "NOPIM not multiple 45 degrees")

Executing: N44 = geomOr(geomGetNon45(dnc))
	   errorLayer(N44 "DNC not multiple 45 degrees")

Executing: N45 = geomOr(geomGetNon45(dpc))
	   errorLayer(N45 "DPC not multiple 45 degrees")

Executing: N46 = geomOr(geomGetNon45(dti))
	   errorLayer(N46 "DTI not multiple 45 degrees")

Executing: N47 = geomOr(geomGetNon45(hwc))
	   errorLayer(N47 "HWC not multiple 45 degrees")

Executing: N48 = geomOr(geomGetNon45(sjnp))
	   errorLayer(N48 "SJNP not multiple 45 degrees")

Executing: N49 = geomOr(geomGetNon45(sjpn))
	   errorLayer(N49 "SJPN not multiple 45 degrees")

Executing: N51 = geomOr(geomGetNon45(cmh))
	   errorLayer(N51 "CAPMH not multiple 45 degrees")

Executing: N52 = geomOr(geomGetNon45(nbur))
	   errorLayer(N52 "NBUR not multiple 45 degrees")

Executing: N53 = geomOr(geomGetNon45(cmh2))
	   errorLayer(N53 "CAPMH2 not multiple 45 degrees")

Executing: N54 = geomOr(geomGetNon45(cmh3))
	   errorLayer(N54 "CAPMH3 not multiple 45 degrees")

Executing: N59 = geomOr(geomGetNon45(nbuf))
	   errorLayer(N59 "NBUF not multiple 45 degrees")

Executing: N60 = geomOr(geomGetNon45(pws))
	   errorLayer(N60 "PWS not multiple 45 degrees")

Executing: N61 = geomOr(geomGetNon45(cm23f))
	   errorLayer(N61 "CAPM23F not multiple 45 degrees")

Executing: N62 = geomOr(geomGetNon45(cmh23f))
	   errorLayer(N62 "CAPMH23F not multiple 45 degrees")

Executing: N63 = geomOr(geomGetNon45(cm34f))
	   errorLayer(N63 "CAPM34F not multiple 45 degrees")

Executing: N64 = geomOr(geomGetNon45(cmh34f))
	   errorLayer(N64 "CAPMH34F not multiple 45 degrees")

Executing: N65 = geomOr(geomGetNon45(cm45f))
	   errorLayer(N65 "CAPM45F not multiple 45 degrees")

Executing: N66 = geomOr(geomGetNon45(cmh45f))
	   errorLayer(N66 "CAPMH45F not multiple 45 degrees")

Executing: N69 = geomOr(geomGetNon45(cm2a))
	   errorLayer(N69 "CAPM2A not multiple 45 degrees")

Executing: N70 = geomOr(geomGetNon45(cmh2a))
	   errorLayer(N70 "CAPMH2A not multiple 45 degrees")

Executing: N71 = geomOr(geomGetNon45(pwell4))
	   errorLayer(N71 "PWELL4 not multiple 45 degrees")

Executing: N72 = geomOr(geomGetNon45(nbase))
	   errorLayer(N72 "NBASE not multiple 45 degrees")

Executing: N73 = geomOr(geomGetNon45(pbase))
	   errorLayer(N73 "PBASE not multiple 45 degrees")

Executing: N77 = geomOr(geomGetNon45(ndf))
	   errorLayer(N77 "NDF not multiple 45 degrees")

Executing: N78 = geomOr(geomGetNon45(pdf))
	   errorLayer(N78 "PDF not multiple 45 degrees")

Executing: N79 = geomOr(geomGetNon45(pzener))
	   errorLayer(N79 "PZENER not multiple 45 degrees")

Executing: N80 = geomOr(geomGetNon45(nzener))
	   errorLayer(N80 "NZENER not multiple 45 degrees")

Executing: P1 = geomAndNot(polypin poly)
	   errorLayer(P1 "POLY1 pin without POLY1 drawing")

Executing: P2 = geomAndNot(met1pin met1)
	   errorLayer(P2 "MET1 pin without MET1 drawing")

Executing: P3 = geomAndNot(met2pin met2)
	   errorLayer(P3 "MET2 pin without MET2 drawing")

Executing: P4 = geomAndNot(met3pin met3)
	   errorLayer(P4 "MET3 pin without MET3 drawing")

Executing: P5 = geomAndNot(met4pin met4)
	   errorLayer(P5 "MET4 pin without MET4 drawing")

Executing: P7 = geomAndNot(mtppin mtp)
	   errorLayer(P7 "METTP pin without METTP drawing")

Executing: P8 = geomAndNot(mtplpin mtpl)
	   errorLayer(P8 "METTPL pin without METTPL drawing")

Executing: blk_lay = geomOr(blkall blkp1 blkm1 blkm2 blkm3 blkm4 blkmt blkml)

Executing: lock_layer = geomCat(anwell1 apwell1 pwblk diff poly mvdg sblk nimp pimp met1...

Executing: BDLOCK1_errlay = geomAnd(lock lock_layer)
	   errorLayer(BDLOCK1_errlay "  BDLOCK : Any structure over LOCKED (ALL) or LOCKED (boundary) is not allowed")

Executing: BDLOCK2_errlay = geomAnd(lock met3)
	   errorLayer(BDLOCK2_errlay "  BDLOCK : Any structure over LOCKED (ALL) or LOCKED (boundary) is not allowed")

Executing: BDLOCK3_errlay = geomAnd(lock met4)
	   errorLayer(BDLOCK3_errlay "  BDLOCK : Any structure over LOCKED (ALL) or LOCKED (boundary) is not allowed")

Executing: BDLOCK5_errlay = geomAnd(lock mtp)
	   errorLayer(BDLOCK5_errlay "  BDLOCK : Any structure over LOCKED (ALL) or LOCKED (boundary) is not allowed")

Executing: BDLOCK6_errlay = geomAnd(lock mtpl)
	   errorLayer(BDLOCK6_errlay "  BDLOCK : Any structure over LOCKED (ALL) or LOCKED (boundary) is not allowed")

Executing: B1LOCK1_errlay = geomAnd(lock1 lock_layer)
	   errorLayer(B1LOCK1_errlay "  B1LOCK : Any structure over LOCKED (LOCKED1) or LOCKED1 (boundary) is not allowed")

Executing: B1LOCK2_errlay = geomAnd(lock1 met3)
	   errorLayer(B1LOCK2_errlay "  B1LOCK : Any structure over LOCKED (LOCKED1) or LOCKED1 (boundary) is not allowed")

Executing: B1LOCK3_errlay = geomAnd(lock1 met4)
	   errorLayer(B1LOCK3_errlay "  B1LOCK : Any structure over LOCKED (LOCKED1) or LOCKED1 (boundary) is not allowed")

Executing: B1LOCK5_errlay = geomAnd(lock1 mtp)
	   errorLayer(B1LOCK5_errlay "  B1LOCK : Any structure over LOCKED (LOCKED1) or LOCKED1 (boundary) is not allowed")

Executing: B2LOCK1_errlay = geomAnd(lock2 lock_layer)
	   errorLayer(B2LOCK1_errlay "  B2LOCK : Any structure over LOCKED (LOCKED2) or LOCKED2 (boundary) is not allowed")

Executing: B2LOCK2_errlay = geomAnd(lock2 met3)
	   errorLayer(B2LOCK2_errlay "  B2LOCK : Any structure over LOCKED (LOCKED2) or LOCKED2 (boundary) is not allowed")

Executing: B2LOCK3_errlay = geomAnd(lock2 met4)
	   errorLayer(B2LOCK3_errlay "  B2LOCK : Any structure over LOCKED (LOCKED2) or LOCKED2 (boundary) is not allowed")

Executing: B3LOCK1_errlay = geomAnd(lock3 lock_layer)
	   errorLayer(B3LOCK1_errlay "  B3LOCK : Any structure over LOCKED (LOCKED3) or LOCKED3 (boundary) is not allowed")

Executing: B3LOCK2_errlay = geomAnd(lock3 met3)
	   errorLayer(B3LOCK2_errlay "  B3LOCK : Any structure over LOCKED (LOCKED3) or LOCKED3 (boundary) is not allowed")

Executing: B4LOCK1_errlay = geomAnd(lock4 lock_layer)
	   errorLayer(B4LOCK1_errlay "  B4LOCK : Any structure over LOCKED (LOCKED4) or LOCKED4 (boundary) is not allowed")

Executing: R0 = geomOr(xflay_all)
	   errorLayer(R0 "BDXF : Not allowed to be used by customers")

Executing: RN1 = geomOr(diffnblk)
	   errorLayer(RN1 "BDDF : Not allowed to be used by customers")

Executing: RN2 = geomOr(polynblk)
	   errorLayer(RN2 "BDP1 : Not allowed to be used by customers")

Executing: pogt = geomButtOrOver(poly gate)

Executing: pfox = geomAndNot(pogt gate)

Executing: pfox_conn = geomCat(pfox)

Executing: cont_conn = geomCat(cont)

Executing: via1_conn = geomCat(via1)

Executing: via2_conn = geomCat(via2CON)

Executing: via3_conn = geomCat(via3CON)

Executing: vtp_conn = geomCat(vtpCON)

Executing: vtpl_conn = geomCat(vtpl)

Executing: geomConnect((via pfox_conn pfox poly) (via cont_conn cont poly))

Executing: processAntenna(((gate (gate poly)) (antenna pfox poly cont) (pfoxR = (((pfox....
running in speedup mode
running in speedup mode

Executing: geomConnect((via cont met1 poly sd) (via via1_conn via1 met1))

Executing: processAntenna(((gate (gate poly)) (antenna poly met1 via1) (diffusion sd) (m...
running in speedup mode
running in speedup mode

Executing: geomConnect((via cont met1 poly sd) (via via1 met2 met1) (via via2_conn via2C...

Executing: processAntenna(((gate (gate poly)) (antenna poly met1 met2 via2CON) (diffusio...
running in speedup mode
running in speedup mode

Executing: geomConnect((via cont met1 poly sd) (via via1 met2 met1) (via via2CON met3 me...

Executing: processAntenna(((gate (gate poly)) (antenna poly met1 met2 met3 via3CON) (dif...
running in speedup mode
running in speedup mode

Executing: geomConnect((via cont met1 poly sd) (via via1 met2 met1) (via via2CON met3 me...

Executing: processAntenna(((gate (gate poly)) (antenna poly met1 met2 met3 met4 vtpCON) ...
running in speedup mode
running in speedup mode

Executing: geomConnect((via cont met1 poly sd) (via via1 met2 met1) (via via2CON met3 me...

Executing: processAntenna(((gate (gate poly)) (antenna poly met1 met2 met3 met4 mtp vtpl...
running in speedup mode
running in speedup mode

Executing: geomConnect((via cont met1 poly sd) (via via1 met2 met1) (via via2CON met3 me...

Executing: processAntenna(((gate (gate poly)) (antenna poly met1 met2 met3 met4 mtp mtpl...
running in speedup mode

Finished running rules. Task processor time in main process:
cpu: 572.81  elap: 574  pf: 0  in: 0  out: 4952  virt: 420M  phys: 3323M

Started output post-processing ...

Finished output post-processing
cpu: 3.72  elap: 4  pf: 0  in: 0  out: 152  virt: 690M  phys: 3323M

Finished building the persistent database.
cpu: 0.02  elap: 0  pf: 0  in: 0  out: 6880  virt: 695M  phys: 3323M


*****  aveng terminated normally  *****


Finished /home/Software/EDA/Cadence/ASSURA/ASSURA_04.15.111//tools.lnx86/assura/bin/aveng

Starting /home/Software/EDA/Cadence/ASSURA/ASSURA_04.15.111//tools.lnx86/assura/bin/avrpt /home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/AssuraDRC/filter_top_DRC.rsf

Loading tech rule set file : /home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/.assuraSetup/Assura/techRuleSets

Loading tech rule set file : /home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/.assuraSetup/Assura/techRuleSets

Loading tech rule set file : /home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/.assuraSetup/Assura/techRuleSets
@(#)$CDS: avrpt_64 version av4.1:Production:dfII6.1.7-64b:IC6.1.7-64b.500.4 07/10/2017 21:38 (sjfnl321) $
sub-version 4.1_USR5_HF11, integ signature 2017-07-10-2113

run on Cadence_SERVER from /home/Software/EDA/Cadence/ASSURA/ASSURA_04.15.111/tools.lnx86/assura/bin/64bit/avrpt on Sat Mar  5 16:23:59 2022


   Creating Error Database 'filter_top_DRC'...

   Reading VDB ...
--------------------------------------------------------------------------------
Rule      Message                                    FlatCount     RealCount
--------------------------------------------------------------------------------
(    1)  dataAuditErrors                                     0            0
(    2)  CELL-OFFGRID                                        0            0
(    3)  PATH-CENTERLINE-OFFGRID_pad                         0            0
(    4)  PATH-CENTERLINE-OFFGRID_hwc                         0            0
(    5)  PATH-CENTERLINE-OFFGRID_nbur                        0            0
(    6)  PATH-CENTERLINE-OFFGRID_dti                         0            0
(    7)  PATH-CENTERLINE-OFFGRID_salicide                    0            0
(    8)  PATH-CENTERLINE-OFFGRID_diff_dg                     0            0
(    9)  PATH-CENTERLINE-OFFGRID_diff_dyi                    0            0
(   10)  PATH-CENTERLINE-OFFGRID_pimp                        0            0
(   11)  PATH-CENTERLINE-OFFGRID_nimp                        0            0
(   12)  PATH-CENTERLINE-OFFGRID_sblk                        0            0
(   13)  PATH-CENTERLINE-OFFGRID_nwell                       0            0
(   14)  PATH-CENTERLINE-OFFGRID_dnwell                      0            0
(   15)  PATH-CENTERLINE-OFFGRID_pwblk                       0            0
(   16)  PATH-CENTERLINE-OFFGRID_mvdg                        0            0
(   17)  PATH-CENTERLINE-OFFGRID_hvpwell                     0            0
(   18)  PATH-CENTERLINE-OFFGRID_subblk                      0            0
(   19)  PATH-CENTERLINE-OFFGRID_hvnwell                     0            0
(   20)  PATH-CENTERLINE-OFFGRID_depl                        0            0
(   21)  PATH-CENTERLINE-OFFGRID_sci                         0            0
(   22)  PATH-CENTERLINE-OFFGRID_pws                         0            0
(   23)  PATH-CENTERLINE-OFFGRID_lvt                         0            0
(   24)  PATH-CENTERLINE-OFFGRID_pwell4                      0            0
(   25)  PATH-CENTERLINE-OFFGRID_nzener                      0            0
(   26)  PATH-CENTERLINE-OFFGRID_pzener                      0            0
(   27)  PATH-CENTERLINE-OFFGRID_nbase                       0            0
(   28)  PATH-CENTERLINE-OFFGRID_pbase                       0            0
(   29)  PATH-CENTERLINE-OFFGRID_ndf                         0            0
(   30)  PATH-CENTERLINE-OFFGRID_pdf                         0            0
(   31)  PATH-CENTERLINE-OFFGRID_dnc                         0            0
(   32)  PATH-CENTERLINE-OFFGRID_dpc                         0            0
(   33)  PATH-CENTERLINE-OFFGRID_sjnp                        0            0
(   34)  PATH-CENTERLINE-OFFGRID_sjpn                        0            0
(   35)  PATH-CENTERLINE-OFFGRID_nbuf                        0            0
(   36)  PATH-CENTERLINE-OFFGRID_cont                        0            0
(   37)  PATH-CENTERLINE-OFFGRID_polydg                      0            0
(   38)  PATH-CENTERLINE-OFFGRID_poly_dyi                    0            0
(   39)  PATH-CENTERLINE-OFFGRID_met1dg                      0            0
(   40)  PATH-CENTERLINE-OFFGRID_met1s                       0            0
(   41)  PATH-CENTERLINE-OFFGRID_met1_dyi                    0            0
(   42)  PATH-CENTERLINE-OFFGRID_via1                        0            0
(   43)  PATH-CENTERLINE-OFFGRID_met2dg                      0            0
(   44)  PATH-CENTERLINE-OFFGRID_met2s                       0            0
(   45)  PATH-CENTERLINE-OFFGRID_met2_dyi                    0            0
(   46)  PATH-CENTERLINE-OFFGRID_via2                        0            0
(   47)  PATH-CENTERLINE-OFFGRID_met3dg                      0            0
(   48)  PATH-CENTERLINE-OFFGRID_met3s                       0            0
(   49)  PATH-CENTERLINE-OFFGRID_met3_dyi                    0            0
(   50)  PATH-CENTERLINE-OFFGRID_via3                        0            0
(   51)  PATH-CENTERLINE-OFFGRID_met4dg                      0            0
(   52)  PATH-CENTERLINE-OFFGRID_met4s                       0            0
(   53)  PATH-CENTERLINE-OFFGRID_met4_dyi                    0            0
(   54)  PATH-CENTERLINE-OFFGRID_vtpl                        0            0
(   55)  PATH-CENTERLINE-OFFGRID_mtpldg                      0            0
(   56)  PATH-CENTERLINE-OFFGRID_mtpl_dyi                    0            0
(   57)  PATH-CENTERLINE-OFFGRID_vtp                         0            0
(   58)  PATH-CENTERLINE-OFFGRID_mtpdg                       0            0
(   59)  PATH-CENTERLINE-OFFGRID_mtps                        0            0
(   60)  PATH-CENTERLINE-OFFGRID_mtp_dyi                     0            0
(   61)  PATH-CENTERLINE-OFFGRID_cm                          0            0
(   62)  PATH-CENTERLINE-OFFGRID_cm2                         0            0
(   63)  PATH-CENTERLINE-OFFGRID_cm3                         0            0
(   64)  PATH-CENTERLINE-OFFGRID_cmh                         0            0
(   65)  PATH-CENTERLINE-OFFGRID_cmh2                        0            0
(   66)  PATH-CENTERLINE-OFFGRID_cmh3                        0            0
(   67)  PATH-CENTERLINE-OFFGRID_cm23f                       0            0
(   68)  PATH-CENTERLINE-OFFGRID_cmh23f                      0            0
(   69)  PATH-CENTERLINE-OFFGRID_cm34f                       0            0
(   70)  PATH-CENTERLINE-OFFGRID_cmh34f                      0            0
(   71)  PATH-CENTERLINE-OFFGRID_cm45f                       0            0
(   72)  PATH-CENTERLINE-OFFGRID_cmh45f                      0            0
(   73)  PATH-CENTERLINE-OFFGRID_cm2a                        0            0
(   74)  PATH-CENTERLINE-OFFGRID_cmh2a                       0            0
(   75)  PATH-CENTERLINE-OFFGRID_dio_mark                    0            0
(   76)  PATH-CENTERLINE-OFFGRID_cap_mark                    0            0
(   77)  PATH-CENTERLINE-OFFGRID_hwc_bs                      0            0
(   78)  PATH-CENTERLINE-OFFGRID_nwres                       0            0
(   79)  PATH-CENTERLINE-OFFGRID_hres                        0            0
(   80)  PATH-CENTERLINE-OFFGRID_mres                        0            0
(   81)  PATH-CENTERLINE-OFFGRID_respoly                     0            0
(   82)  PATH-CENTERLINE-OFFGRID_resmet1                     0            0
(   83)  PATH-CENTERLINE-OFFGRID_resmet2                     0            0
(   84)  PATH-CENTERLINE-OFFGRID_resmet3                     0            0
(   85)  PATH-CENTERLINE-OFFGRID_resmet4                     0            0
(   86)  PATH-CENTERLINE-OFFGRID_resmtpl                     0            0
(   87)  PATH-CENTERLINE-OFFGRID_resmtp                      0            0
(   88)  PATH-CENTERLINE-OFFGRID_ram                         0            0
(   89)  PATH-CENTERLINE-OFFGRID_rom                         0            0
(   90)  PATH-CENTERLINE-OFFGRID_nvram                       0            0
(   91)  PATH-CENTERLINE-OFFGRID_flash                       0            0
(   92)  PATH-CENTERLINE-OFFGRID_otp                         0            0
(   93)  PATH-CENTERLINE-OFFGRID_mtp_xfl                     0            0
(   94)  PATH-CENTERLINE-OFFGRID_eep                         0            0
(   95)  PATH-CENTERLINE-OFFGRID_xflay_all                   0            0
(   96)  PATH-CENTERLINE-OFFGRID_devmark                     0            0
(   97)  PATH-CENTERLINE-OFFGRID_dticext                     0            0
(   98)  PATH-CENTERLINE-OFFGRID_blkp1                       0            0
(   99)  PATH-CENTERLINE-OFFGRID_blkm1                       0            0
(  100)  PATH-CENTERLINE-OFFGRID_blkm2                       0            0
(  101)  PATH-CENTERLINE-OFFGRID_blkm3                       0            0
(  102)  PATH-CENTERLINE-OFFGRID_blkm4                       0            0
(  103)  PATH-CENTERLINE-OFFGRID_blkmt                       0            0
(  104)  PATH-CENTERLINE-OFFGRID_blkml                       0            0
(  105)  PATH-CENTERLINE-OFFGRID_blkall                      0            0
(  106)  PATH-CENTERLINE-OFFGRID_lockdg                      0            0
(  107)  PATH-CENTERLINE-OFFGRID_lock1dg                     0            0
(  108)  PATH-CENTERLINE-OFFGRID_lock2dg                     0            0
(  109)  PATH-CENTERLINE-OFFGRID_lockbnCDBA                  0            0
(  110)  PATH-CENTERLINE-OFFGRID_lock1bnCDBA                 0            0
(  111)  PATH-CENTERLINE-OFFGRID_lock2bnCDBA                 0            0
(  112)  PATH-CENTERLINE-OFFGRID_lock3bnCDBA                 0            0
(  113)  PATH-CENTERLINE-OFFGRID_lock4bnCDBA                 0            0
(  114)  PATH-CENTERLINE-OFFGRID_met1_bndCDBA                0            0
(  115)  PATH-CENTERLINE-OFFGRID_met2_bndCDBA                0            0
(  116)  PATH-CENTERLINE-OFFGRID_met3_bndCDBA                0            0
(  117)  PATH-CENTERLINE-OFFGRID_nopim                       0            0
(  118)  PATH-CENTERLINE-OFFGRID_diffnblk                    0            0
(  119)  PATH-CENTERLINE-OFFGRID_polynblk                    0            0
(  120)  POLYGON-OFFGRID_pad                                 0            0
(  121)  POLYGON-OFFGRID_hwc                                 0            0
(  122)  POLYGON-OFFGRID_nbur                                0            0
(  123)  POLYGON-OFFGRID_dti                                 0            0
(  124)  POLYGON-OFFGRID_salicide                            0            0
(  125)  POLYGON-OFFGRID_diff_dg                             0            0
(  126)  POLYGON-OFFGRID_diff_dyi                            0            0
(  127)  POLYGON-OFFGRID_pimp                                0            0
(  128)  POLYGON-OFFGRID_nimp                                0            0
(  129)  POLYGON-OFFGRID_sblk                                0            0
(  130)  POLYGON-OFFGRID_nwell                               0            0
(  131)  POLYGON-OFFGRID_dnwell                              0            0
(  132)  POLYGON-OFFGRID_pwblk                               0            0
(  133)  POLYGON-OFFGRID_mvdg                                0            0
(  134)  POLYGON-OFFGRID_hvpwell                             0            0
(  135)  POLYGON-OFFGRID_subblk                              0            0
(  136)  POLYGON-OFFGRID_hvnwell                             0            0
(  137)  POLYGON-OFFGRID_depl                                0            0
(  138)  POLYGON-OFFGRID_sci                                 0            0
(  139)  POLYGON-OFFGRID_pws                                 0            0
(  140)  POLYGON-OFFGRID_lvt                                 0            0
(  141)  POLYGON-OFFGRID_pwell4                              0            0
(  142)  POLYGON-OFFGRID_nzener                              0            0
(  143)  POLYGON-OFFGRID_pzener                              0            0
(  144)  POLYGON-OFFGRID_nbase                               0            0
(  145)  POLYGON-OFFGRID_pbase                               0            0
(  146)  POLYGON-OFFGRID_ndf                                 0            0
(  147)  POLYGON-OFFGRID_pdf                                 0            0
(  148)  POLYGON-OFFGRID_dnc                                 0            0
(  149)  POLYGON-OFFGRID_dpc                                 0            0
(  150)  POLYGON-OFFGRID_sjnp                                0            0
(  151)  POLYGON-OFFGRID_sjpn                                0            0
(  152)  POLYGON-OFFGRID_nbuf                                0            0
(  153)  POLYGON-OFFGRID_cont                                0            0
(  154)  POLYGON-OFFGRID_polydg                              0            0
(  155)  POLYGON-OFFGRID_poly_dyi                            0            0
(  156)  POLYGON-OFFGRID_met1dg                              0            0
(  157)  POLYGON-OFFGRID_met1s                               0            0
(  158)  POLYGON-OFFGRID_met1_dyi                            0            0
(  159)  POLYGON-OFFGRID_via1                                0            0
(  160)  POLYGON-OFFGRID_met2dg                              0            0
(  161)  POLYGON-OFFGRID_met2s                               0            0
(  162)  POLYGON-OFFGRID_met2_dyi                            0            0
(  163)  POLYGON-OFFGRID_via2                                0            0
(  164)  POLYGON-OFFGRID_met3dg                              0            0
(  165)  POLYGON-OFFGRID_met3s                               0            0
(  166)  POLYGON-OFFGRID_met3_dyi                            0            0
(  167)  POLYGON-OFFGRID_via3                                0            0
(  168)  POLYGON-OFFGRID_met4dg                              0            0
(  169)  POLYGON-OFFGRID_met4s                               0            0
(  170)  POLYGON-OFFGRID_met4_dyi                            0            0
(  171)  POLYGON-OFFGRID_vtpl                                0            0
(  172)  POLYGON-OFFGRID_mtpldg                              0            0
(  173)  POLYGON-OFFGRID_mtpl_dyi                            0            0
(  174)  POLYGON-OFFGRID_vtp                                 0            0
(  175)  POLYGON-OFFGRID_mtpdg                               0            0
(  176)  POLYGON-OFFGRID_mtps                                0            0
(  177)  POLYGON-OFFGRID_mtp_dyi                             0            0
(  178)  POLYGON-OFFGRID_cm                                  0            0
(  179)  POLYGON-OFFGRID_cm2                                 0            0
(  180)  POLYGON-OFFGRID_cm3                                 0            0
(  181)  POLYGON-OFFGRID_cmh                                 0            0
(  182)  POLYGON-OFFGRID_cmh2                                0            0
(  183)  POLYGON-OFFGRID_cmh3                                0            0
(  184)  POLYGON-OFFGRID_cm23f                               0            0
(  185)  POLYGON-OFFGRID_cmh23f                              0            0
(  186)  POLYGON-OFFGRID_cm34f                               0            0
(  187)  POLYGON-OFFGRID_cmh34f                              0            0
(  188)  POLYGON-OFFGRID_cm45f                               0            0
(  189)  POLYGON-OFFGRID_cmh45f                              0            0
(  190)  POLYGON-OFFGRID_cm2a                                0            0
(  191)  POLYGON-OFFGRID_cmh2a                               0            0
(  192)  POLYGON-OFFGRID_dio_mark                            0            0
(  193)  POLYGON-OFFGRID_cap_mark                            0            0
(  194)  POLYGON-OFFGRID_hwc_bs                              0            0
(  195)  POLYGON-OFFGRID_nwres                               0            0
(  196)  POLYGON-OFFGRID_hres                                0            0
(  197)  POLYGON-OFFGRID_mres                                0            0
(  198)  POLYGON-OFFGRID_respoly                             0            0
(  199)  POLYGON-OFFGRID_resmet1                             0            0
(  200)  POLYGON-OFFGRID_resmet2                             0            0
(  201)  POLYGON-OFFGRID_resmet3                             0            0
(  202)  POLYGON-OFFGRID_resmet4                             0            0
(  203)  POLYGON-OFFGRID_resmtpl                             0            0
(  204)  POLYGON-OFFGRID_resmtp                              0            0
(  205)  POLYGON-OFFGRID_ram                                 0            0
(  206)  POLYGON-OFFGRID_rom                                 0            0
(  207)  POLYGON-OFFGRID_nvram                               0            0
(  208)  POLYGON-OFFGRID_flash                               0            0
(  209)  POLYGON-OFFGRID_otp                                 0            0
(  210)  POLYGON-OFFGRID_mtp_xfl                             0            0
(  211)  POLYGON-OFFGRID_eep                                 0            0
(  212)  POLYGON-OFFGRID_xflay_all                           0            0
(  213)  POLYGON-OFFGRID_devmark                             0            0
(  214)  POLYGON-OFFGRID_dticext                             0            0
(  215)  POLYGON-OFFGRID_blkp1                               0            0
(  216)  POLYGON-OFFGRID_blkm1                               0            0
(  217)  POLYGON-OFFGRID_blkm2                               0            0
(  218)  POLYGON-OFFGRID_blkm3                               0            0
(  219)  POLYGON-OFFGRID_blkm4                               0            0
(  220)  POLYGON-OFFGRID_blkmt                               0            0
(  221)  POLYGON-OFFGRID_blkml                               0            0
(  222)  POLYGON-OFFGRID_blkall                              0            0
(  223)  POLYGON-OFFGRID_lockdg                              0            0
(  224)  POLYGON-OFFGRID_lock1dg                             0            0
(  225)  POLYGON-OFFGRID_lock2dg                             0            0
(  226)  POLYGON-OFFGRID_lockbnCDBA                          0            0
(  227)  POLYGON-OFFGRID_lock1bnCDBA                         0            0
(  228)  POLYGON-OFFGRID_lock2bnCDBA                         0            0
(  229)  POLYGON-OFFGRID_lock3bnCDBA                         0            0
(  230)  POLYGON-OFFGRID_lock4bnCDBA                         0            0
(  231)  POLYGON-OFFGRID_met1_bndCDBA                        0            0
(  232)  POLYGON-OFFGRID_met2_bndCDBA                        0            0
(  233)  POLYGON-OFFGRID_met3_bndCDBA                        0            0
(  234)  POLYGON-OFFGRID_nopim                               0            0
(  235)  POLYGON-OFFGRID_diffnblk                            0            0
(  236)  POLYGON-OFFGRID_polynblk                            0            0
(  237)  PATH-VERTICS-OFFGRID_pad                            0            0
(  238)  PATH-VERTICS-OFFGRID_hwc                            0            0
(  239)  PATH-VERTICS-OFFGRID_nbur                           0            0
(  240)  PATH-VERTICS-OFFGRID_dti                            0            0
(  241)  PATH-VERTICS-OFFGRID_salicide                       0            0
(  242)  PATH-VERTICS-OFFGRID_diff_dg                        0            0
(  243)  PATH-VERTICS-OFFGRID_diff_dyi                       0            0
(  244)  PATH-VERTICS-OFFGRID_pimp                           0            0
(  245)  PATH-VERTICS-OFFGRID_nimp                           0            0
(  246)  PATH-VERTICS-OFFGRID_sblk                           0            0
(  247)  PATH-VERTICS-OFFGRID_nwell                          0            0
(  248)  PATH-VERTICS-OFFGRID_dnwell                         0            0
(  249)  PATH-VERTICS-OFFGRID_pwblk                          0            0
(  250)  PATH-VERTICS-OFFGRID_mvdg                           0            0
(  251)  PATH-VERTICS-OFFGRID_hvpwell                        0            0
(  252)  PATH-VERTICS-OFFGRID_subblk                         0            0
(  253)  PATH-VERTICS-OFFGRID_hvnwell                        0            0
(  254)  PATH-VERTICS-OFFGRID_depl                           0            0
(  255)  PATH-VERTICS-OFFGRID_sci                            0            0
(  256)  PATH-VERTICS-OFFGRID_pws                            0            0
(  257)  PATH-VERTICS-OFFGRID_lvt                            0            0
(  258)  PATH-VERTICS-OFFGRID_pwell4                         0            0
(  259)  PATH-VERTICS-OFFGRID_nzener                         0            0
(  260)  PATH-VERTICS-OFFGRID_pzener                         0            0
(  261)  PATH-VERTICS-OFFGRID_nbase                          0            0
(  262)  PATH-VERTICS-OFFGRID_pbase                          0            0
(  263)  PATH-VERTICS-OFFGRID_ndf                            0            0
(  264)  PATH-VERTICS-OFFGRID_pdf                            0            0
(  265)  PATH-VERTICS-OFFGRID_dnc                            0            0
(  266)  PATH-VERTICS-OFFGRID_dpc                            0            0
(  267)  PATH-VERTICS-OFFGRID_sjnp                           0            0
(  268)  PATH-VERTICS-OFFGRID_sjpn                           0            0
(  269)  PATH-VERTICS-OFFGRID_nbuf                           0            0
(  270)  PATH-VERTICS-OFFGRID_cont                           0            0
(  271)  PATH-VERTICS-OFFGRID_polydg                         0            0
(  272)  PATH-VERTICS-OFFGRID_poly_dyi                       0            0
(  273)  PATH-VERTICS-OFFGRID_met1dg                         0            0
(  274)  PATH-VERTICS-OFFGRID_met1s                          0            0
(  275)  PATH-VERTICS-OFFGRID_met1_dyi                       0            0
(  276)  PATH-VERTICS-OFFGRID_via1                           0            0
(  277)  PATH-VERTICS-OFFGRID_met2dg                         0            0
(  278)  PATH-VERTICS-OFFGRID_met2s                          0            0
(  279)  PATH-VERTICS-OFFGRID_met2_dyi                       0            0
(  280)  PATH-VERTICS-OFFGRID_via2                           0            0
(  281)  PATH-VERTICS-OFFGRID_met3dg                         0            0
(  282)  PATH-VERTICS-OFFGRID_met3s                          0            0
(  283)  PATH-VERTICS-OFFGRID_met3_dyi                       0            0
(  284)  PATH-VERTICS-OFFGRID_via3                           0            0
(  285)  PATH-VERTICS-OFFGRID_met4dg                         0            0
(  286)  PATH-VERTICS-OFFGRID_met4s                          0            0
(  287)  PATH-VERTICS-OFFGRID_met4_dyi                       0            0
(  288)  PATH-VERTICS-OFFGRID_vtpl                           0            0
(  289)  PATH-VERTICS-OFFGRID_mtpldg                         0            0
(  290)  PATH-VERTICS-OFFGRID_mtpl_dyi                       0            0
(  291)  PATH-VERTICS-OFFGRID_vtp                            0            0
(  292)  PATH-VERTICS-OFFGRID_mtpdg                          0            0
(  293)  PATH-VERTICS-OFFGRID_mtps                           0            0
(  294)  PATH-VERTICS-OFFGRID_mtp_dyi                        0            0
(  295)  PATH-VERTICS-OFFGRID_cm                             0            0
(  296)  PATH-VERTICS-OFFGRID_cm2                            0            0
(  297)  PATH-VERTICS-OFFGRID_cm3                            0            0
(  298)  PATH-VERTICS-OFFGRID_cmh                            0            0
(  299)  PATH-VERTICS-OFFGRID_cmh2                           0            0
(  300)  PATH-VERTICS-OFFGRID_cmh3                           0            0
(  301)  PATH-VERTICS-OFFGRID_cm23f                          0            0
(  302)  PATH-VERTICS-OFFGRID_cmh23f                         0            0
(  303)  PATH-VERTICS-OFFGRID_cm34f                          0            0
(  304)  PATH-VERTICS-OFFGRID_cmh34f                         0            0
(  305)  PATH-VERTICS-OFFGRID_cm45f                          0            0
(  306)  PATH-VERTICS-OFFGRID_cmh45f                         0            0
(  307)  PATH-VERTICS-OFFGRID_cm2a                           0            0
(  308)  PATH-VERTICS-OFFGRID_cmh2a                          0            0
(  309)  PATH-VERTICS-OFFGRID_dio_mark                       0            0
(  310)  PATH-VERTICS-OFFGRID_cap_mark                       0            0
(  311)  PATH-VERTICS-OFFGRID_hwc_bs                         0            0
(  312)  PATH-VERTICS-OFFGRID_nwres                          0            0
(  313)  PATH-VERTICS-OFFGRID_hres                           0            0
(  314)  PATH-VERTICS-OFFGRID_mres                           0            0
(  315)  PATH-VERTICS-OFFGRID_respoly                        0            0
(  316)  PATH-VERTICS-OFFGRID_resmet1                        0            0
(  317)  PATH-VERTICS-OFFGRID_resmet2                        0            0
(  318)  PATH-VERTICS-OFFGRID_resmet3                        0            0
(  319)  PATH-VERTICS-OFFGRID_resmet4                        0            0
(  320)  PATH-VERTICS-OFFGRID_resmtpl                        0            0
(  321)  PATH-VERTICS-OFFGRID_resmtp                         0            0
(  322)  PATH-VERTICS-OFFGRID_ram                            0            0
(  323)  PATH-VERTICS-OFFGRID_rom                            0            0
(  324)  PATH-VERTICS-OFFGRID_nvram                          0            0
(  325)  PATH-VERTICS-OFFGRID_flash                          0            0
(  326)  PATH-VERTICS-OFFGRID_otp                            0            0
(  327)  PATH-VERTICS-OFFGRID_mtp_xfl                        0            0
(  328)  PATH-VERTICS-OFFGRID_eep                            0            0
(  329)  PATH-VERTICS-OFFGRID_xflay_all                      0            0
(  330)  PATH-VERTICS-OFFGRID_devmark                        0            0
(  331)  PATH-VERTICS-OFFGRID_dticext                        0            0
(  332)  PATH-VERTICS-OFFGRID_blkp1                          0            0
(  333)  PATH-VERTICS-OFFGRID_blkm1                          0            0
(  334)  PATH-VERTICS-OFFGRID_blkm2                          0            0
(  335)  PATH-VERTICS-OFFGRID_blkm3                          0            0
(  336)  PATH-VERTICS-OFFGRID_blkm4                          0            0
(  337)  PATH-VERTICS-OFFGRID_blkmt                          0            0
(  338)  PATH-VERTICS-OFFGRID_blkml                          0            0
(  339)  PATH-VERTICS-OFFGRID_blkall                         0            0
(  340)  PATH-VERTICS-OFFGRID_lockdg                         0            0
(  341)  PATH-VERTICS-OFFGRID_lock1dg                        0            0
(  342)  PATH-VERTICS-OFFGRID_lock2dg                        0            0
(  343)  PATH-VERTICS-OFFGRID_lockbnCDBA                     0            0
(  344)  PATH-VERTICS-OFFGRID_lock1bnCDBA                    0            0
(  345)  PATH-VERTICS-OFFGRID_lock2bnCDBA                    0            0
(  346)  PATH-VERTICS-OFFGRID_lock3bnCDBA                    0            0
(  347)  PATH-VERTICS-OFFGRID_lock4bnCDBA                    0            0
(  348)  PATH-VERTICS-OFFGRID_met1_bndCDBA                   0            0
(  349)  PATH-VERTICS-OFFGRID_met2_bndCDBA                   0            0
(  350)  PATH-VERTICS-OFFGRID_met3_bndCDBA                   0            0
(  351)  PATH-VERTICS-OFFGRID_nopim                          0            0
(  352)  PATH-VERTICS-OFFGRID_diffnblk                       0            0
(  353)  PATH-VERTICS-OFFGRID_polynblk                       0            0
(  354)  PATH-HALF-WIDTH-OFFGRID_pad                         0            0
(  355)  PATH-HALF-WIDTH-OFFGRID_hwc                         0            0
(  356)  PATH-HALF-WIDTH-OFFGRID_nbur                        0            0
(  357)  PATH-HALF-WIDTH-OFFGRID_dti                         0            0
(  358)  PATH-HALF-WIDTH-OFFGRID_salicide                    0            0
(  359)  PATH-HALF-WIDTH-OFFGRID_diff_dg                     0            0
(  360)  PATH-HALF-WIDTH-OFFGRID_diff_dyi                    0            0
(  361)  PATH-HALF-WIDTH-OFFGRID_pimp                        0            0
(  362)  PATH-HALF-WIDTH-OFFGRID_nimp                        0            0
(  363)  PATH-HALF-WIDTH-OFFGRID_sblk                        0            0
(  364)  PATH-HALF-WIDTH-OFFGRID_nwell                       0            0
(  365)  PATH-HALF-WIDTH-OFFGRID_dnwell                      0            0
(  366)  PATH-HALF-WIDTH-OFFGRID_pwblk                       0            0
(  367)  PATH-HALF-WIDTH-OFFGRID_mvdg                        0            0
(  368)  PATH-HALF-WIDTH-OFFGRID_hvpwell                     0            0
(  369)  PATH-HALF-WIDTH-OFFGRID_subblk                      0            0
(  370)  PATH-HALF-WIDTH-OFFGRID_hvnwell                     0            0
(  371)  PATH-HALF-WIDTH-OFFGRID_depl                        0            0
(  372)  PATH-HALF-WIDTH-OFFGRID_sci                         0            0
(  373)  PATH-HALF-WIDTH-OFFGRID_pws                         0            0
(  374)  PATH-HALF-WIDTH-OFFGRID_lvt                         0            0
(  375)  PATH-HALF-WIDTH-OFFGRID_pwell4                      0            0
(  376)  PATH-HALF-WIDTH-OFFGRID_nzener                      0            0
(  377)  PATH-HALF-WIDTH-OFFGRID_pzener                      0            0
(  378)  PATH-HALF-WIDTH-OFFGRID_nbase                       0            0
(  379)  PATH-HALF-WIDTH-OFFGRID_pbase                       0            0
(  380)  PATH-HALF-WIDTH-OFFGRID_ndf                         0            0
(  381)  PATH-HALF-WIDTH-OFFGRID_pdf                         0            0
(  382)  PATH-HALF-WIDTH-OFFGRID_dnc                         0            0
(  383)  PATH-HALF-WIDTH-OFFGRID_dpc                         0            0
(  384)  PATH-HALF-WIDTH-OFFGRID_sjnp                        0            0
(  385)  PATH-HALF-WIDTH-OFFGRID_sjpn                        0            0
(  386)  PATH-HALF-WIDTH-OFFGRID_nbuf                        0            0
(  387)  PATH-HALF-WIDTH-OFFGRID_cont                        0            0
(  388)  PATH-HALF-WIDTH-OFFGRID_polydg                      0            0
(  389)  PATH-HALF-WIDTH-OFFGRID_poly_dyi                    0            0
(  390)  PATH-HALF-WIDTH-OFFGRID_met1dg                      0            0
(  391)  PATH-HALF-WIDTH-OFFGRID_met1s                       0            0
(  392)  PATH-HALF-WIDTH-OFFGRID_met1_dyi                    0            0
(  393)  PATH-HALF-WIDTH-OFFGRID_via1                        0            0
(  394)  PATH-HALF-WIDTH-OFFGRID_met2dg                      0            0
(  395)  PATH-HALF-WIDTH-OFFGRID_met2s                       0            0
(  396)  PATH-HALF-WIDTH-OFFGRID_met2_dyi                    0            0
(  397)  PATH-HALF-WIDTH-OFFGRID_via2                        0            0
(  398)  PATH-HALF-WIDTH-OFFGRID_met3dg                      0            0
(  399)  PATH-HALF-WIDTH-OFFGRID_met3s                       0            0
(  400)  PATH-HALF-WIDTH-OFFGRID_met3_dyi                    0            0
(  401)  PATH-HALF-WIDTH-OFFGRID_via3                        0            0
(  402)  PATH-HALF-WIDTH-OFFGRID_met4dg                      0            0
(  403)  PATH-HALF-WIDTH-OFFGRID_met4s                       0            0
(  404)  PATH-HALF-WIDTH-OFFGRID_met4_dyi                    0            0
(  405)  PATH-HALF-WIDTH-OFFGRID_vtpl                        0            0
(  406)  PATH-HALF-WIDTH-OFFGRID_mtpldg                      0            0
(  407)  PATH-HALF-WIDTH-OFFGRID_mtpl_dyi                    0            0
(  408)  PATH-HALF-WIDTH-OFFGRID_vtp                         0            0
(  409)  PATH-HALF-WIDTH-OFFGRID_mtpdg                       0            0
(  410)  PATH-HALF-WIDTH-OFFGRID_mtps                        0            0
(  411)  PATH-HALF-WIDTH-OFFGRID_mtp_dyi                     0            0
(  412)  PATH-HALF-WIDTH-OFFGRID_cm                          0            0
(  413)  PATH-HALF-WIDTH-OFFGRID_cm2                         0            0
(  414)  PATH-HALF-WIDTH-OFFGRID_cm3                         0            0
(  415)  PATH-HALF-WIDTH-OFFGRID_cmh                         0            0
(  416)  PATH-HALF-WIDTH-OFFGRID_cmh2                        0            0
(  417)  PATH-HALF-WIDTH-OFFGRID_cmh3                        0            0
(  418)  PATH-HALF-WIDTH-OFFGRID_cm23f                       0            0
(  419)  PATH-HALF-WIDTH-OFFGRID_cmh23f                      0            0
(  420)  PATH-HALF-WIDTH-OFFGRID_cm34f                       0            0
(  421)  PATH-HALF-WIDTH-OFFGRID_cmh34f                      0            0
(  422)  PATH-HALF-WIDTH-OFFGRID_cm45f                       0            0
(  423)  PATH-HALF-WIDTH-OFFGRID_cmh45f                      0            0
(  424)  PATH-HALF-WIDTH-OFFGRID_cm2a                        0            0
(  425)  PATH-HALF-WIDTH-OFFGRID_cmh2a                       0            0
(  426)  PATH-HALF-WIDTH-OFFGRID_dio_mark                    0            0
(  427)  PATH-HALF-WIDTH-OFFGRID_cap_mark                    0            0
(  428)  PATH-HALF-WIDTH-OFFGRID_hwc_bs                      0            0
(  429)  PATH-HALF-WIDTH-OFFGRID_nwres                       0            0
(  430)  PATH-HALF-WIDTH-OFFGRID_hres                        0            0
(  431)  PATH-HALF-WIDTH-OFFGRID_mres                        0            0
(  432)  PATH-HALF-WIDTH-OFFGRID_respoly                     0            0
(  433)  PATH-HALF-WIDTH-OFFGRID_resmet1                     0            0
(  434)  PATH-HALF-WIDTH-OFFGRID_resmet2                     0            0
(  435)  PATH-HALF-WIDTH-OFFGRID_resmet3                     0            0
(  436)  PATH-HALF-WIDTH-OFFGRID_resmet4                     0            0
(  437)  PATH-HALF-WIDTH-OFFGRID_resmtpl                     0            0
(  438)  PATH-HALF-WIDTH-OFFGRID_resmtp                      0            0
(  439)  PATH-HALF-WIDTH-OFFGRID_ram                         0            0
(  440)  PATH-HALF-WIDTH-OFFGRID_rom                         0            0
(  441)  PATH-HALF-WIDTH-OFFGRID_nvram                       0            0
(  442)  PATH-HALF-WIDTH-OFFGRID_flash                       0            0
(  443)  PATH-HALF-WIDTH-OFFGRID_otp                         0            0
(  444)  PATH-HALF-WIDTH-OFFGRID_mtp_xfl                     0            0
(  445)  PATH-HALF-WIDTH-OFFGRID_eep                         0            0
(  446)  PATH-HALF-WIDTH-OFFGRID_xflay_all                   0            0
(  447)  PATH-HALF-WIDTH-OFFGRID_devmark                     0            0
(  448)  PATH-HALF-WIDTH-OFFGRID_dticext                     0            0
(  449)  PATH-HALF-WIDTH-OFFGRID_blkp1                       0            0
(  450)  PATH-HALF-WIDTH-OFFGRID_blkm1                       0            0
(  451)  PATH-HALF-WIDTH-OFFGRID_blkm2                       0            0
(  452)  PATH-HALF-WIDTH-OFFGRID_blkm3                       0            0
(  453)  PATH-HALF-WIDTH-OFFGRID_blkm4                       0            0
(  454)  PATH-HALF-WIDTH-OFFGRID_blkmt                       0            0
(  455)  PATH-HALF-WIDTH-OFFGRID_blkml                       0            0
(  456)  PATH-HALF-WIDTH-OFFGRID_blkall                      0            0
(  457)  PATH-HALF-WIDTH-OFFGRID_lockdg                      0            0
(  458)  PATH-HALF-WIDTH-OFFGRID_lock1dg                     0            0
(  459)  PATH-HALF-WIDTH-OFFGRID_lock2dg                     0            0
(  460)  PATH-HALF-WIDTH-OFFGRID_lockbnCDBA                  0            0
(  461)  PATH-HALF-WIDTH-OFFGRID_lock1bnCDBA                 0            0
(  462)  PATH-HALF-WIDTH-OFFGRID_lock2bnCDBA                 0            0
(  463)  PATH-HALF-WIDTH-OFFGRID_lock3bnCDBA                 0            0
(  464)  PATH-HALF-WIDTH-OFFGRID_lock4bnCDBA                 0            0
(  465)  PATH-HALF-WIDTH-OFFGRID_met1_bndCDBA                0            0
(  466)  PATH-HALF-WIDTH-OFFGRID_met2_bndCDBA                0            0
(  467)  PATH-HALF-WIDTH-OFFGRID_met3_bndCDBA                0            0
(  468)  PATH-HALF-WIDTH-OFFGRID_nopim                       0            0
(  469)  PATH-HALF-WIDTH-OFFGRID_diffnblk                    0            0
(  470)  PATH-HALF-WIDTH-OFFGRID_polynblk                    0            0
(  471)  DNWELL : Not allowed to use                         0            0
(  472)  Q1NW__NWELL_should_be_contacted_by_NDIFF            0            0
(  473)  minority_NWELL_connectors                           0            0
(  474)  NWELL_soft_connect                                  0            0
(  475)  PTUB_should_be_contacted                            0            0
(  476)  minority_PTUB_connectors                            0            0
(  477)  PTUB_soft_connect                                   0            0
(  478)  NDF_should_be_contacted                             0            0
(  479)  minority_NDF_connectors                             0            0
(  480)  NDF_soft_connect                                    0            0
(  481)  NBASE_should_be_contacted                           0            0
(  482)  minority_NBASE_connectors                           0            0
(  483)  NBASE_soft_connect                                  0            0
(  484)  PDF_should_be_contacted                             0            0
(  485)  minority_PDF_connectors                             0            0
(  486)  PDF_soft_connect                                    0            0
(  487)  tiedtub_nbuf_StampErrorFloat                        0            0
(  488)  tiedtub_nbuf_StampErrorConnect                      0            0
(  489)  tiedtub_nbuf_StampErrorMult                         0            0
(  490)  handle_wafer_must_have_same_net                     0            0
(  491)  handle_wafer_contact_is_necessary                   0            0
(  492)  PWELL4_should_be_contacted                          0            0
(  493)  minority_PWELL4_connectors                          0            0
(  494)  PWELL4_soft_connect                                 0            0
(  495)  B1HW : HWTUB overlap of SUBBLK is not al            0            0
(  496)  B2HW : NWELL overlap of HWPTUB is not al            0            0
(  497)  B3HW : HWNTUB and HWPTUB in one HWTUB is            0            0
(  498)  B4HW : HWNTUB without NIMP is not allowe            0            0
(  499)  B5HW : HWPTUB without PIMP is not allowe            0            0
(  500)  B6HW : HWC overlap of CONT, PWBLK, POLY1            0            0
(  501)  B7HW : HWC without DIFF is not allowed              0            0
(  502)  B8HW : HWC without TUB is not allowed               0            0
(  503)  W1HW : Fixed HWC width = 1.5                        0            0
(  504)  W1HW : Fixed HWC width = 1.5                        0            0
(  505)  W2HW : Minimum HWC edge length = 5.0                0            0
(  506)  S1HW : Minimum HWC spacing/notch = 6.5              0            0
(  507)  E1DFHW : Minimum DIFF enclosure of HWC =            0            0
(  508)  B9HW : HWC overlap of Handle wafer marke            0            0
(  509)  B10HW : When HWC module is used the foll            0            0
(  510)  B4DF : When HWC module is used the follo            0            0
(  511)  B4GA : When HWC module is used the follo            0            0
(  512)  B1NC : DNC is only allowed for dfwdpa, p            0            0
(  513)  B2NC : DNC without NWELL is not allowed             0            0
(  514)  B3NC : NW_VERIFY overlap of DNC is not a            0            0
(  515)  W1NC : Minimum DNC width = 0.86                     0            0
(  516)  S1NC : Minimum DNC spacing/notch = 0.6              0            0
(  517)  B1PC : DPC is only allowed for nhsj1_#,             0            0
(  518)  B2PC : DPC crossing MV edge is not allow            0            0
(  519)  B3PC : DPC overlap of NWELL or PWBLK is             0            0
(  520)  W1PC : Minimum DPC width = 0.6                      0            0
(  521)  S1PC : Minimum DPC spacing/notch = 0.6              0            0
(  522)  S1PCNW : Minimum DPC spacing to NWELL =             0            0
(  523)  B1DT : DTI must form closed rings                   0            0
(  524)  B4DT : DTI corner is 90 degree                      0            0
(  525)  W1DT : Fixed DTI width = 1.0                        0            0
(  526)  W1DT : Fixed DTI width = 1.0                        0            0
(  527)  W2DT : Minimum FOXDTI width = 0.5                   0            0
(  528)  S1DT : Minimum DIFFDTI spacing to DTI =             0            0
(  529)  S2DT : Minimum FOXDTI spacing to DTI = 1            0            0
(  530)  S1DTHW : Minimum DTI spacing to HWC = 4.            0            0
(  531)  B1DTDC : 90 degree DIFFDTI corner (width            0            0
(  532)  B1NW : NW_VERIFY overlap of DIFF is not             0            0
(  533)  B8NW : NW_VERIFY overlap of DTI is not a            0            0
(  534)  W1NW : Minimum NWELL width = 0.86                   0            0
(  535)  S1NW : Minimum NWELL spacing/notch = 0.6            0            0
(  536)  S2NW : Minimum NWELL spacing (different             0            0
(  537)  S2NW : Minimum NWELL spacing (different             0            0
(  538)  S3NW : Minimum (NWELL AND MV) spacing to            0            0
(  539)  S3NW : Minimum NWELL spacing (different             0            0
(  540)  A1NW : Minimum NWELL area = 1.0                     0            0
(  541)  W1W7 : Minimum NWELL1_E width = 0.5                 0            0
(  542)  W1W8 : Minimum PWELL1_E width = 0.5                 0            0
(  543)  W1W9 : Minimum NWELL2_E width = 0.5                 0            0
(  544)  W1W10 : Minimum PWELL2_E width = 0.5                0            0
(  545)  W1W11 : Minimum NWELL3_E width = 0.5                0            0
(  546)  W1W12 : Minimum PWELL3_E width = 0.5                0            0
(  547)  W1W1  : Minimum NWELL1 width = 0.86                 0            0
(  548)  W1W2  : Minimum PWELL1 width = 0.6                  0            0
(  549)  W1W3  : Minimum NWELL2 width = 0.86                 0            0
(  550)  W1W4  : Minimum PWELL2 width = 0.6                  0            0
(  551)  W1W5  : Minimum NWELL3 width = 0.86                 0            0
(  552)  W1W6  : Minimum PWELL3 width = 0.6                  0            0
(  553)  B2PB : PWBLK overlap of NWELL is not all            0            0
(  554)  B3PB : PWBLK overlap of PIMP is not allo            0            0
(  555)  B4PB : ACTIVE crossing PWBLK edge is not            0            0
(  556)  B6PB : Only a single rectangular NDIFF i            0            0
(  557)  B6PB : Only a single rectangular NDIFF i            0            0
(  558)  W1PB : Minimum PWBLK width = 0.6                    0            0
(  559)  S1PB : Minimum PWBLK spacing/notch = 0.8            0            0
(  560)  S1PB : Minimum PWBLK spacing/notch = 0.8            0            0
(  561)  S2PB : Minimum PWBLK spacing/notch = 0.6            0            0
(  562)  E1PBDN : Fixed PWBLK enclosure of NDIFF             0            0
(  563)  E1PBDN : Fixed PWBLK enclosure of NDIFF             0            0
(  564)  S1PBDN : Minimum PWBLK spacing to NDIFF             0            0
(  565)  S1PBDN : Minimum PWBLK spacing to NDIFF             0            0
(  566)  S1PBNW : Minimum PWBLK spacing to NWELL             0            0
(  567)  S1PBNW : Minimum PWBLK spacing to NWELL             0            0
(  568)  B1DF : ACTIVE without NIMP or PIMP is no            0            0
(  569)  B3DF : ACTIVE crossing NWELL edge is not            0            0
(  570)  W1DF : Minimum DIFF width = 0.22                    0            0
(  571)  W2DF : Minimum length of coincident NDIF            0            0
(  572)  S1DF : Minimum DIFF spacing/notch = 0.28            0            0
(  573)  E1NWDP : Minimum NWELL enclosure of PDIF            0            0
(  574)  S1DNNW : Minimum NDIFF spacing to NWELL             0            0
(  575)  E1NWDN : Minimum NWELL enclosure of NDIF            0            0
(  576)  E1NWDN : Minimum NWELL enclosure of NDIF            0            0
(  577)  S1DPNW : Minimum PDIFF spacing to NWELL             0            0
(  578)  S2DF : Minimum NDIFF in NWELL spacing to            0            0
(  579)  A1DF : Minimum ACTIVE area = 0.202                  0            0
(  580)  S1DFDT : Minimum DIFF spacing to DTI = 0            0            0
(  581)  O1DFDT : Minimum DIFF overlap of DTI = 0            0            0
(  582)  E1DFHW : Minimum DIFF enclosure of HWC =            0            0
(  583)  E1DFDT : Minimum DIFF extension beyond D            0            0
(  584)  W1MV : Minimum MV width = 0.6                       0            0
(  585)  S1MV : Minimum MV spacing/notch = 0.86              0            0
(  586)  E1MVDF : Minimum MV enclosure of ACTIVE             0            0
(  587)  S1MVDF : Minimum MV spacing to ACTIVE =             0            0
(  588)  E1MVGA : Minimum MV enclosure of GATE =             0            0
(  589)  S1MVGA : Minimum MV spacing to GATE = 0.            0            0
(  590)  B1MV : ACTIVE crossing MV edge is not al            0            0
(  591)  B2MV : NW_VERIFY crossing MV edge is not            0            0
(  592)  S1MVDT : Minimum MV spacing to DTI = 0.7            0            0
(  593)  W1P1 : Minimum POLY1 width = 0.18                   0            0
(  594)  W2P1 : Minimum POLY1 width (for 45 degre            0            0
(  595)  S1P1 : Minimum POLY1 spacing/notch = 0.2            0            0
(  596)  S1P1DF : Minimum POLY1 spacing to ACTIVE            0            0
(  597)  E1P1GA : Minimum POLY1 extension beyond             0            0
(  598)  E1DFGA : Minimum DIFF extension beyond G            0            0
(  599)  B1GA : 90 degree bent GATE is not allowe            0            0
(  600)  B2GA : Illegal GATE construct                       0            0
(  601)  B2GA : Illegal GATE construct                       0            0
(  602)  B1P1 : (POLY1 and SBLK and not (HRES or             0            0
(  603)  B3P1 : POLY1 overlap of DIFFDTI is not a            0            0
(  604)  S1GADT : Minimum GATE spacing to DTI = 0            0            0
(  605)  A1P1 : Minimum POLY1 area = 0.118                   0            0
(  606)  W1SB : Minimum SBLK width = 0.43                    0            0
(  607)  S1SB : Minimum SBLK spacing/notch = 0.43            0            0
(  608)  S1SBDF : Minimum SBLK spacing to DIFF =             0            0
(  609)  E1SBDF : Minimum SBLK extension beyond A            0            0
(  610)  S1SBP1 : Minimum SBLK spacing to POLY1 =            0            0
(  611)  E1SBP1 : Minimum SBLK extension beyond P            0            0
(  612)  S1SBGA : Minimum SBLK spacing to GATE =             0            0
(  613)  O1SBGA : Minimum SBLK overlap of GATE =             0            0
(  614)  S1SBCT : Minimum SBLK spacing to CONT =             0            0
(  615)  E1DFSB : Minimum ACTIVE extension beyond            0            0
(  616)  A1SB : Minimum SBLK area = 2.0                      0            0
(  617)  S1SBDT : Minimum SBLK spacing to DTI = 0            0            0
(  618)  B1SA : SALICIDE is only allowed inside T            0            0
(  619)  B3SA : SALICIDE without DIFF is not allo            0            0
(  620)  B2SA : SALICIDE must connect to DIFFCON             0            0
(  621)  W1SA : Minimum SALICIDE width = 0.5                 0            0
(  622)  S1SA : Minimum SALICIDE spacing/notch =             0            0
(  623)  W1IN : Minimum NIMP width = 0.44                    0            0
(  624)  S1IN : Minimum NIMP spacing/notch = 0.44            0            0
(  625)  E1INDF : Minimum NIMP extension beyond A            0            0
(  626)  E1INDF : Minimum NIMP extension beyond A            0            0
(  627)  E2INDF : Minimum NIMP extension beyond A            0            0
(  628)  O1INDF : Minimum ACTIVE overlap of NIMP             0            0
(  629)  E1DNP1 : Minimum NDIFF extension beyond             0            0
(  630)  S1INDP : Minimum NIMP spacing to PDIFF =            0            0
(  631)  S2INDP : Minimum NIMP spacing to PDIFF (            0            0
(  632)  S3INDP : Minimum NIMP spacing to PDIFF =            0            0
(  633)  E1INDN : Minimum NIMP extension beyond P            0            0
(  634)  A1IN : Minimum NIMP area = 0.3844                   0            0
(  635)  B1IPIN : PIMP overlap of NIMP is not all            0            0
(  636)  W1IP : Minimum PIMP width = 0.44                    0            0
(  637)  S1IP : Minimum PIMP spacing/notch = 0.44            0            0
(  638)  E1IPDF : Minimum PIMP extension beyond A            0            0
(  639)  E1IPDF : Minimum PIMP extension beyond A            0            0
(  640)  E2IPDF : Minimum PIMP extension beyond A            0            0
(  641)  O1IPDF : Minimum ACTIVE overlap of PIMP             0            0
(  642)  E1DPP1 : Minimum PDIFF extension beyond             0            0
(  643)  S1IPDN : Minimum PIMP spacing to NDIFF (            0            0
(  644)  S2IPDN : Minimum PIMP spacing to NDIFF =            0            0
(  645)  S3IPDN : Minimum PIMP spacing to NDIFF =            0            0
(  646)  E1IPDP : Minimum PIMP extension beyond P            0            0
(  647)  A1IP : Minimum PIMP area = 0.3844                   0            0
(  648)  B1CT : CONT without NDIFF or PDIFF or PO            0            0
(  649)  B1CTGA : CONT overlap of GATE is not all            0            0
(  650)  B1CTSB : CONT overlap of SBLK is not all            0            0
(  651)  W1CT : Fixed CONT size = 0.22                       0            0
(  652)  S1CT : Minimum CONT spacing = 0.25                  0            0
(  653)  S2CT : Minimum CONT spacing = 0.28                  0            0
(  654)  E1DFCT : Minimum DIFF enclosure of CONT             0            0
(  655)  S1CTP1 : Minimum CONT spacing to POLY1 =            0            0
(  656)  E1P1CT : Minimum POLY1 enclosure of CONT            0            0
(  657)  S1CTDF : Minimum CONT spacing to DIFF =             0            0
(  658)  E1CTIP : Minimum PIMP enclosure of DIFFC            0            0
(  659)  E1CTIN : Minimum NIMP enclosure of DIFFC            0            0
(  660)  E2CTIP : Minimum PIMP enclosure of DIFFC            0            0
(  661)  E2CTIN : Minimum NIMP enclosure of DIFFC            0            0
(  662)  S1CTDT : Minimum DIFFCON spacing to DTI             0            0
(  663)  B1CTDT : DIFFCON overlap DTI is not allo            0            0
(  664)  S2CTDT : Minimum DIFFCON spacing to DTI             0            0
(  665)  S1CTHW : Minimum CONT spacing to HWC = 3            0            0
(  666)  B1CTM1 : CONT must be covered by MET1               0            0
(  667)  W1M1 : Minimum MET1 width = 0.23                    0            0
(  668)  S1M1 : Minimum MET1 spacing/notch = 0.23            0            0
(  669)  S2M1 : Minimum MET1 spacing to WIDE_MET1            0            0
(  670)  E1M1CT : Minimum MET1 enclosure of CONT             0            0
(  671)  E2M1CT : Minimum MET1 enclosure of CONT             0            0
(  672)  A1M1 : Minimum MET1 area = 0.202                    0            0
(  673)  B1M1 : All MET1 tracks > 35um wide to be            0            0
(  674)  W2M1 : Minimum M1SLOT width = 0.6                   0            0
(  675)  W3M1 : Minimum M1SLOT length = 20.0                 0            0
(  676)  S3M1 : Minimum M1SLOT spacing/notch = 10            0            0
(  677)  E1M1M1 : Minimum MET1 enclosure of M1SLO            0            0
(  678)  E1M1M1 : M1SLOT without MET1 is not allo            0            0
(  679)  B1V1 : VIA1 must be covered by MET1 and             0            0
(  680)  W1V1 : Fixed VIA1 size = 0.26                       0            0
(  681)  S1V1 : Minimum VIA1 spacing = 0.26                  0            0
(  682)  E1M1V1 : Minimum MET1 enclosure of VIA1             0            0
(  683)  E2M1V1 : Minimum MET1 enclosure of VIA1             0            0
(  684)  E1M2V1 : Minimum MET2 enclosure of VIA1             0            0
(  685)  E2M2V1 : Minimum MET2 enclosure of VIA1             0            0
(  686)  W1M2 : Minimum MET2 width = 0.28                    0            0
(  687)  S1M2 : Minimum MET2 spacing/notch = 0.28            0            0
(  688)  S2M2 : Minimum MET2 spacing to WIDE_MET2            0            0
(  689)  A1M2 : Minimum MET2 area = 0.202                    0            0
(  690)  B1M2 : All MET2 tracks > 35um wide to be            0            0
(  691)  W2M2 : Minimum M2SLOT width = 0.6                   0            0
(  692)  W3M2 : Minimum M2SLOT length = 20.0                 0            0
(  693)  S3M2 : Minimum M2SLOT spacing/notch = 10            0            0
(  694)  S1M2M1 : Minimum M2SLOT spacing to M1SLO            0            0
(  695)  E1M2M2 : Minimum MET2 enclosure of M2SLO            0            0
(  696)  E1M2M2 : M2SLOT without MET2 is not allo            0            0
(  697)  S1M2M1 : M2SLOT overlap of M1SLOT is not            0            0
(  698)  B1V2 : VIA2 must be covered by MET2 and             0            0
(  699)  W1V2 : Fixed VIA2 size = 0.26                       0            0
(  700)  S1V2 : Minimum VIA2 spacing = 0.26                  0            0
(  701)  E1M2V2 : Minimum MET2 enclosure of VIA2             0            0
(  702)  E2M2V2 : Minimum MET2 enclosure of VIA2             0            0
(  703)  E1M3V2 : Minimum MET3 enclosure of VIA2             0            0
(  704)  E2M3V2 : Minimum MET3 enclosure of VIA2             0            0
(  705)  W1M3 : Minimum MET3 width = 0.28                    0            0
(  706)  S1M3 : Minimum MET3 spacing/notch = 0.28            0            0
(  707)  S2M3 : Minimum MET3 spacing to WIDE_MET3            0            0
(  708)  A1M3 : Minimum MET3 area = 0.202                    0            0
(  709)  B1M3 : All MET3 tracks > 35um wide to be            0            0
(  710)  W2M3 : Minimum M3SLOT width = 0.6                   0            0
(  711)  W3M3 : Minimum M3SLOT length = 20.0                 0            0
(  712)  S3M3 : Minimum M3SLOT spacing/notch = 10            0            0
(  713)  S1M3M2 : Minimum M3SLOT spacing to M2SLO            0            0
(  714)  E1M3M3 : Minimum MET3 enclosure of M3SLO            0            0
(  715)  E1M3M3 : M3SLOT without MET3 is not allo            0            0
(  716)  S1M3M2 : M3SLOT overlap of M2SLOT is not            0            0
(  717)  B1V3 : VIA3 must be covered by MET3 and             0            0
(  718)  W1V3 : Fixed VIA3 size = 0.26                       0            0
(  719)  S1V3 : Minimum VIA3 spacing = 0.26                  0            0
(  720)  E1M3V3 : Minimum MET3 enclosure of VIA3             0            0
(  721)  E2M3V3 : Minimum MET3 enclosure of VIA3             0            0
(  722)  E1M4V3 : Minimum MET4 enclosure of VIA3             0            0
(  723)  E2M4V3 : Minimum MET4 enclosure of VIA3             0            0
(  724)  W1M4 : Minimum MET4 width = 0.28                    0            0
(  725)  S1M4 : Minimum MET4 spacing/notch = 0.28            0            0
(  726)  S2M4 : Minimum MET4 spacing to WIDE_MET4            0            0
(  727)  A1M4 : Minimum MET4 area = 0.202                    0            0
(  728)  B1M4 : All MET4 tracks > 35um wide to be            0            0
(  729)  W2M4 : Minimum M4SLOT width = 0.6                   0            0
(  730)  W3M4 : Minimum M4SLOT length = 20.0                 0            0
(  731)  S3M4 : Minimum M4SLOT spacing/notch = 10            0            0
(  732)  S1M4M3 : Minimum M4SLOT spacing to M3SLO            0            0
(  733)  E1M4M4 : Minimum MET4 enclosure of M4SLO            0            0
(  734)  E1M4M4 : M4SLOT without MET4 is not allo            0            0
(  735)  S1M4M3 : M4SLOT overlap of M3SLOT is not            0            0
(  736)  W1VT : Fixed VIATP size = 0.36                      0            0
(  737)  S1VT : Minimum VIATP spacing = 0.35                 0            0
(  738)  E1MTVT : Minimum METTP enclosure of VIAT            0            0
(  739)  B1VT : VIATP must be covered by METTP               0            0
(  740)  B1VTM4 : VIATP must be covered by MET4              0            0
(  741)  E1M4VT : Minimum MET4 enclosure of VIATP            0            0
(  742)  E2M4VT : Minimum MET4 enclosure of VIATP            0            0
(  743)  W1MT : Minimum METTP width = 0.44                   0            0
(  744)  S1MT : Minimum METTP spacing/notch = 0.4            0            0
(  745)  S2MT : Minimum METTP spacing to WIDE_MET            0            0
(  746)  A1MT : Minimum METTP area = 0.562                   0            0
(  747)  B1MT : All METTP tracks > 35um wide to b            0            0
(  748)  W2MT : Minimum MTPSLOT width = 0.6                  0            0
(  749)  W3MT : Minimum MTPSLOT length = 20.0                0            0
(  750)  S3MT : Minimum MTPSLOT spacing/notch = 1            0            0
(  751)  E1MTMT : Minimum METTP enclosure of MTPS            0            0
(  752)  E1MTMT : MTPSLOT without METTP is not al            0            0
(  753)  S1MTM4 : Minimum MTPSLOT spacing to M4SL            0            0
(  754)  S1MTM4 : MTPSLOT overlap M4SLOT is not a            0            0
(  755)  B1VL : VIATPL must be covered by METTPL             0            0
(  756)  W1VL : Fixed VIATPL size = 0.5                      0            0
(  757)  S1VL : Minimum VIATPL spacing = 0.45                0            0
(  758)  E1MLVL : Minimum METTPL enclosure of VIA            0            0
(  759)  B1VLMT : VIATPL must be covered by METTP            0            0
(  760)  E1MTVL : Minimum METTP enclosure of VIAT            0            0
(  761)  B1ML : METTPL tracks > 35.0 are not allo            0            0
(  762)  W1ML : Minimum METTPL width = 3.0                   0            0
(  763)  S1ML : Minimum METTPL spacing/notch = 2.            0            0
(  764)  A1ML : Minimum METTPL area = 10.0                   0            0
(  765)  A2ML : Minimum METTPL enclosed area = 18            0            0
(  766)  W1IB : Minimum NOPIM width = 60.0                   0            0
(  767)  S1IB : Minimum NOPIM spacing/notch = 20.            0            0
(  768)  S1IBPA : Minimum NOPIM spacing to PAD =             0            0
(  769)  B4PA : PAD without METTPL is not allowed            0            0
(  770)  E1MLPA : Minimum METTPL enclosure of PAD            0            0
(  771)  W1PA : Minimum PAD width = 15.0                     0            0
(  772)  S1PA : Minimum PAD spacing/notch = 7.0              0            0
(  773)  S1PADT : Minimum PAD spacing to DTI = 2.            0            0
(  774)  B2PA : PAD overlap of DIFF, POLY1 or DTI            0            0
(  775)  Q1PA : Minimum recommended bond PAD widt            0            0
(  776)  S1PADF : Minimum PAD spacing to DIFF = 5            0            0
(  777)  S1PAP1 : Minimum PAD spacing to POLY1 =             0            0
(  778)  S1PAM1 : Minimum PAD spacing to MET1 (di            0            0
(  779)  S1PAM2 : Minimum PAD spacing to MET2 (di            0            0
(  780)  E1M1PA : Minimum MET1 enclosure of PAD =            0            0
(  781)  E1M1PA : Minimum MET1 enclosure of PAD =            0            0
(  782)  E1M2PA : Minimum MET2 enclosure of PAD =            0            0
(  783)  E1M2PA : Minimum MET2 enclosure of PAD =            0            0
(  784)  S2V1 : Minimum VIA1 spacing = 0.45                  0            0
(  785)  E3M1V1 : Minimum MET1 and MET2 enclosure            0            0
(  786)  E3M1V1 : Minimum MET1 and MET2 enclosure            0            0
(  787)  S1PAM3 : Minimum PAD spacing to MET3 (di            0            0
(  788)  E1M3PA : Minimum MET3 enclosure of PAD =            0            0
(  789)  E1M3PA : Minimum MET3 enclosure of PAD =            0            0
(  790)  S2V2 : Minimum VIA2 spacing = 0.45                  0            0
(  791)  S1V2V1 : Minimum VIA2 spacing to VIA1 =             0            0
(  792)  S1V2V1 : Minimum VIA2 spacing to VIA1 =             0            0
(  793)  E3M2V2 : Minimum MET2 and MET3 enclosure            0            0
(  794)  E3M2V2 : Minimum MET2 and MET3 enclosure            0            0
(  795)  S1PAM4 : Minimum PAD spacing to MET4 (di            0            0
(  796)  E1M4PA : Minimum MET4 enclosure of PAD =            0            0
(  797)  E1M4PA : Minimum MET4 enclosure of PAD =            0            0
(  798)  S2V3 : Minimum VIA3 spacing = 0.45                  0            0
(  799)  S1V3V2 : Minimum VIA3 spacing to VIA2 =             0            0
(  800)  S1V3V2 : Minimum VIA3 spacing to VIA2 =             0            0
(  801)  E3M3V3 : Minimum MET3 and MET4 enclosure            0            0
(  802)  E3M3V3 : Minimum MET3 and MET4 enclosure            0            0
(  803)  S1PAML : Minimum PAD spacing to METTPL (            0            0
(  804)  E2MLVL : Minimum METTPL enclosure of VIA            0            0
(  805)  E2MTVL : Minimum METTP enclosure of VIAT            0            0
(  806)  S1VTV3 : Minimum VIATP spacing to VIA3 =            0            0
(  807)  S1VTV3 : Minimum VIATP spacing to VIA3 =            0            0
(  808)  E3M4VT : Minimum MET4 enclosure of VIATP            0            0
(  809)  R1V1PA : Minimum ratio of VIA1 (in pad)             0            0
(  810)  R1VTPA : Minimum ratio of VIATP (in pad)            0            0
(  811)  R1V2PA : Minimum ratio of VIA2 (in pad)             0            0
(  812)  R1V3PA : Minimum ratio of VIA3 (in pad)             0            0
(  813)  R1VLPA : Minimum ratio of VIATPL (in pad            0            0
(  814)  B15PA : Probe PAD with VIATPL is not all            0            0
(  815)  S1PAVL : Minimum PAD spacing to VIATPL =            0            0
(  816)  B3CM : CAPM is not allowed when CAPM23F,            0            0
(  817)  B1CM : CAPM without BM is not allowed               0            0
(  818)  W1CM : Minimum CAPM width = 2.0                     0            0
(  819)  W2CM : Maximum CAPM bounding box size =             0            0
(  820)  S1CM : Minimum CAPM spacing/notch = 1.5             0            0
(  821)  S1CMPA : Minimum CAPM spacing to PAD = 1            0            0
(  822)  S1CMVT : Minimum CAPM spacing to VIATP =            0            0
(  823)  E1CMVT : Minimum CAPM enclosure of VIATP            0            0
(  824)  E1CMVT : Minimum CAPM enclosure of VIATP            0            0
(  825)  E1BMCM : Minimum BM enclosure of CAPM =             0            0
(  826)  E1BMVT : Minimum BM enclosure of VIATP =            0            0
(  827)  E1BMVN : Minimum BM enclosure of VIAn =             0            0
(  828)  S1CMVN : Minimum CAPM spacing to VIAn =             0            0
(  829)  B2CM : CAPM overlap of VIAn or PAD is no            0            0
(  830)  S3VT : Minimum VIATP spacing on CAPM = 2            0            0
(  831)  Q1VT : Recommended minimum ratio of VIAT            0            0
(  832)  B1CH : CAPMH without BM is not allowed              0            0
(  833)  B3CH : CAPMH is not allowed when CAPM, C            0            0
(  834)  W1CH : Minimum CAPMH width = 2.0                    0            0
(  835)  W2CH : Maximum CAPMH bounding box size =            0            0
(  836)  S1CH : Minimum CAPMH spacing/notch = 1.5            0            0
(  837)  S1CHPA : Minimum CAPMH spacing to PAD =             0            0
(  838)  S1CHVT : Minimum CAPMH spacing to VIATP             0            0
(  839)  E1CHVT : Minimum CAPMH enclosure of VIAT            0            0
(  840)  E1CHVT : Minimum CAPMH enclosure of VIAT            0            0
(  841)  E2BMVT : Minimum BM enclosure of VIATP =            0            0
(  842)  E1BMCH : Minimum BM enclosure of CAPMH =            0            0
(  843)  E2BMVN : Minimum BM enclosure of VIAn =             0            0
(  844)  S1CHVN : Minimum CAPMH spacing to VIAn =            0            0
(  845)  B2CH : CAPMH overlap of VIAn or PAD is n            0            0
(  846)  S4VT : Minimum VIATP spacing on CAPMH =             0            0
(  847)  Q4VT : Recommended minimum ratio of VIAT            0            0
(  848)  B1DM : CAPM2 is not allowed when CAPM, C            0            0
(  849)  B2DM : CAPM2 must be enclosed by MET2 an            0            0
(  850)  B3DM : CAPM2 must not be over VIA1 or PA            0            0
(  851)  B4DM : CAPM2 without VIA2 is not allowed            0            0
(  852)  Q1V2 : Recommended minimum ratio of VIA2            0            0
(  853)  W1DM : Minimum CAPM2 width = 2.0                    0            0
(  854)  W2DM : Maximum CAPM2 bounding box size =            0            0
(  855)  S1DM : Minimum CAPM2 spacing/notch = 1.5            0            0
(  856)  S1DMPA : Minimum CAPM2 spacing to PAD =             0            0
(  857)  S1DMV1 : Minimum CAPM2 spacing to VIA1 =            0            0
(  858)  S1DMV2 : Minimum CAPM2 spacing to VIA2 =            0            0
(  859)  E1DMV2 : Minimum CAPM2 enclosure of VIA2            0            0
(  860)  E1DMV2 : Minimum CAPM2 enclosure of VIA2            0            0
(  861)  E1M2DM : Minimum MET2 enclosure of CAPM2            0            0
(  862)  E1M3DM : Minimum MET3 enclosure of CAPM2            0            0
(  863)  E3M2V1 : Minimum MET2 enclosure of VIA1             0            0
(  864)  E4M2V2 : Minimum MET2 enclosure of VIA2             0            0
(  865)  E4M3V2 : Minimum MET3 enclosure of VIA2             0            0
(  866)  S3V2 : Minimum VIA2 spacing on CAPM2 = 2            0            0
(  867)  B7DM : CAPM2 without VIA3 is not allowed            0            0
(  868)  B8DM : MET2 and MET4 must be connected (            0            0
(  869)  Q1V3 : Recommended minimum ratio of VIA3            0            0
(  870)  S1DMV3 : Minimum CAPM2 spacing to VIA3 =            0            0
(  871)  E1DMV3 : Minimum CAPM2 enclosure of VIA3            0            0
(  872)  E1DMV3 : Minimum CAPM2 enclosure of VIA3            0            0
(  873)  E4M3V3 : Minimum MET3 enclosure of VIA3             0            0
(  874)  S3V3 : Minimum VIA3 spacing on CAPM2 = 2            0            0
(  875)  B1TM : CAPM3 is not allowed when CAPM, C            0            0
(  876)  B2TM : CAPM3 must be enclosed by MET2, M            0            0
(  877)  B3TM : CAPM3 must not be over VIA1 or PA            0            0
(  878)  B4TM : CAPM3 without VIA2 or VIA3 is not            0            0
(  879)  B5TM : MET2 and MET4 must be connected              0            0
(  880)  Q2V2 : Recommended minimum ratio of VIA2            0            0
(  881)  Q2V3 : Recommended minimum ratio of VIA3            0            0
(  882)  W1TM : Minimum CAPM3 width = 2.0                    0            0
(  883)  W2TM : Maximum CAPM3 bounding box size =            0            0
(  884)  S1TM : Minimum CAPM3 spacing/notch = 1.5            0            0
(  885)  S1TMPA : Minimum CAPM3 spacing to PAD =             0            0
(  886)  S1TMV1 : Minimum CAPM3 spacing to VIA1 =            0            0
(  887)  S1TMV2 : Minimum CAPM3 spacing to VIA2 =            0            0
(  888)  S1TMV3 : Minimum CAPM3 spacing to VIA3 =            0            0
(  889)  E1TMV2 : Minimum CAPM3 enclosure of VIA2            0            0
(  890)  E1TMV2 : Minimum CAPM3 enclosure of VIA2            0            0
(  891)  E1TMV3 : Minimum CAPM3 enclosure of VIA3            0            0
(  892)  E1TMV3 : Minimum CAPM3 enclosure of VIA3            0            0
(  893)  E1M2TM : Minimum MET2 enclosure of CAPM3            0            0
(  894)  E1M3TM : Minimum MET3 enclosure of CAPM3            0            0
(  895)  E1M4TM : Minimum MET4 enclosure of CAPM3            0            0
(  896)  E4M2V1 : Minimum MET2 enclosure of VIA1             0            0
(  897)  E5M2V2 : Minimum MET2 enclosure of VIA2             0            0
(  898)  E5M3V2 : Minimum MET3 enclosure of VIA2             0            0
(  899)  E5M3V3 : Minimum MET3 enclosure of VIA3             0            0
(  900)  E3M4V3 : Minimum MET4 enclosure of VIA3             0            0
(  901)  S4V2 : Minimum VIA2 spacing on CAPM3 = 2            0            0
(  902)  S4V3 : Minimum VIA3 spacing on CAPM3 = 2            0            0
(  903)  B6TM : CAPM3 without VIATP is not allowe            0            0
(  904)  B7TM : MET3 and METTP must be connected             0            0
(  905)  Q3VT : Recommended minimum ratio of VIAT            0            0
(  906)  S1TMVT : Minimum CAPM3 spacing to VIATP             0            0
(  907)  E1TMVT : Minimum CAPM3 enclosure of VIAT            0            0
(  908)  E1TMVT : Minimum CAPM3 enclosure of VIAT            0            0
(  909)  E4M4VT : Minimum MET4 enclosure of VIATP            0            0
(  910)  S6VT : Minimum VIATP spacing on CAPM3 =             0            0
(  911)  B1DH : CAPMH2 is not allowed when CAPM,             0            0
(  912)  B2DH : CAPMH2 must be enclosed by MET2 a            0            0
(  913)  B3DH : CAPMH2 must not be over VIA1 or P            0            0
(  914)  B4DH : CAPMH2 without VIA2 is not allowe            0            0
(  915)  Q5V2 : Recommended minimum ratio of VIA2            0            0
(  916)  W1DH : Minimum CAPMH2 width = 2.0                   0            0
(  917)  W2DH : Maximum CAPMH2 bounding box size             0            0
(  918)  S1DH : Minimum CAPMH2 spacing/notch = 1.            0            0
(  919)  S1DHPA : Minimum CAPMH2 spacing to PAD =            0            0
(  920)  S1DHV1 : Minimum CAPMH2 spacing to VIA1             0            0
(  921)  S1DHV2 : Minimum CAPMH2 spacing to VIA2             0            0
(  922)  E1DHV2 : Minimum CAPMH2 enclosure of VIA            0            0
(  923)  E1DHV2 : Minimum CAPMH2 enclosure of VIA            0            0
(  924)  E1M2DH : Minimum MET2 enclosure of CAPMH            0            0
(  925)  E1M3DH : Minimum MET3 enclosure of CAPMH            0            0
(  926)  E3M2V1 : Minimum MET2 enclosure of VIA1             0            0
(  927)  E4M2V2 : Minimum MET2 enclosure of VIA2             0            0
(  928)  E4M3V2 : Minimum MET3 enclosure of VIA2             0            0
(  929)  S7V2 : Minimum VIA2 spacing on CAPMH2 =             0            0
(  930)  B7DH : CAPMH2 without VIA3 is not allowe            0            0
(  931)  B8DH : MET2 and MET4 must be connected (            0            0
(  932)  Q5V3 : Recommended minimum ratio of VIA3            0            0
(  933)  S1DHV3 : Minimum CAPMH2 spacing to VIA3             0            0
(  934)  E1DHV3 : Minimum CAPMH2 enclosure of VIA            0            0
(  935)  E1DHV3 : Minimum CAPMH2 enclosure of VIA            0            0
(  936)  E4M3V3 : Minimum MET3 enclosure of VIA3             0            0
(  937)  S7V3 : Minimum VIA3 spacing on CAPMH2 =             0            0
(  938)  B1TH : CAPMH3 is not allowed when CAPM,             0            0
(  939)  B2TH : CAPMH3 must be enclosed by MET2,             0            0
(  940)  B3TH : CAPMH3 must not be over VIA1 or P            0            0
(  941)  B4TH : CAPMH3 without VIA2 or VIA3 is no            0            0
(  942)  B5TH : MET2 and MET4 must be connected              0            0
(  943)  Q6V2 : Recommended minimum ratio of VIA2            0            0
(  944)  Q6V3 : Recommended minimum ratio of VIA3            0            0
(  945)  W1TH : Minimum CAPMH3 width = 2.0                   0            0
(  946)  W2TH : Maximum CAPMH3 bounding box size             0            0
(  947)  S1TH : Minimum CAPMH3 spacing/notch = 1.            0            0
(  948)  S1THPA : Minimum CAPMH3 spacing to PAD =            0            0
(  949)  S1THV1 : Minimum CAPMH3 spacing to VIA1             0            0
(  950)  S1THV2 : Minimum CAPMH3 spacing to VIA2             0            0
(  951)  S1THV3 : Minimum CAPMH3 spacing to VIA3             0            0
(  952)  E1THV2 : Minimum CAPMH3 enclosure of VIA            0            0
(  953)  E1THV2 : Minimum CAPMH3 enclosure of VIA            0            0
(  954)  E1THV3 : Minimum CAPMH3 enclosure of VIA            0            0
(  955)  E1THV3 : Minimum CAPMH3 enclosure of VIA            0            0
(  956)  E1M2TH : Minimum MET2 enclosure of CAPMH            0            0
(  957)  E1M3TH : Minimum MET3 enclosure of CAPMH            0            0
(  958)  E1M4TH : Minimum MET4 enclosure of CAPMH            0            0
(  959)  E4M2V1 : Minimum MET2 enclosure of VIA1             0            0
(  960)  E5M2V2 : Minimum MET2 enclosure of VIA2             0            0
(  961)  E5M3V2 : Minimum MET3 enclosure of VIA2             0            0
(  962)  E5M3V3 : Minimum MET3 enclosure of VIA3             0            0
(  963)  E3M4V3 : Minimum MET4 enclosure of VIA3             0            0
(  964)  S8V2 : Minimum VIA2 spacing on CAPMH3 =             0            0
(  965)  S8V3 : Minimum VIA3 spacing on CAPMH3 =             0            0
(  966)  B6TH : CAPMH3 without VIATP is not allow            0            0
(  967)  B7TH : MET3 and METTP must be connected             0            0
(  968)  Q6VT : Recommended minimum ratio of VIAT            0            0
(  969)  S1THVT : Minimum CAPMH3 spacing to VIATP            0            0
(  970)  E1THVT : Minimum CAPMH3 enclosure of VIA            0            0
(  971)  E1THVT : Minimum CAPMH3 enclosure of VIA            0            0
(  972)  E4M4VT : Minimum MET4 enclosure of VIATP            0            0
(  973)  S8VT : Minimum VIATP spacing on CAPMH3 =            0            0
(  974)  B3C3 : CAPM23F is not allowed when CAPM,            0            0
(  975)  B2C3 : CAPM23F overlap of VIA1 or PAD is            0            0
(  976)  B1C3 : CAPM23F without MET2 is not allow            0            0
(  977)  W1C3 : Minimum CAPM23F width = 2.0                  0            0
(  978)  W2C3 : Maximum CAPM23F bounding box size            0            0
(  979)  S1C3 : Minimum CAPM23F spacing/notch = 1            0            0
(  980)  S1C3PA : Minimum CAPM23F spacing to PAD             0            0
(  981)  S1C3V1 : Minimum CAPM23F spacing to VIA1            0            0
(  982)  S1C3V2 : Minimum CAPM23F spacing to VIA2            0            0
(  983)  E1C3V2 : Minimum CAPM23F enclosure of VI            0            0
(  984)  E1C3V2 : Minimum CAPM23F enclosure of VI            0            0
(  985)  E6M2V2 : Minimum MET2 enclosure of VIA2             0            0
(  986)  S5V2 : Minimum VIA2 spacing on CAPM23F =            0            0
(  987)  Q3V2 : Recommended minimum ratio of VIA2            0            0
(  988)  E1M2C3 : Minimum MET2 enclosure of CAPM2            0            0
(  989)  E5M2V1 : Minimum MET2 enclosure of VIA1             0            0
(  990)  B3C4 : CAPM34F is not allowed when CAPM,            0            0
(  991)  B2C4 : CAPM34F overlap of VIA2 or PAD is            0            0
(  992)  B1C4 : CAPM34F without MET3 is not allow            0            0
(  993)  W1C4 : Minimum CAPM34F width = 2.0                  0            0
(  994)  W2C4 : Maximum CAPM34F bounding box size            0            0
(  995)  S1C4 : Minimum CAPM34F spacing/notch = 1            0            0
(  996)  S1C4PA : Minimum CAPM34F spacing to PAD             0            0
(  997)  S1C4V2 : Minimum CAPM34F spacing to VIA2            0            0
(  998)  S1C4V3 : Minimum CAPM34F spacing to VIA3            0            0
(  999)  E1C4V3 : Minimum CAPM34F enclosure of VI            0            0
( 1000)  E1C4V3 : Minimum CAPM34F enclosure of VI            0            0
( 1001)  E6M3V3 : Minimum MET3 enclosure of VIA3             0            0
( 1002)  S5V3 : Minimum VIA3 spacing on CAPM34F =            0            0
( 1003)  Q3V3 : Recommended minimum ratio of VIA3            0            0
( 1004)  E1M3C4 : Minimum MET3 enclosure of CAPM3            0            0
( 1005)  E6M3V2 : Minimum MET3 enclosure of VIA2             0            0
( 1006)  B3C5 : CAPM45F is not allowed when CAPM,            0            0
( 1007)  B4C5 : CAPM45F without module MET5 is no            0            0
( 1008)  B3H3 : CAPMH23F is not allowed when CAPM            0            0
( 1009)  B2H3 : CAPMH23F overlap of VIA1 or PAD i            0            0
( 1010)  B1H3 : CAPMH23F without MET2 is not allo            0            0
( 1011)  W1H3 : Minimum CAPMH23F width = 2.0                 0            0
( 1012)  W2H3 : Maximum CAPMH23F bounding box siz            0            0
( 1013)  S1H3 : Minimum CAPMH23F spacing/notch =             0            0
( 1014)  S1H3PA : Minimum CAPMH23F spacing to PAD            0            0
( 1015)  S1H3V1 : Minimum CAPMH23F spacing to VIA            0            0
( 1016)  S1H3V2 : Minimum CAPMH23F spacing to VIA            0            0
( 1017)  E1H3V2 : Minimum CAPMH23F enclosure of V            0            0
( 1018)  E1H3V2 : Minimum CAPMH23F enclosure of V            0            0
( 1019)  E7M2V2 : Minimum MET2 enclosure of VIA2             0            0
( 1020)  S6V2 : Minimum VIA2 spacing on CAPMH23F             0            0
( 1021)  Q4V2 : Recommended minimum ratio of VIA2            0            0
( 1022)  E1M2H3 : Minimum MET2 enclosure of CAPMH            0            0
( 1023)  E6M2V1 : Minimum MET2 enclosure of VIA1             0            0
( 1024)  B3H4 : CAPMH34F is not allowed when CAPM            0            0
( 1025)  B2H4 : CAPMH34F overlap of VIA2 or PAD i            0            0
( 1026)  B1H4 : CAPMH34F without MET3 is not allo            0            0
( 1027)  W1H4 : Minimum CAPMH34F width = 2.0                 0            0
( 1028)  W2H4 : Maximum CAPMH34F bounding box siz            0            0
( 1029)  S1H4 : Minimum CAPMH34F spacing/notch =             0            0
( 1030)  S1H4PA : Minimum CAPMH34F spacing to PAD            0            0
( 1031)  S1H4V2 : Minimum CAPMH34F spacing to VIA            0            0
( 1032)  S1H4V3 : Minimum CAPMH34F spacing to VIA            0            0
( 1033)  E1H4V3 : Minimum CAPMH34F enclosure of V            0            0
( 1034)  E1H4V3 : Minimum CAPMH34F enclosure of V            0            0
( 1035)  E7M3V3 : Minimum MET3 enclosure of VIA3             0            0
( 1036)  S6V3 : Minimum VIA3 spacing on CAPMH34F             0            0
( 1037)  Q4V3 : Recommended minimum ratio of VIA3            0            0
( 1038)  E1M3H4 : Minimum MET3 enclosure of CAPMH            0            0
( 1039)  E7M3V2 : Minimum MET3 enclosure of VIA2             0            0
( 1040)  B3H5 : CAPMH45F is not allowed when CAPM            0            0
( 1041)  B4H5 : CAPMH45F without module MET5 is n            0            0
( 1042)  B1D3 : CAPM2A is not allowed when CAPM,             0            0
( 1043)  B2D3 : CAPM2A must be enclosed by MET3 a            0            0
( 1044)  B3D3 : CAPM2A must not be over VIA2 or P            0            0
( 1045)  B4D3 : CAPM2A without VIA3 is not allowe            0            0
( 1046)  Q7V3 : Recommended minimum ratio of VIA3            0            0
( 1047)  W1D3 : Minimum CAPM2A width = 2.0                   0            0
( 1048)  W2D3 : Maximum CAPM2A bounding box size             0            0
( 1049)  S1D3 : Minimum CAPM2A spacing/notch = 1.            0            0
( 1050)  S1D3PA : Minimum CAPM2A spacing to PAD =            0            0
( 1051)  S1D3V2 : Minimum CAPM2A spacing to VIA2             0            0
( 1052)  S1D3V3 : Minimum CAPM2A spacing to VIA3             0            0
( 1053)  E1D3V3 : Minimum CAPM2A enclosure of VIA            0            0
( 1054)  E1D3V3 : Minimum CAPM2A enclosure of VIA            0            0
( 1055)  E1M3D3 : Minimum MET3 enclosure of CAPM2            0            0
( 1056)  E1M4D3 : Minimum MET4 enclosure of CAPM2            0            0
( 1057)  E3M3V2 : Minimum MET3 enclosure of VIA2             0            0
( 1058)  E8M3V3 : Minimum MET3 enclosure of VIA3             0            0
( 1059)  E4M4V3 : Minimum MET4 enclosure of VIA3             0            0
( 1060)  S9V3 : Minimum VIA3 spacing on CAPM2A =             0            0
( 1061)  B5D3 : CAPM2A without VIATP is not allow            0            0
( 1062)  B6D3 : MET3 and METTP must be connected             0            0
( 1063)  Q7VT : Recommended minimum ratio of VIAT            0            0
( 1064)  S1D3VT : Minimum CAPM2A spacing to VIATP            0            0
( 1065)  E1D3VT : Minimum CAPM2A enclosure of VIA            0            0
( 1066)  E1D3VT : Minimum CAPM2A enclosure of VIA            0            0
( 1067)  E5M4VT : Minimum MET4 enclosure of VIATP            0            0
( 1068)  S2VT : Minimum VIATP spacing on CAPM2A =            0            0
( 1069)  B1K3 : CAPMH2A is not allowed when CAPM,            0            0
( 1070)  B2K3 : CAPMH2A must be enclosed by MET3             0            0
( 1071)  B3K3 : CAPMH2A must not be over VIA2 or             0            0
( 1072)  B4K3 : CAPMH2A without VIA3 is not allow            0            0
( 1073)  Q8V3 : Recommended minimum ratio of VIA3            0            0
( 1074)  W1K3 : Minimum CAPMH2A width = 2.0                  0            0
( 1075)  W2K3 : Maximum CAPMH2A bounding box size            0            0
( 1076)  S1K3 : Minimum CAPMH2A spacing/notch = 1            0            0
( 1077)  S1K3PA : Minimum CAPMH2A spacing to PAD             0            0
( 1078)  S1K3V2 : Minimum CAPMH2A spacing to VIA2            0            0
( 1079)  S1K3V3 : Minimum CAPMH2A spacing to VIA3            0            0
( 1080)  E1K3V3 : Minimum CAPMH2A enclosure of VI            0            0
( 1081)  E1K3V3 : Minimum CAPMH2A enclosure of VI            0            0
( 1082)  E1M3K3 : Minimum MET3 enclosure of CAPMH            0            0
( 1083)  E1M4K3 : Minimum MET4 enclosure of CAPMH            0            0
( 1084)  E8M3V2 : Minimum MET3 enclosure of VIA2             0            0
( 1085)  E9M3V3 : Minimum MET3 enclosure of VIA3             0            0
( 1086)  E5M4V3 : Minimum MET4 enclosure of VIA3             0            0
( 1087)  S10V3 : Minimum VIA3 spacing on CAPMH2A             0            0
( 1088)  B5K3 : CAPMH2A without VIATP is not allo            0            0
( 1089)  B6K3 : MET3 and METTP must be connected             0            0
( 1090)  Q8VT : Recommended minimum ratio of VIAT            0            0
( 1091)  S1K3VT : Minimum CAPMH2A spacing to VIAT            0            0
( 1092)  E1K3VT : Minimum CAPMH2A enclosure of VI            0            0
( 1093)  E1K3VT : Minimum CAPMH2A enclosure of VI            0            0
( 1094)  E6M4VT : Minimum MET4 enclosure of VIATP            0            0
( 1095)  S9VT : Minimum VIATP spacing on CAPMH2A             0            0
( 1096)  B1NB : NBUR without HVNWELL is not allow            0            0
( 1097)  W1NB : Minimum NBUR width = 1.0                     0            0
( 1098)  S1NB : Minimum NBUR spacing/notch = 2.0             0            0
( 1099)  B1HN : HVNWELL must be surrounded by DTI            0            0
( 1100)  B2HN : HVNWELL without NWELL is not allo            0            0
( 1101)  W1HN : Minimum HVNWELL width = 1.5                  0            0
( 1102)  W2HN : Minimum HVNWELL_E width = 0.5                0            0
( 1103)  W1TN : Minimum HWNTUB width = 2.0                   0            0
( 1104)  S1HN : Minimum HVNWELL spacing/notch = 2            0            0
( 1105)  B1HP : HVPWELL overlap NWELL, PWBLK is n            0            0
( 1106)  B2HP : HVPWELL overlap HVNWELL, SUBBLK,             0            0
( 1107)  B3HP : HVPWELL overlap of ne,ne5,dn,dn5,            0            0
( 1108)  W1HP : Minimum HVPWELL width = 1.5                  0            0
( 1109)  W2HP : Minimum HVPWELL_E width = 0.5                0            0
( 1110)  S1HP : Minimum HVPWELL spacing/notch = 2            0            0
( 1111)  S1HPHN : Minimum HVPWELL spacing to HVNW            0            0
( 1112)  S1HPNW : Minimum HVPWELL spacing to NWEL            0            0
( 1113)  W1HB : Minimum SUBBLK width = 2.0                   0            0
( 1114)  S1HB : Minimum SUBBLK spacing/notch = 1.            0            0
( 1115)  W1BS : Minimum SUB width = 1.5                      0            0
( 1116)  W2SB : Minimum SUB_E width = 0.5                    0            0
( 1117)  W2BS : Minimum SUB_E width = 0.5                    0            0
( 1118)  S1BS : Minimum SUB spacing/notch = 2.0              0            0
( 1119)  B13HB : NWELL in SUBBLK must have same n            0            0
( 1120)  B1NT : SJNP without PWBLK, SUBBLK and MV            0            0
( 1121)  B8NT : SJNP without DIFF is not allowed             0            0
( 1122)  B2NT : SJNP overlap of HWTUB, NWELL, HVN            0            0
( 1123)  B3NT : SJNP overlap of POLY1 or NIMP is             0            0
( 1124)  B4NT : SJNP overlap of SJPN is not allow            0            0
( 1125)  W1NT : Minimum SJNP width = 2.0                     0            0
( 1126)  W2NT : Minimum SJNP_E width = 0.5                   0            0
( 1127)  S1NT : Minimum SJNP spacing/notch = 1.5             0            0
( 1128)  S1NTPT : Minimum SJNP spacing to SJPN =             0            0
( 1129)  B1PT : SJPN without PWBLK, SUBBLK and MV            0            0
( 1130)  B6PT : SJPN without DIFF is not allowed             0            0
( 1131)  B2PT : SJPN overlap of HWTUB, NWELL, HVN            0            0
( 1132)  B3PT : SJPN overlap of POLY1 or PIMP is             0            0
( 1133)  W1PT : Minimum SJPN width = 2.0                     0            0
( 1134)  W2PT : Minimum SJPN_E width = 0.5                   0            0
( 1135)  S1PT : Minimum SJPN spacing/notch = 1.5             0            0
( 1136)  B1LV : LVT overlap of MV,DNC,DPC,PWBLK,S            0            0
( 1137)  B2LV : LVT overlap of rnw,rdn,rdp,qpve,q            0            0
( 1138)  E1LVGA : Minimum LVT enclosure of GATE =            0            0
( 1139)  E2LVGA : Minimum LVT enclosure of GATE =            0            0
( 1140)  S1LVGA : Minimum LVT spacing to GATE = 0            0            0
( 1141)  S2LVGA : Minimum LVT spacing to GATE = 0            0            0
( 1142)  S1LVHN : Minimum LVT spacing to HVNWELL             0            0
( 1143)  S1LVHP : Minimum LVT spacing to HVPWELL             0            0
( 1144)  B1DL : DEPL is only allowed in PWELL2, P            0            0
( 1145)  B2DL : DEPL overlap of DPC,NBASE,PBASE,P            0            0
( 1146)  W1DL : Minimum DEPL width = 0.6                     0            0
( 1147)  S1DL : Minimum DEPL spacing/notch = 0.42            0            0
( 1148)  S1DLGA : Minimum DEPL spacing to GATE =             0            0
( 1149)  E1DLGA : Minimum DEPL enclosure of GATE             0            0
( 1150)  E1DLGA : Minimum DEPL enclosure of GATE             0            0
( 1151)  B1PX : PDF is only allowed for phvta,phv            0            0
( 1152)  B2PX : PDF overlap of DNC,NZENER or PWEL            0            0
( 1153)  B3PX : PDF without PWBLK or NWELL is not            0            0
( 1154)  B4PX : PDF without MV and SUBBLK is not             0            0
( 1155)  W1PX : Minimum PDF width = 2.0                      0            0
( 1156)  W2PX : Minimum PDF_E width = 0.5                    0            0
( 1157)  S1PX : Minimum PDF spacing/notch = 1.5              0            0
( 1158)  B1NX : NDF is only allowed for nhvta,nhv            0            0
( 1159)  B2NX : NDF overlap of PDF or PZENER is n            0            0
( 1160)  B4NX : NDF without PWBLK, MV and SUBBLK             0            0
( 1161)  W1NX : Minimum NDF width = 2.0                      0            0
( 1162)  W2NX : Minimum NDF_E width = 0.5                    0            0
( 1163)  S1NX : Minimum NDF spacing/notch = 1.0              0            0
( 1164)  B1P4 : PWELL4 is only allowed for nhvta,            0            0
( 1165)  B2P4 : PWELL4 overlap of NWELL,DPC,HVPWE            0            0
( 1166)  B4P4 : PWELL4 without MV and SUBBLK is n            0            0
( 1167)  W1P4 : Minimum PWELL4 width = 1.0                   0            0
( 1168)  W2P4 : Minimum PWELL4_E width = 0.5                 0            0
( 1169)  S1P4 : Minimum PWELL4 spacing/notch = 1.            0            0
( 1170)  S1P4DN : Minimum PWELL4 spacing to NDIFF            0            0
( 1171)  E1P4DN : Minimum PWELL4 enclosure of NDI            0            0
( 1172)  E1P4DP : Minimum PWELL4 enclosure of PDI            0            0
( 1173)  B1QP : PBASE is only allowed for qnv5               0            0
( 1174)  B2QP : PBASE overlap of DPC,PWBLK,NWELL,            0            0
( 1175)  B3QP : PBASE without MV and SUBBLK is no            0            0
( 1176)  W1QP : Minimum PBASE width = 1.0                    0            0
( 1177)  W2QP : Minimum PBASE_E width = 0.5                  0            0
( 1178)  S1QP : Minimum PBASE spacing/notch = 1.0            0            0
( 1179)  B1QN : NBASE is only allowed for qpv5               0            0
( 1180)  B2QN : NBASE overlap of DPC,PWBLK,NWELL,            0            0
( 1181)  B3QN : NBASE without MV and SUBBLK is no            0            0
( 1182)  W1QN : Minimum NBASE width = 1.0                    0            0
( 1183)  W2QN : Minimum NBASE_E width = 0.5                  0            0
( 1184)  S1QN : Minimum NBASE spacing/notch = 1.0            0            0
( 1185)  B1PZ : PZENER overlap of DPC,NWELL,PWBLK            0            0
( 1186)  B2PZ : PZENER is only allowed for dza,dz            0            0
( 1187)  B3PZ : PZENER without MV and SUBBLK is n            0            0
( 1188)  W1PZ : Minimum PZENER width = 0.6                   0            0
( 1189)  W2PZ : Minimum PZENER_E width = 0.5                 0            0
( 1190)  S1PZ : Minimum PZENER spacing/notch = 0.            0            0
( 1191)  B1NZ : NZENER without NWELL and PDIFF is            0            0
( 1192)  B2NZ : NZENER is only allowed for dzbti             0            0
( 1193)  B3NZ : NZENER overlap of DNC, PZENER, NB            0            0
( 1194)  B4NZ : NZENER without MV and SUBBLK is n            0            0
( 1195)  W1NZ : Minimum NZENER width = 0.6                   0            0
( 1196)  W2NZ : Minimum NZENER_E width = 0.5                 0            0
( 1197)  S1NZ : Minimum NZENER spacing/notch = 0.            0            0
( 1198)  B1NF : NBUF without PWBLK, DIFF, SUBBLK             0            0
( 1199)  B2NF : NBUF overlap of HWTUB,POLY1,NIMP,            0            0
( 1200)  B3NF : NBUF is only allowed for nisj1_16            0            0
( 1201)  W1NF : Minimum NBUF width = 2.0                     0            0
( 1202)  W2NF : Minimum NBUF_E width = 0.5                   0            0
( 1203)  S1NF : Minimum NBUF spacing/notch = 1.5             0            0
( 1204)  BDSC : Not allowed to be used by custome            0            0
( 1205)  BDPS : Not allowed to be used by custome            0            0
( 1206)  O1SANT : Fixed SALICIDE overlap of SJNP             0            0
( 1207)  O2SANT : Fixed SALICIDE overlap of SJNP             0            0
( 1208)  O3SANT : Fixed SALICIDE overlap of SJNP             0            0
( 1209)  O4SANT : Fixed SALICIDE overlap of SJNP             0            0
( 1210)  O1F1NT : Fixed M1_FPLATE overlap of SJNP            0            0
( 1211)  O1F2NT : Fixed M2_FPLATE overlap SJNP =             0            0
( 1212)  O2F2NT : Fixed M2_FPLATE overlap SJNP =             0            0
( 1213)  O3F2NT : Fixed M2_FPLATE overlap SJNP =             0            0
( 1214)  O4F2NT : Fixed M2_FPLATE overlap SJNP =             0            0
( 1215)  O4F2NT : Fixed M2_FPLATE overlap SJNP =             0            0
( 1216)  O8F2NT : Fixed M2_FPLATE overlap SJNP =             0            0
( 1217)  O8F2NT : Fixed M2_FPLATE overlap SJNP =             0            0
( 1218)  O2F3NT : Fixed M3_FPLATE overlap of SJNP            0            0
( 1219)  O3F3NT : Fixed M3_FPLATE overlap of SJNP            0            0
( 1220)  O4F3NT : Fixed M3_FPLATE overlap of SJNP            0            0
( 1221)  O1F3NT : Fixed M3_FPLATE overlap of SJNP            0            0
( 1222)  S2P1DF : Minimum POLY1 spacing to DRAIN             0            0
( 1223)  E3P1GA : Minimum POLY1 extension beyond             0            0
( 1224)  O1NTGA : Fixed SJNP overlap of GATE = 1.            0            0
( 1225)  W1GA : Minimum GATE width = 10.0                    0            0
( 1226)  W26GA : Minimum GATE width = 20.0                   0            0
( 1227)  W11GA : Minimum CHANNEL length = 0.5                0            0
( 1228)  E3INDF : Minimum NIMP extension beyond S            0            0
( 1229)  E3IPDF : Minimum PIMP extension beyond P            0            0
( 1230)  S4IPDN : Minimum PIMP spacing to NDIFF =            0            0
( 1231)  B6NT : Fixed orientation is 0 degree or             0            0
( 1232)  B6NT : Fixed orientation is 0 degree or             0            0
( 1233)  E1HBNT : Fixed SUBBLK enclosure of SJNP             0            0
( 1234)  S4DF : Fixed DRAIN-EDGE-STI length = 1.0            0            0
( 1235)  S4DF : Fixed DRAIN-EDGE-STI length = 1.0            0            0
( 1236)  S2GADT : Fixed GATE spacing to DTI = 0.5            0            0
( 1237)  S1P1PC : Fixed POLY1 spacing to DPC = 0.            0            0
( 1238)  B3MV : nhsj1_# without MV is not allowed            0            0
( 1239)  S1HPNT : Fixed HVPWELL spacing to SJNP =            0            0
( 1240)  E1NTBT : Fixed extension of SJNP beyond             0            0
( 1241)  E2NTBT : Fixed extension of SJNP beyond             0            0
( 1242)  O1SAPT : Fixed SALICIDE overlap of SJPN             0            0
( 1243)  O2SAPT : Fixed SALICIDE overlap of SJPN             0            0
( 1244)  O3SAPT : Fixed SALICIDE overlap of SJPN             0            0
( 1245)  O4SAPT : Fixed SALICIDE overlap of SJPN             0            0
( 1246)  O1F1PT : Fixed M1_FPLATE overlap of SJPN            0            0
( 1247)  O1F2PT : Fixed M2_FPLATE overlap SJPN =             0            0
( 1248)  O2F2PT : Fixed M2_FPLATE overlap SJPN =             0            0
( 1249)  O3F2PT : Fixed M2_FPLATE overlap SJPN =             0            0
( 1250)  O4F2PT : Fixed M2_FPLATE overlap SJPN =             0            0
( 1251)  O4F2PT : Fixed M2_FPLATE overlap SJPN =             0            0
( 1252)  O2F3PT : Fixed M3_FPLATE overlap of SJPN            0            0
( 1253)  O3F3PT : Fixed M3_FPLATE overlap of SJPN            0            0
( 1254)  O1F3PT : Fixed M3_FPLATE overlap of SJPN            0            0
( 1255)  S3P1DF : Minimum POLY1 spacing to DRAIN             0            0
( 1256)  E4P1GA :Minimum POLY1 extension beyond G            0            0
( 1257)  O1PTGA : Fixed SJPN overlap of GATE = 1.            0            0
( 1258)  W2GA : Minimum GATE width = 10.0                    0            0
( 1259)  W26GA : Minimum GATE width = 20.0                   0            0
( 1260)  W12GA : Minimum CHANNEL length = 0.5                0            0
( 1261)  E4IPDF : Minimum PIMP extension beyond S            0            0
( 1262)  E4INDF : Minimum NIMP extension beyond N            0            0
( 1263)  S4INDP : Minimum NIMP spacing to PDIFF =            0            0
( 1264)  B8PT : Fixed orientation is 0 degree or             0            0
( 1265)  B8PT : Fixed orientation is 0 degree or             0            0
( 1266)  E1HBPT : Fixed SUBBLK enclosure of SJPN             0            0
( 1267)  S5DF : Fixed DRAIN-EDGE-STI length = 1.0            0            0
( 1268)  S5DF : Fixed DRAIN-EDGE-STI length = 1.0            0            0
( 1269)  S3GADT : Fixed GATE spacing to DTI = 0.5            0            0
( 1270)  S1HNPT : Fixed HVNWELL spacing to SJPN =            0            0
( 1271)  S1P1NC : Fixed POLY1 spacing to DNC = 0.            0            0
( 1272)  B9MV : phsj1_# without MV is not allowed            0            0
( 1273)  E1PTBT : Fixed extension of SJPN beyond             0            0
( 1274)  E2PTBT : Fixed extension of SJPN beyond             0            0
( 1275)  E1HPBT : Fixed extension of HVPWELL beyo            0            0
( 1276)  E2HPBT : Fixed extension of HVPWELL beyo            0            0
( 1277)  E1HNBT : Fixed extension of HVNWELL beyo            0            0
( 1278)  E2HNBT : Fixed extension of HVNWELL beyo            0            0
( 1279)  B6NT : Fixed orientation is 0 degree or             0            0
( 1280)  B6NT : Fixed orientation is 0 degree or             0            0
( 1281)  B4MV : dfwnsj1_# without MV is not allow            0            0
( 1282)  B2NB : dhw# terminal (Cathode/Anode) sho            0            0
( 1283)  B4HN : dhw# must be surrounded by HWPTUB            0            0
( 1284)  B5HN : dhw2a must be surrounded by 2FOXD            0            0
( 1285)  B12HN : dhw2 must be surrounded by 2FOXD            0            0
( 1286)  B9HN : dhw3 must be surrounded by 3FOXDT            0            0
( 1287)  B2DT : FOXDTI without PWBLK and SUBBLK i            0            0
( 1288)  B3DT : NWELL, DNC, DPC, NIMP, PIMP, HRES            0            0
( 1289)  O1NBDT : Fixed NBUR overlap of DIFFDTI =            0            0
( 1290)  O1NBDT : Fixed NBUR overlap of DIFFDTI =            0            0
( 1291)  S2NB : Minimum NBUR spacing (different n            0            0
( 1292)  S3NB : Minimum NBUR spacing (different n            0            0
( 1293)  S4NB : Minimum NBUR spacing (different n            0            0
( 1294)  S6NB : Minimum NBUR spacing to NBUR (dhw            0            0
( 1295)  S7NB : Minimum NBUR spacing to NBUR (dhw            0            0
( 1296)  S3DTHW : Minimum DTI spacing to HWC = 5.            0            0
( 1297)  S1NBHW : Minimum NBUR spacing to HWC = 1            0            0
( 1298)  S2NBHW : Minimum NBUR spacing to HWC = 2            0            0
( 1299)  S3NBHW : Minimum NBUR spacing to HWC = 2            0            0
( 1300)  W3TN : Minimum HWNTUB width = 5.0                   0            0
( 1301)  W1TP : Minimum HWPTUB width = 7.0                   0            0
( 1302)  W2TP : Minimum HWPTUB width = 9.0                   0            0
( 1303)  B7NT : Cathode NBUR must connect to HWNT            0            0
( 1304)  M_HP : Predefined area must have HVPWELL            0            0
( 1305)  M_DF : Predefined area must have DIFF               0            0
( 1306)  M_HB : Predefined area must have SUBBLK             0            0
( 1307)  M_NB : Predefined area must have NBUR               0            0
( 1308)  B5NT : DRAIN NBUR must connect to HWNTUB            0            0
( 1309)  M_HP : Predefined area must have HVPWELL            0            0
( 1310)  M_PC : Predefined area must have DPC                0            0
( 1311)  M_DN : Predefined area must have NDIFF              0            0
( 1312)  M_DP : Predefined area must have PDIFF              0            0
( 1313)  M_HB : Predefined area must have SUBBLK             0            0
( 1314)  M_NB : Predefined area must have NBUR               0            0
( 1315)  B5PT : SOURCE NBUR must connect to HWNTU            0            0
( 1316)  M_NW : Predefined area must have NWELL              0            0
( 1317)  M_NB : Predefined area must have NBUR               0            0
( 1318)  M_NC : Predefined area must have DNC                0            0
( 1319)  M_DP : Predefined area must have PDIFF              0            0
( 1320)  M_DN : Predefined area must have NDIFF              0            0
( 1321)  M_HB : Predefined area must have SUBBLK             0            0
( 1322)  M_HP : Predefined area must have HVPWELL            0            0
( 1323)  B9NT : Collector NBUR must connect to HW            0            0
( 1324)  B4NF : Fixed orientation is 0 degree or             0            0
( 1325)  B4NF : Fixed orientation is 0 degree or             0            0
( 1326)  B7MV : nisj1_16 without MV is not allowe            0            0
( 1327)  W25GA : Fixed CHANNEL length = 1.0                  0            0
( 1328)  W27GA : Minimum GATE width = 20.0                   0            0
( 1329)  S6DF : Fixed Collector-EDGE-STI length =            0            0
( 1330)  S6DF : Fixed Collector-EDGE-STI length =            0            0
( 1331)  S1HPNT : Fixed HVPWELL spacing to SJNP =            0            0
( 1332)  E1HBNT : Fixed SUBBLK enclosure of SJNP             0            0
( 1333)  S1P1PC : Fixed POLY1 spacing to DPC = 0.            0            0
( 1334)  S2GADT : Fixed GATE spacing to DTI = 0.5            0            0
( 1335)  S4P1DF : Minimum POLY1 spacing to Collec            0            0
( 1336)  E3P1GA : Minimum POLY1 extension beyond             0            0
( 1337)  E3HPBT : Fixed extension of HVPWELL beyo            0            0
( 1338)  E3NTBT : Fixed extension of SJNP beyond             0            0
( 1339)  E1NFBT : Fixed extension of NBUF beyond             0            0
( 1340)  O1NTGA : Fixed SJNP overlap of GATE = 1.            0            0
( 1341)  W3IN : Fixed Emitter NDIFF sequment size            0            0
( 1342)  W4IP : Fixed Emitter PDIFF sequment size            0            0
( 1343)  M_DN : Predefined area must have NDIFF              0            0
( 1344)  M_DP : Predefined area must have PDIFF              0            0
( 1345)  M_IP : Predefined area must have PIMP               0            0
( 1346)  N_IP : Predefined area must not have PIM            0            0
( 1347)  M_NF : Predefined area must have NBUF               0            0
( 1348)  B5NF : NBUF without MET1, MET2, M3_FPLAT            0            0
( 1349)  O1SANF : Fixed SALICIDE overlap of NBUF             0            0
( 1350)  M_NB : Predefined area must have NBUR               0            0
( 1351)  N_NB : Predefined area must not have NBU            0            0
( 1352)  M_HP : Predefined area must have HVPWELL            0            0
( 1353)  M_PC : Predefined area must have DPC                0            0
( 1354)  M_DT : Predefined area must have DTI                0            0
( 1355)  M_DT : Predefined area must have DTI                0            0
( 1356)  E5INDF : Minimum NIMP enclosure of ACTIV            0            0
( 1357)  E5IPDF : Minimum PIMP enclosure of ACTIV            0            0
( 1358)  B5MV : nmva without MV is not allowed               0            0
( 1359)  W3GA : Fixed CHANNEL length = 0.5                   0            0
( 1360)  W4GA : Minimum CHANNEL width = 1.0                  0            0
( 1361)  O1NWGA : Fixed NWELL overlap of GATE = 0            0            0
( 1362)  S3DF : Fixed DRAIN-EDGE-STI length = 0.4            0            0
( 1363)  S1P1DN : Minimum POLY1 spacing to DRAIN             0            0
( 1364)  E2P1GA : Minimum POLY1 extension beyond             0            0
( 1365)  E10P1GA : Minimum POLY1 extension beyond            0            0
( 1366)  E3NWDN : Minimum NWELL enclosure of DRAI            0            0
( 1367)  S4GADT : Fixed GATE spacing to DTI = 0.5            0            0
( 1368)  M_DT : Predefined area must have DTI                0            0
( 1369)  B8MV : pmva without MV is not allowed               0            0
( 1370)  W9GA : Fixed CHANNEL length = 0.5                   0            0
( 1371)  W10GA : Minimum CHANNEL width = 1.0                 0            0
( 1372)  S8DF : Fixed DRAIN-EDGE-STI length = 0.4            0            0
( 1373)  S3P1DP : Minimum POLY1 spacing to DRAIN             0            0
( 1374)  E9P1GA : Minimum POLY1 extension beyond             0            0
( 1375)  E11P1GA : Minimum POLY1 extension beyond            0            0
( 1376)  E3NWDP : Minimum NWELL enclosure of SOUR            0            0
( 1377)  O2PWGA : Fixed PWELL overlap of GATE = 0            0            0
( 1378)  S4GADT : Fixed GATE spacing to DTI = 0.5            0            0
( 1379)  M_DT : Predefined area must have DTI                0            0
( 1380)  E1HBNW : Fixed SUBBLK enclosure of NWELL            0            0
( 1381)  W4P1 : Minimum GATE length = 0.18                   0            0
( 1382)  W3DF : Minimum GATE width = 0.22                    0            0
( 1383)  W6P1 : Minimum GATE length = 0.22                   0            0
( 1384)  W8P1 : Minimum GATE length = 0.5                    0            0
( 1385)  W8P1 : Minimum GATE length = 0.5                    0            0
( 1386)  B5GA : Only rectangular GATE is allowed             0            0
( 1387)  W22GA : Minimum GATE length = 2.0                   0            0
( 1388)  W23GA : Minimum GATE width = 2.0                    0            0
( 1389)  W3P1 : Minimum GATE length = 1.0                    0            0
( 1390)  W6DF : Minimum GATE width = 1.0                     0            0
( 1391)  B3GA : Only rectangular GATE inside PWBL            0            0
( 1392)  W18GA : Minimum GATE length = 0.7                   0            0
( 1393)  W19GA : Minimum GATE width = 0.44                   0            0
( 1394)  B2M1 : CONT or VIA1 are not allowed with            0            0
( 1395)  B2M2 : VIA1 is not allowed within rm2               0            0
( 1396)  B2MT : VIATP is not allowed within rmtp             0            0
( 1397)  B4M2 : VIA2 is not allowed within rm2               0            0
( 1398)  B2M3 : VIA2 is not allowed within rm3               0            0
( 1399)  B4M3 : VIA3 is not allowed within rm3               0            0
( 1400)  B2M4 : VIA3 is not allowed within rm4               0            0
( 1401)  B3M4 : VIATP is not allowed within rm4              0            0
( 1402)  B3MT : VIATPL is not allowed within rmtp            0            0
( 1403)  B2ML : VIATPL is not allowed within rmtp            0            0
( 1404)  W4DF : Minimum width = 0.42                         0            0
( 1405)  B2CT : CONT is not allowed within rpp1s#            0            0
( 1406)  W15P1 : Minimum rnp1#, rpp1# width = 0.4            0            0
( 1407)  E1INP1 : Minimum NIMP extension beyond r            0            0
( 1408)  E1IPP1 : Minimum PIMP extension beyond r            0            0
( 1409)  S1INP1 : Minimum NIMP spacing to rpp1# o            0            0
( 1410)  S1IPP1 : Minimum PIMP spacing to rnp1# =            0            0
( 1411)  B4P1 : rnp1_3 crossing NWELL edge is not            0            0
( 1412)  B6P1 : rnp1_3 overlap of rnw/rnw5 is not            0            0
( 1413)  B7P1 : rpp1_3 crossing NWELL edge is not            0            0
( 1414)  B9P1 : rpp1_3 overlap of rnw/rnw5 is not            0            0
( 1415)  B5P1 : rpp1s_3 crossing NWELL edge is no            0            0
( 1416)  B8P1 : rpp1s_3 overlap of rnw/rnw5 is no            0            0
( 1417)  B1MR : MRES overlap of DIFF is not allow            0            0
( 1418)  B2MR : MRES without SBLK is not allowed             0            0
( 1419)  B3MR : MRES overlap of NIMP or PIMP is n            0            0
( 1420)  W1MR : Minimum MRES width = 0.44                    0            0
( 1421)  S1MR : Minimum MRES spacing/notch = 0.44            0            0
( 1422)  S1MRDF : Minimum MRES spacing to DIFF =             0            0
( 1423)  S1MRP1 : Minimum MRES spacing to POLY1 =            0            0
( 1424)  B4MR : HRES overlap of MRES is not allow            0            0
( 1425)  B6MR : rpp1k1_3 crossing NWELL edge is n            0            0
( 1426)  B7MR : rpp1k1_3 overlap of rnw/rnw5 is n            0            0
( 1427)  B8MR : rpp1k1a_3 crossing NWELL edge is             0            0
( 1428)  B9MR : rpp1k1a_3 overlap of rnw/rnw5 is             0            0
( 1429)  S6P1DF : Minimum POLY1 sapcing to DIFF =            0            0
( 1430)  W16P1 : Minimum rpp1k1# width = 0.42                0            0
( 1431)  E1MRP1 : Minimum MRES extension beyond r            0            0
( 1432)  E1SBMR : Fixed SBLK extension beyond MRE            0            0
( 1433)  E2IPP1 : Minimum PIMP extension beyond r            0            0
( 1434)  E2IPP1 : Minimum PIMP extension beyond r            0            0
( 1435)  E3IPP1 : Minimum PIMP extension beyond r            0            0
( 1436)  E3IPP1 : Minimum PIMP extension beyond r            0            0
( 1437)  S3INP1 : Minimum NIMP spacing to rpp1k1             0            0
( 1438)  S4INP1 : Minimum NIMP spacing to rpp1k1a            0            0
( 1439)  B1HR : HRES overlap of DIFF is not allow            0            0
( 1440)  B2HR : NIMP overlap of rnp1h# (resistor             0            0
( 1441)  B3HR : PIMP overlap of HRES is not allow            0            0
( 1442)  B4HR : POLY1 crossing HRES edge is not a            0            0
( 1443)  B6HR : NIMP crossing HRES edge is not al            0            0
( 1444)  B7HR : MET1 overlap of rnp1h# (resistor             0            0
( 1445)  B10HR : rnp1h_3 crossing NWELL edge is n            0            0
( 1446)  B11HR : rnp1h_3 overlap of rnw/rnw5 is n            0            0
( 1447)  W1HR : Minimum HRES width = 0.44                    0            0
( 1448)  W2HR : Minimum rnp1h# width = 0.42                  0            0
( 1449)  W3HR : Minimum rnp1h# length = 5.0                  0            0
( 1450)  S1HR : Minimum HRES spacing/notch = 0.44            0            0
( 1451)  S1HRDF : Minimum HRES spacing to DIFF =             0            0
( 1452)  S1HRP1 : Minimum HRES spacing to POLY1 =            0            0
( 1453)  S1HRIN : Minimum HRES spacing to NIMP =             0            0
( 1454)  S1HRIP : Minimum HRES spacing to PIMP =             0            0
( 1455)  E1HRP1 : Minimum HRES enclosure of POLY1            0            0
( 1456)  E2INP1 : Minimum NIMP extension beyond P            0            0
( 1457)  S2INP1 : Minimum NIMP (in SBLK) spacing             0            0
( 1458)  B5HR : rnp1h# terminal without NIMP is n            0            0
( 1459)  N_CT : Predefined area must not have CON            0            0
( 1460)  B2P1 : pfuse overlap of MET1, MET2, MET3            0            0
( 1461)  B12P1 : pfuse overlap of SBLK or DIFF is            0            0
( 1462)  B13P1 : pfuse without NIMP and BLKALL is            0            0
( 1463)  B14P1 : pfuse overlap of DTI is not allo            0            0
( 1464)  S1P1DT : Minimum pfuse spacing to DTI =             0            0
( 1465)  E1NWP1 : Fixed NWELL enclosure of pfuse             0            0
( 1466)  E1BAP1 : Minimum BLKALL enclosure of pfu            0            0
( 1467)  E3INP1 : Minimum NIMP enclosure of POLY1            0            0
( 1468)  S1DFP1 : Minimum DIFF spacing to pfuse =            0            0
( 1469)  S2SBP1 : Minimum SBLK spacing to pfuse =            0            0
( 1470)  S2P1 : Minimum POLY1 spacing to pfuse =             0            0
( 1471)  S1M1P1 : Minimum MET1 spacing to pfuse =            0            0
( 1472)  S1M2P1 : Minimum MET2 spacing to pfuse =            0            0
( 1473)  S1M3P1 : Minimum MET3 spacing to pfuse =            0            0
( 1474)  S1M4P1 : Minimum MET4 spacing to pfuse =            0            0
( 1475)  S1MTP1 : Minimum METTP spacing to pfuse             0            0
( 1476)  S1MLP1 : Minimum METTPL spacing to pfuse            0            0
( 1477)  W2NW : Minimum width = 2.0                          0            0
( 1478)  M_DF : Predefined area must have DIFF               0            0
( 1479)  W3NW : Minimum width = 2.0                          0            0
( 1480)  E2HBNW : Minimum SUBBLK enclosure of NWE            0            0
( 1481)  E2HBNW : Minimum SUBBLK enclosure of NWE            0            0
( 1482)  B2NW : DTI ring is required for rxw2ti              0            0
( 1483)  B3NW : NIMP overlap of rxw2ti (resistor             0            0
( 1484)  B4NW : rxw2ti terminal without NIMP is n            0            0
( 1485)  B5NW : MET1 or MET2 overlap of rxw2ti (r            0            0
( 1486)  B6MV : rxw2ti without MV is not allowed             0            0
( 1487)  B7NW : rxw2ti without MET1BLK and MET2BL            0            0
( 1488)  E1DFNW : Fixed DIFF extension beyond NW_            0            0
( 1489)  M_DN : Predefined area must have NDIFF              0            0
( 1490)  M_SB : Predefined area must have SBLK               0            0
( 1491)  N_SB : Predefined area must not have SBL            0            0
( 1492)  N_NW : Predefined area must not have NWE            0            0
( 1493)  E1MVP4 : Minimum MV enclosure of PWELL4             0            0
( 1494)  E1MVPZ : Minimum MV enclosure of PZENER             0            0
( 1495)  E1HBDN : Minimum SUBBLK enclosure of NDI            0            0
( 1496)  M_HB : Predefined area must have SUBBLK             0            0
( 1497)  M_DT : Predefined area must have DTI                0            0
( 1498)  M_DT : Predefined area must have DTI                0            0
( 1499)  M_SB : Predefined area must have SBLK               0            0
( 1500)  N_SB : Predefined area must not have SBL            0            0
( 1501)  M_NZ : Predefined area must have NZENER             0            0
( 1502)  N_DP : Predefined area must not have PDI            0            0
( 1503)  N_DN : Predefined area must not have NDI            0            0
( 1504)  M_NW : Predefined area must have NWELL              0            0
( 1505)  M_MV : Predefined area must have MV                 0            0
( 1506)  M_HB : Predefined area must have SUBBLK             0            0
( 1507)  N_P4 : Predefined area must not have PWE            0            0
( 1508)  M_DT : Predefined area must have DTI                0            0
( 1509)  M_DP : Predefined area must have PDIFF              0            0
( 1510)  M_DF : Predefined area must have DIFF               0            0
( 1511)  S2IN : Minimum NIMP spacing/notch = 0.42            0            0
( 1512)  W2IP : Minimum PIMP width = 0.42                    0            0
( 1513)  S3IN : Minimum NIMP spacing/notch = 0.42            0            0
( 1514)  W3IP : Minimum PIMP width = 0.42                    0            0
( 1515)  W5GA : Minimum CHANNEL length = 0.5                 0            0
( 1516)  W6GA : Minimum GATE width = 3.0                     0            0
( 1517)  W17GA : Minimum CHANNEL length = 0.4                0            0
( 1518)  W7GA : Minimum CHANNEL length = 0.5                 0            0
( 1519)  W8GA : Minimum GATE width = 3.0                     0            0
( 1520)  W15GA : Maximum CHANNEL length = 1.5                0            0
( 1521)  W16GA : Maximum CHANNEL length = 25.0               0            0
( 1522)  W20GA : Minimum CHANNEL length = 0.4                0            0
( 1523)  W21GA : Maximum CHANNEL length = 5.0                0            0
( 1524)  S5GADT : Fixed GATE spacing to DTI = 0.5            0            0
( 1525)  E2DNP1 : Minimum NDIFF extension beyond             0            0
( 1526)  B10MV : nhvta without MV is not allowed             0            0
( 1527)  B11HB : nhvta without SUBBLK is not allo            0            0
( 1528)  S9DF : Fixed DRAIN-EDGE-STI length = 1.2            0            0
( 1529)  S2P1DN : Minimum POLY1 spacing to DRAIN             0            0
( 1530)  E12P1GA : Fixed POLY1 extension beyond G            0            0
( 1531)  E1P1DN : Minimum POLY1 extension beyond             0            0
( 1532)  E1NXDN : Minimum NDF enclosure of DRAIN             0            0
( 1533)  E1NXDN : Minimum NDF enclosure of DRAIN             0            0
( 1534)  E1M1DN : Fixed MET1 enclosure of DRAIN N            0            0
( 1535)  E1M1DN : Fixed MET1 enclosure of DRAIN N            0            0
( 1536)  E2M1DN : Fixed MET1 enclosure of DRAIN N            0            0
( 1537)  E2M1DN : Fixed MET1 enclosure of DRAIN N            0            0
( 1538)  S7M1 : Minimum MET1 of DRAIN NDIFF spaci            0            0
( 1539)  E1PBP1 : Fixed PWBLK enclosure of POLY1             0            0
( 1540)  O1NXGA : Fixed NDF overlap of GATE = 0.5            0            0
( 1541)  M_NX : Predefined area must have NDF                0            0
( 1542)  N_P4 : Predefined area must not have PWE            0            0
( 1543)  M_DF : Predefined area must have DIFF               0            0
( 1544)  M_P4 : Predefined area must have PWELL4             0            0
( 1545)  N_NX : Predefined area must not have NDF            0            0
( 1546)  B11MV : nhvtb without MV is not allowed             0            0
( 1547)  B3HB : nhvtb without SUBBLK is not allow            0            0
( 1548)  S10DF : Fixed DRAIN-EDGE-STI length = 2.            0            0
( 1549)  S3P1DN : Minimum POLY1 spacing to DRAIN             0            0
( 1550)  E12P1GA : Fixed POLY1 extension beyond G            0            0
( 1551)  E2P1DN : Minimum POLY1 extension beyond             0            0
( 1552)  E2NXDN : Minimum NDF enclosure of DRAIN             0            0
( 1553)  E2NXDN : Minimum NDF enclosure of DRAIN             0            0
( 1554)  E1M1DN : Fixed MET1 enclosure of DRAIN N            0            0
( 1555)  E1M1DN : Fixed MET1 enclosure of DRAIN N            0            0
( 1556)  E2M1DN : Fixed MET1 enclosure of DRAIN N            0            0
( 1557)  E2M1DN : Fixed MET1 enclosure of DRAIN N            0            0
( 1558)  E2PBP1 : Fixed PWBLK enclosure of POLY1             0            0
( 1559)  O1NXP4 : Fixed NDF overlap of PWELL4 = 0            0            0
( 1560)  O2NXGA : Fixed NDF overlap of GATE = 0.6            0            0
( 1561)  M_NX : Predefined area must have NDF                0            0
( 1562)  N_P4 : Predefined area must not have PWE            0            0
( 1563)  M_DF : Predefined area must have DIFF               0            0
( 1564)  M_P4 : Predefined area must have PWELL4             0            0
( 1565)  B12MV : nhvu without MV is not allowed              0            0
( 1566)  B4HB : nhvu without SUBBLK is not allowe            0            0
( 1567)  S11DF : Fixed DRAIN-EDGE-STI length = 4.            0            0
( 1568)  S4P1DN : Minimum POLY1 spacing to DRAIN             0            0
( 1569)  E12P1GA : Fixed POLY1 extension beyond G            0            0
( 1570)  E3P1DN : Minimum POLY1 extension beyond             0            0
( 1571)  E2NXDN : Minimum NDF enclosure of DRAIN             0            0
( 1572)  E2NXDN : Minimum NDF enclosure of DRAIN             0            0
( 1573)  E1M1DN : Fixed MET1 enclosure of DRAIN N            0            0
( 1574)  E1M1DN : Fixed MET1 enclosure of DRAIN N            0            0
( 1575)  E2M1DN : Fixed MET1 enclosure of DRAIN N            0            0
( 1576)  E2M1DN : Fixed MET1 enclosure of DRAIN N            0            0
( 1577)  E2PBP1 : Fixed PWBLK enclosure of POLY1             0            0
( 1578)  O1NXP4 : Fixed NDF overlap of PWELL4 = 0            0            0
( 1579)  O2NXGA : Fixed NDF overlap of GATE = 0.6            0            0
( 1580)  M_NX : Predefined area must have NDF                0            0
( 1581)  N_P4 : Predefined area must not have PWE            0            0
( 1582)  M_DF : Predefined area must have DIFF               0            0
( 1583)  M_P4 : Predefined area must have PWELL4             0            0
( 1584)  E2DNP1 : Minimum NDIFF extension beyond             0            0
( 1585)  B18MV : ndhvt without MV is not allowed             0            0
( 1586)  B10HB : ndvht without SUBBLK is not allo            0            0
( 1587)  B19MV : ndhvta without MV is not allowed            0            0
( 1588)  B12HB : ndvhta without SUBBLK is not all            0            0
( 1589)  S17DF : Fixed DRAIN-EDGE-STI length = 2.            0            0
( 1590)  S7DF : Fixed DRAIN-EDGE-STI length = 1.2            0            0
( 1591)  S10P1DN : Minimum POLY1 spacing to DRAIN            0            0
( 1592)  S7P1DN : Minimum POLY1 spacing to DRAIN             0            0
( 1593)  E12P1GA : Fixed POLY1 extension beyond G            0            0
( 1594)  E12P1GA : Fixed POLY1 extension beyond G            0            0
( 1595)  E2P1DN : Minimum POLY1 extension beyond             0            0
( 1596)  E6P1DN : Minimum POLY1 extension beyond             0            0
( 1597)  E2NXDN : Minimum NDF enclosure of DRAIN             0            0
( 1598)  E2NXDN : Minimum NDF enclosure of DRAIN             0            0
( 1599)  E1NXDN : Minimum NDF enclosure of DRAIN             0            0
( 1600)  E1NXDN : Minimum NDF enclosure of DRAIN             0            0
( 1601)  E1M1DN : Fixed MET1 enclosure of DRAIN N            0            0
( 1602)  E1M1DN : Fixed MET1 enclosure of DRAIN N            0            0
( 1603)  E2M1DN : Fixed MET1 enclosure of DRAIN N            0            0
( 1604)  E2M1DN : Fixed MET1 enclosure of DRAIN N            0            0
( 1605)  E1M1DN : Fixed MET1 enclosure of DRAIN N            0            0
( 1606)  E1M1DN : Fixed MET1 enclosure of DRAIN N            0            0
( 1607)  E2M1DN : Fixed MET1 enclosure of DRAIN N            0            0
( 1608)  E2M1DN : Fixed MET1 enclosure of DRAIN N            0            0
( 1609)  S7M1 : Minimum MET1 of DRAIN NDIFF spaci            0            0
( 1610)  E2PBP1 : Fixed PWBLK enclosure of POLY1             0            0
( 1611)  E1PBP1 : Fixed PWBLK enclosure of POLY1             0            0
( 1612)  O1NXP4 : Fixed NDF overlap of PWELL4 = 0            0            0
( 1613)  O2NXGA : Fixed NDF overlap of GATE = 0.6            0            0
( 1614)  O1NXGA : Fixed NDF overlap of GATE = 0.5            0            0
( 1615)  M_NX : Predefined area must have NDF                0            0
( 1616)  N_P4 : Predefined area must not have PWE            0            0
( 1617)  M_DF : Predefined area must have DIFF               0            0
( 1618)  M_P4 : Predefined area must have PWELL4             0            0
( 1619)  M_DL : Predefined area must have DEPL               0            0
( 1620)  M_NX : Predefined area must have NDF                0            0
( 1621)  N_P4 : Predefined area must not have PWE            0            0
( 1622)  M_DF : Predefined area must have DIFF               0            0
( 1623)  M_P4 : Predefined area must have PWELL4             0            0
( 1624)  N_NX : Predefined area must not have NDF            0            0
( 1625)  M_DL : Predefined area must have DEPL               0            0
( 1626)  B13MV : dfwdnt without MV is not allowed            0            0
( 1627)  B5HB : dfwdnt without SUBBLK is not allo            0            0
( 1628)  S12DF : Fixed CATHODE-EDGE-STI length =             0            0
( 1629)  S5P1DN : Minimum POLY1 spacing to Cathod            0            0
( 1630)  E1P1DF : Fixed POLY1 extension beyond AC            0            0
( 1631)  E4P1DN : Minimum POLY1 extension beyond             0            0
( 1632)  E4NXDN : Minimum NDF enclosure of Cathod            0            0
( 1633)  E4NXDN : Minimum NDF enclosure of Cathod            0            0
( 1634)  O1P1DP : Minimum POLY1 overlap PDIFF = 0            0            0
( 1635)  E1INNX : Fixed NIMP enclosure of NDF = 0            0            0
( 1636)  E3M1DN : Fixed MET1 enclosure of Cathode            0            0
( 1637)  E3M1DN : Fixed MET1 enclosure of Cathode            0            0
( 1638)  E4M1DN : Fixed MET1 enclosure of Cathode            0            0
( 1639)  E4M1DN : Fixed MET1 enclosure of Cathode            0            0
( 1640)  E3PBP1 : Fixed PWBLK enclosure of POLY1             0            0
( 1641)  O2NXP4 : Fixed NDF overlap of PWELL4 = 0            0            0
( 1642)  O3NXGA : Fixed NDF overlap of GATE Anode            0            0
( 1643)  S2DFDT : Fixed DIFF spacing to DTI = 0.5            0            0
( 1644)  M_NX : Predefined area must have NDF                0            0
( 1645)  N_P4 : Predefined area must not have PWE            0            0
( 1646)  M_P4 : Predefined area must have PWELL4             0            0
( 1647)  B14MV : dfwdnu without MV is not allowed            0            0
( 1648)  B6HB : dfwdnu without SUBBLK is not allo            0            0
( 1649)  S13DF : Fixed CATHODE-EDGE-STI length =             0            0
( 1650)  S6P1DN : Minimum POLY1 spacing to Cathod            0            0
( 1651)  E1P1DF : Fixed POLY1 extension beyond AC            0            0
( 1652)  E5P1DN : Minimum POLY1 extension beyond             0            0
( 1653)  E4NXDN : Minimum NDF enclosure of Cathod            0            0
( 1654)  E4NXDN : Minimum NDF enclosure of Cathod            0            0
( 1655)  O1P1DP : Minimum POLY1 overlap PDIFF = 0            0            0
( 1656)  E1INNX : Fixed NIMP enclosure of NDF = 0            0            0
( 1657)  E3M1DN : Fixed MET1 enclosure of Cathode            0            0
( 1658)  E3M1DN : Fixed MET1 enclosure of Cathode            0            0
( 1659)  E4M1DN : Fixed MET1 enclosure of Cathode            0            0
( 1660)  E4M1DN : Fixed MET1 enclosure of Cathode            0            0
( 1661)  E3PBP1 : Fixed PWBLK enclosure of POLY1             0            0
( 1662)  O2NXP4 : Fixed NDF overlap of PWELL4 = 0            0            0
( 1663)  O3NXGA : Fixed NDF overlap of GATE Anode            0            0
( 1664)  S2DFDT : Fixed DIFF spacing to DTI = 0.5            0            0
( 1665)  M_NX : Predefined area must have NDF                0            0
( 1666)  N_P4 : Predefined area must not have PWE            0            0
( 1667)  M_P4 : Predefined area must have PWELL4             0            0
( 1668)  E2P4DP : Minimum PWELL4 enclosure of PDI            0            0
( 1669)  N_PB : Predefined area must not have PWB            0            0
( 1670)  M_PB : Predefined area must have PWBLK              0            0
( 1671)  N_PB : Predefined area must not have PWB            0            0
( 1672)  M_PB : Predefined area must have PWBLK              0            0
( 1673)  N_PB : Predefined area must not have PWB            0            0
( 1674)  M_PB : Predefined area must have PWBLK              0            0
( 1675)  N_PB : Predefined area must not have PWB            0            0
( 1676)  M_PB : Predefined area must have PWBLK              0            0
( 1677)  N_PB : Predefined area must not have PWB            0            0
( 1678)  M_PB : Predefined area must have PWBLK              0            0
( 1679)  N_PB : Predefined area must not have PWB            0            0
( 1680)  M_PB : Predefined area must have PWBLK              0            0
( 1681)  S2IP : Minimum PIMP spacing = 0.42                  0            0
( 1682)  W2IN : Minimum NIMP width = 0.42                    0            0
( 1683)  W13GA : Minimum CHANNEL length = 0.5                0            0
( 1684)  W14GA : Minimum GATE width = 3.0                    0            0
( 1685)  W15GA : Maximum CHANNEL length = 1.5                0            0
( 1686)  W16GA : Maximum CHANNEL length = 25.0               0            0
( 1687)  S5GADT : Fixed GATE spacing to DTI = 0.5            0            0
( 1688)  B15MV : phvta without MV is not allowed             0            0
( 1689)  B7HB : phvta without SUBBLK is not allow            0            0
( 1690)  S14DF : Fixed DRAIN-EDGE-STI length = 1.            0            0
( 1691)  S1P1DP : Minimum POLY1 spacing to DRAIN             0            0
( 1692)  E12P1GA : Fixed POLY1 extension beyond G            0            0
( 1693)  E1P1DP : Minimum POLY1 extension beyond             0            0
( 1694)  E1PXDP : Minimum PDF enclosure of DRAIN             0            0
( 1695)  E1PXDP : Minimum PDF enclosure of DRAIN             0            0
( 1696)  E1M1DP : Fixed MET1 enclosure of DRAIN P            0            0
( 1697)  E1M1DP : Fixed MET1 enclosure of DRAIN P            0            0
( 1698)  E2M1DP : Fixed MET1 enclosure of DRAIN P            0            0
( 1699)  E2M1DP : Fixed MET1 enclosure of DRAIN P            0            0
( 1700)  O1PXGA : Fixed PDF overlap of GATE = 0.7            0            0
( 1701)  O1PXNW : Fixed PDF overlap of NWELL = 0.            0            0
( 1702)  M_PX : Predefined area must have PDF                0            0
( 1703)  N_NW : Predefined area must not have NWE            0            0
( 1704)  M_DF : Predefined area must have DIFF               0            0
( 1705)  M_NW : Predefined area must have NWELL              0            0
( 1706)  B16MV : phvtb without MV is not allowed             0            0
( 1707)  B8HB : phvtb without SUBBLK is not allow            0            0
( 1708)  S15DF : Fixed DRAIN-EDGE-STI length = 2.            0            0
( 1709)  S2P1DP : Minimum POLY1 spacing to DRAIN             0            0
( 1710)  E12P1GA : Fixed POLY1 extension beyond G            0            0
( 1711)  E2P1DP : Minimum POLY1 extension beyond             0            0
( 1712)  E2PXDP : Minimum PDF enclosure of DRAIN             0            0
( 1713)  E2PXDP : Minimum PDF enclosure of DRAIN             0            0
( 1714)  E1M1DP : Fixed MET1 enclosure of DRAIN P            0            0
( 1715)  E1M1DP : Fixed MET1 enclosure of DRAIN P            0            0
( 1716)  E2M1DP : Fixed MET1 enclosure of DRAIN P            0            0
( 1717)  E2M1DP : Fixed MET1 enclosure of DRAIN P            0            0
( 1718)  O1PXGA : Fixed PDF overlap of GATE = 0.7            0            0
( 1719)  O1PXNW : Fixed PDF overlap of NWELL = 0.            0            0
( 1720)  M_PX : Predefined area must have PDF                0            0
( 1721)  N_NW : Predefined area must not have NWE            0            0
( 1722)  M_DF : Predefined area must have DIFF               0            0
( 1723)  M_NW : Predefined area must have NWELL              0            0
( 1724)  B17MV : phvu without MV is not allowed              0            0
( 1725)  B9HB : phvu without SUBBLK is not allowe            0            0
( 1726)  S16DF : Fixed DRAIN-EDGE-STI length = 3.            0            0
( 1727)  S4P1DP : Minimum POLY1 spacing to DRAIN             0            0
( 1728)  E12P1GA : Fixed POLY1 extension beyond G            0            0
( 1729)  E3P1DP : Minimum POLY1 extension beyond             0            0
( 1730)  E2PXDP : Minimum PDF enclosure of DRAIN             0            0
( 1731)  E2PXDP : Minimum PDF enclosure of DRAIN             0            0
( 1732)  E1M1DP : Fixed MET1 enclosure of DRAIN P            0            0
( 1733)  E1M1DP : Fixed MET1 enclosure of DRAIN P            0            0
( 1734)  E2M1DP : Fixed MET1 enclosure of DRAIN P            0            0
( 1735)  E2M1DP : Fixed MET1 enclosure of DRAIN P            0            0
( 1736)  O1PXGA : Fixed PDF overlap of GATE = 0.7            0            0
( 1737)  O1PXNW : Fixed PDF overlap of NWELL = 0.            0            0
( 1738)  M_PX : Predefined area must have PDF                0            0
( 1739)  N_NW : Predefined area must not have NWE            0            0
( 1740)  M_DF : Predefined area must have DIFF               0            0
( 1741)  M_NW : Predefined area must have NWELL              0            0
( 1742)  M_PB : Predefined area must have PWBLK              0            0
( 1743)  err_O1NWQP : Fixed NWELL overlap of PBAS            0            0
( 1744)  N_DF : Predefined area must not have DIF            0            0
( 1745)  M_NW : Predefined area must have NWELL              0            0
( 1746)  M_SB : Predefined area must have SBLK               0            0
( 1747)  N_SB : Predefined area must not have SBL            0            0
( 1748)  N_HN : Predefined area must not have HVN            0            0
( 1749)  M_MV : Predefined area must have MV                 0            0
( 1750)  M_HB : Predefined area must have SUBBLK             0            0
( 1751)  M_DT : Predefined area must have DTI                0            0
( 1752)  M_DN : Predefined area must have NDIFF              0            0
( 1753)  M_DF : Predefined area must have DIFF               0            0
( 1754)  M_SB : Predefined area must have SBLK               0            0
( 1755)  N_SB : Predefined area must not have SBL            0            0
( 1756)  M_PB : Predefined area must have PWBLK              0            0
( 1757)  N_PB : Predefined area must not have PWB            0            0
( 1758)  M_MV : Predefined area must have MV                 0            0
( 1759)  M_HB : Predefined area must have SUBBLK             0            0
( 1760)  S1HBNW : Minimum SUBBLK spacing to NWELL            0            0
( 1761)  S1HBPB : Minimum SUBBLK spacing to PWBLK            0            0
( 1762)  S1HBDN : Minimum SUBBLK spacing to NDIFF            0            0
( 1763)  B1HB : SUBBLK overlap of HVNWELL is not             0            0
( 1764)  B2HB : SUBBLK overlap of PWBLK, NWELL, N            0            0
( 1765)  M_HB : Predefined area must have SUBBLK             0            0
( 1766)  B3NX : NDF overlap DEPL is not allowed              0            0
( 1767)  B3P4 : PWELL4 overlap DEPL is not allowe            0            0
( 1768)  B3M1 : MET1 overlap of ISOTUB is not all            0            0
( 1769)  B10P1 : POLY1 overlap of ISOTUB is not a            0            0
( 1770)  B11P1 : POLY1DTI must be rectangular                0            0
( 1771)  W5P1 : Minimum POLY1DTI width = 1.0                 0            0
( 1772)  S2P1DT : Minimum POLY1 spacing to DTI =             0            0
( 1773)  E2P1CT : Minimum POLY1DTI enclosure of C            0            0
( 1774)  M_DN : Predefined area must have NDIFF              0            0
( 1775)  N_DF : Predefined area must not have DIF            0            0
( 1776)  M_DT : Predefined area must have DTI                0            0
( 1777)  M_DF : Predefined area must have DIFF               0            0
( 1778)  M_NC : Predefined area must have DNC                0            0
( 1779)  M_HN : Predefined area must have HVNWELL            0            0
( 1780)  N_HN : Predefined area must not have HVN            0            0
( 1781)  N_NB : Predefined area must not have NBU            0            0
( 1782)  N_SB : Predefined area must not have SBL            0            0
( 1783)  M_MV : Predefined area must have MV                 0            0
( 1784)  M_DN : Predefined area must have NDIFF              0            0
( 1785)  N_DN : Predefined area must not have NDI            0            0
( 1786)  N_DP : Predefined area must not have PDI            0            0
( 1787)  M_SB : Predefined area must have SBLK               0            0
( 1788)  N_SB : Predefined area must not have SBL            0            0
( 1789)  M_DT : Predefined area must have DTI                0            0
( 1790)  M_DF : Predefined area must have DIFF               0            0
( 1791)  M_NC : Predefined area must have DNC                0            0
( 1792)  M_HN : Predefined area must have HVNWELL            0            0
( 1793)  N_NB : Predefined area must not have NBU            0            0
( 1794)  M_MV : Predefined area must have MV                 0            0
( 1795)  M_DN : Predefined area must have NDIFF              0            0
( 1796)  M_DF : Predefined area must have DIFF               0            0
( 1797)  N_DF : Predefined area must not have DIF            0            0
( 1798)  M_DT : Predefined area must have DTI                0            0
( 1799)  M_NC : Predefined area must have DNC                0            0
( 1800)  M_HN : Predefined area must have HVNWELL            0            0
( 1801)  N_NB : Predefined area must not have NBU            0            0
( 1802)  N_SB : Predefined area must not have SBL            0            0
( 1803)  M_MV : Predefined area must have MV                 0            0
( 1804)  M_DP : Predefined area must have PDIFF              0            0
( 1805)  M_DF : Predefined area must have DIFF               0            0
( 1806)  N_DF : Predefined area must not have DIF            0            0
( 1807)  M_DT : Predefined area must have DTI                0            0
( 1808)  M_PC : Predefined area must have DPC                0            0
( 1809)  N_NB : Predefined area must not have NBU            0            0
( 1810)  N_SB : Predefined area must not have SBL            0            0
( 1811)  M_MV : Predefined area must have MV                 0            0
( 1812)  B2DF : ds5 is not allowed                           0            0
( 1813)  M_DT : Predefined area must have DTI                0            0
( 1814)  M_HN : Predefined area must have HVNWELL            0            0
( 1815)  M_MV : Predefined area must have MV                 0            0
( 1816)  N_NB : Predefined area must not have NBU            0            0
( 1817)  N_DF : Predefined area must not have DIF            0            0
( 1818)  M_DN : Predefined area must have NDIFF              0            0
( 1819)  N_M1 : Predefined area must not have MET            0            0
( 1820)  N_M2 : Predefined area must not have MET            0            0
( 1821)  N_M3 : Predefined area must not have MET            0            0
( 1822)  B1YD : DIFFDUMMY overlap of DIFF is not             0            0
( 1823)  B2YD : DIFFDUMMY overlap of NIMP or PIMP            0            0
( 1824)  B3YD : DIFFDUMMY overlap of CONT is not             0            0
( 1825)  B4YD : DIFFDUMMY overlap of PAD is not a            0            0
( 1826)  B5YD : DIFFDUMMY overlap of SBLK is not             0            0
( 1827)  B7YD : DIFFDUMMY overlap of DTI is not a            0            0
( 1828)  B8YD : DIFFDUMMY overlap of SJPN is not             0            0
( 1829)  B9YD : DIFFDUMMY overlap of SJNP is not             0            0
( 1830)  B10YD : DIFFDUMMY overlap of NBUF is not            0            0
( 1831)  B11YD : DIFFDUMMY overlap of PZENER is n            0            0
( 1832)  B12YD : DIFFDUMMY overlap of NZENER is n            0            0
( 1833)  S1YD : Minimum DIFFDUMMY spacing/notch =            0            0
( 1834)  W1YD : Minimum DIFFDUMMY width = 0.4                0            0
( 1835)  S1YDDT : Minimum DIFFDUMMY spacing to DT            0            0
( 1836)  S1YDDF : Minimum DIFFDUMMY spacing to DI            0            0
( 1837)  S1YDIN : Minimum DIFFDUMMY spacing to NI            0            0
( 1838)  S1YDIP : Minimum DIFFDUMMY spacing to PI            0            0
( 1839)  S1YDP1 : Minimum DIFFDUMMY spacing to PO            0            0
( 1840)  S1YDPA : Minimum DIFFDUMMY spacing to PA            0            0
( 1841)  S1YDSB : Minimum DIFFDUMMY spacing to SB            0            0
( 1842)  S1YDPI : Minimum DIFFDUMMY spacing to PW            0            0
( 1843)  S1YDNW : Minimum DIFFDUMMY spacing to NW            0            0
( 1844)  S1YDNT : Minimum DIFFDUMMY spacing to SJ            0            0
( 1845)  S1YDPT : Minimum DIFFDUMMY spacing to SJ            0            0
( 1846)  S1YDNF : Minimum DIFFDUMMY spacing to NB            0            0
( 1847)  S1YDNZ : Minimum DIFFDUMMY spacing to NZ            0            0
( 1848)  S1YDPZ : Minimum DIFFDUMMY spacing to PZ            0            0
( 1849)  E1YDPI : Minimum PW4DMY enclosure of DIF            0            0
( 1850)  E1YDNW : Minimum NW4DMY enclosure of DIF            0            0
( 1851)  S10YD : Minimum DIFFDUMMY spacing to LOC            0            0
( 1852)  S11YD : Minimum DIFFDUMMY spacing to LOC            0            0
( 1853)  S12YD : Minimum DIFFDUMMY spacing to LOC            0            0
( 1854)  S13YD : Minimum DIFFDUMMY spacing to LOC            0            0
( 1855)  S14YD : Minimum DIFFDUMMY spacing to LOC            0            0
( 1856)  A1YD : Minimum DIFFDUMMY area = 1.2                 0            0
( 1857)  B1YP : Only rectangular P1DUMMY is allow            0            0
( 1858)  B2YP : P1DUMMY overlap of POLY1 is not a            0            0
( 1859)  B3YP : P1DUMMY overlap of CONT is not al            0            0
( 1860)  B4YP : P1DUMMY overlap of PAD is not all            0            0
( 1861)  B5YP : P1DUMMY overlap of SBLK is not al            0            0
( 1862)  B6YP : P1DUMMY overlap of MRES or HRES i            0            0
( 1863)  B7YP : P1DUMMY overlap of DTI is not all            0            0
( 1864)  B8YP : P1DUMMY overlap of SJPN is not al            0            0
( 1865)  B9YP : P1DUMMY overlap of SJNP is not al            0            0
( 1866)  B10YP : P1DUMMY overlap of NBUF is not a            0            0
( 1867)  B11YP : P1DUMMY overlap of PZENER is not            0            0
( 1868)  B12YP : P1DUMMY overlap of NZENER is not            0            0
( 1869)  W1YP : Minimum P1DUMMY width = 1.0                  0            0
( 1870)  S1YP : Minimum P1DUMMY spacing = 1.0                0            0
( 1871)  S1YPP1 : Minimum P1DUMMY spacing to POLY            0            0
( 1872)  S1YPDF : Minimum P1DUMMY spacing to DIFF            0            0
( 1873)  S1YPDT : Minimum P1DUMMY spacing to DTI             0            0
( 1874)  S1YPYD : Minimum P1DUMMY spacing to DIFF            0            0
( 1875)  S1YPPA : Minimum P1DUMMY spacing to PAD             0            0
( 1876)  S1YPSB : Minimum P1DUMMY spacing to SBLK            0            0
( 1877)  S1YPPI : Minimum P1DUMMY spacing to PW4D            0            0
( 1878)  S1YPNW : Minimum P1DUMMY spacing to NW4D            0            0
( 1879)  S1YPNT : Minimum P1DUMMY spacing to SJNP            0            0
( 1880)  S1YPPT : Minimum P1DUMMY spacing to SJPN            0            0
( 1881)  S1YPNF : Minimum P1DUMMY spacing to NBUF            0            0
( 1882)  S1YPNZ : Minimum P1DUMMY spacing to NZEN            0            0
( 1883)  S1YPPZ : Minimum P1DUMMY spacing to PZEN            0            0
( 1884)  E1YPPI : Minimum PW4DMY enclosure of P1D            0            0
( 1885)  E1YPNW : Minimum NW4DMY enclosure of P1D            0            0
( 1886)  S10YP : Minimum P1DUMMY spacing to LOCKE            0            0
( 1887)  S11YP : Minimum P1DUMMY spacing to LOCKE            0            0
( 1888)  S12YP : Minimum P1DUMMY spacing to LOCKE            0            0
( 1889)  S13YP : Minimum P1DUMMY spacing to LOCKE            0            0
( 1890)  S14YP : Minimum P1DUMMY spacing to LOCKE            0            0
( 1891)  B1Y1 : Only rectangular M1DUMMY is allow            0            0
( 1892)  B2Y1 : M1DUMMY overlap of MET1 is not al            0            0
( 1893)  B3Y1 : M1DUMMY overlap of CONT or VIA1 i            0            0
( 1894)  B4Y1 : M1DUMMY overlap of HRES is not al            0            0
( 1895)  B5Y1 : M1DUMMY overlap of DTI is not all            0            0
( 1896)  W1Y1 : Minimum M1DUMMY width = 2.0                  0            0
( 1897)  W2Y1 : Maximum M1DUMMY edge length = 20.            0            0
( 1898)  S1Y1 : Minimum M1DUMMY spacing = 2.0                0            0
( 1899)  S1Y1M1 : Minimum M1DUMMY spacing to MET1            0            0
( 1900)  S10Y1 : Minimum M1DUMMY spacing to LOCKE            0            0
( 1901)  S11Y1 : Minimum M1DUMMY spacing to LOCKE            0            0
( 1902)  S12Y1 : Minimum M1DUMMY spacing to LOCKE            0            0
( 1903)  S13Y1 : Minimum M1DUMMY spacing to LOCKE            0            0
( 1904)  S14Y1 : Minimum M1DUMMY spacing to LOCKE            0            0
( 1905)  S1Y1HR : Minimum M1DUMMY spacing to HRES            0            0
( 1906)  S1Y1DT : Minimum M1DUMMY spacing to DTI             0            0
( 1907)  B1Y2 : Only rectangular M2DUMMY is allow            0            0
( 1908)  B2Y2 : M2DUMMY overlap of MET2 is not al            0            0
( 1909)  B3Y2V1 : M2DUMMY overlap of VIA1 is not             0            0
( 1910)  B3Y2V2 : M2DUMMY overlap of VIA2 is not             0            0
( 1911)  W1Y2 : Minimum M2DUMMY width = 2.0                  0            0
( 1912)  W2Y2 : Maximum M2DUMMY edge length = 20.            0            0
( 1913)  S1Y2 : Minimum M2DUMMY spacing = 2.0                0            0
( 1914)  S1Y2M2 : Minimum M2DUMMY spacing to MET2            0            0
( 1915)  S10Y2 : Minimum M2DUMMY spacing to LOCKE            0            0
( 1916)  S11Y2 : Minimum M2DUMMY spacing to LOCKE            0            0
( 1917)  S12Y2 : Minimum M2DUMMY spacing to LOCKE            0            0
( 1918)  S13Y2 : Minimum M2DUMMY spacing to LOCKE            0            0
( 1919)  S14Y2 : Minimum M2DUMMY spacing to LOCKE            0            0
( 1920)  B1Y3 : Only rectangular M3DUMMY is allow            0            0
( 1921)  B2Y3 : M3DUMMY overlap of MET3 is not al            0            0
( 1922)  B3Y3V2 : M3DUMMY overlap of VIA2 is not             0            0
( 1923)  B3Y3V3 : M3DUMMY overlap of VIA3 is not             0            0
( 1924)  W1Y3 : Minimum M3DUMMY width = 2.0                  0            0
( 1925)  W2Y3 : Maximum M3DUMMY edge length = 20.            0            0
( 1926)  S1Y3 : Minimum M3DUMMY spacing = 2.0                0            0
( 1927)  S1Y3M3 : Minimum M3DUMMY spacing to MET3            0            0
( 1928)  S10Y3 : Minimum M3DUMMY spacing to LOCKE            0            0
( 1929)  S11Y3 : Minimum M3DUMMY spacing to LOCKE            0            0
( 1930)  S12Y3 : Minimum M3DUMMY spacing to LOCKE            0            0
( 1931)  S13Y3 : Minimum M3DUMMY spacing to LOCKE            0            0
( 1932)  B1Y4 : Only rectangular M4DUMMY is allow            0            0
( 1933)  B2Y4 : M4DUMMY overlap of MET4 is not al            0            0
( 1934)  B3Y4V3 : M4DUMMY overlap of VIA3 is not             0            0
( 1935)  B3Y4VT : M4DUMMY overlap of VIATP is not            0            0
( 1936)  W1Y4 : Minimum M4DUMMY width = 2.0                  0            0
( 1937)  W2Y4 : Maximum M4DUMMY edge length = 20.            0            0
( 1938)  S1Y4 : Minimum M4DUMMY spacing = 2.0                0            0
( 1939)  S1Y4M4 : Minimum M4DUMMY spacing to MET4            0            0
( 1940)  S10Y4 : Minimum M4DUMMY spacing to LOCKE            0            0
( 1941)  S11Y4 : Minimum M4DUMMY spacing to LOCKE            0            0
( 1942)  S12Y4 : Minimum M4DUMMY spacing to LOCKE            0            0
( 1943)  B1YT : Only rectangular MTPDUMMY is allo            0            0
( 1944)  B2YT : MTPDUMMY overlap of METTP is not             0            0
( 1945)  B3YTVT : MTPDUMMY overlap of VIATP is no            0            0
( 1946)  B3YTVL : MTPDUMMY overlap of VIATPL is n            0            0
( 1947)  W1YT : Minimum MTPDUMMY width = 2.0                 0            0
( 1948)  W2YT : Maximum MTPDUMMY edge length = 20            0            0
( 1949)  S1YT : Minimum MTPDUMMY spacing = 2.0               0            0
( 1950)  S1YTMT : Minimum MTPDUMMY spacing to MET            0            0
( 1951)  S1YTPA : Minimum MTPDUMMY spacing to PAD            0            0
( 1952)  S10YT : Minimum MTPDUMMY spacing to LOCK            0            0
( 1953)  S11YT : Minimum MTPDUMMY spacing to LOCK            0            0
( 1954)  B1YL : Only rectangular MTPLDUMMY is all            0            0
( 1955)  B2YL : MTPLDUMMY overlap of METTPL is no            0            0
( 1956)  B3YLVL : MTPLDUMMY overlap of VIATPL is             0            0
( 1957)  W1YL : Minimum MTPLDUMMY width = 5.0                0            0
( 1958)  W2YL : Maximum MTPLDUMMY edge length = 2            0            0
( 1959)  S1YL : Minimum MTPLDUMMY spacing = 5.0              0            0
( 1960)  S1YLML : Minimum MTPLDUMMY spacing to ME            0            0
( 1961)  S10YL : Minimum MTPLDUMMY spacing to LOC            0            0
( 1962)  S3P1 : Minimum POLY1 spacing for differe            0            0
( 1963)  S4P1 : Minimum POLY1 spacing for differe            0            0
( 1964)  S5P1 : Minimum POLY1 spacing for differe            0            0
( 1965)  S5P1DF : Minimum POLY1 spacing to DIFF f            0            0
( 1966)  S7P1DF : Minimum POLY1 spacing to DIFF f            0            0
( 1967)  S8P1DF : Minimum POLY1 spacing to DIFF f            0            0
( 1968)  S4M1 : Minimum MET1 spacing for differen            0            0
( 1969)  S5M1 : Minimum MET1 spacing for differen            0            0
( 1970)  S6M1 : Minimum MET1 spacing for differen            0            0
( 1971)  S4M2 : Minimum MET2 spacing for differen            0            0
( 1972)  S5M2 : Minimum MET2 spacing for differen            0            0
( 1973)  S6M2 : Minimum MET2 spacing for differen            0            0
( 1974)  S4M3 : Minimum MET3 spacing for differen            0            0
( 1975)  S5M3 : Minimum MET3 spacing for differen            0            0
( 1976)  S6M3 : Minimum MET3 spacing for differen            0            0
( 1977)  S4M4 : Minimum MET4 spacing for differen            0            0
( 1978)  S5M4 : Minimum MET4 spacing for differen            0            0
( 1979)  S6M4 : Minimum MET4 spacing for differen            0            0
( 1980)  S4MT : Minimum METTP spacing for differe            0            0
( 1981)  S5MT : Minimum METTP spacing for differe            0            0
( 1982)  S6MT : Minimum METTP spacing for differe            0            0
( 1983)  Q1M1 : Resistor terminal net without VLA            0            0
( 1984)  Q1M1 : Resistor terminal net without VLA            0            0
( 1985)  Q1M1 : Resistor terminal net without VLA            0            0
( 1986)  Q1P1 : Resistor terminal net without VLA            0            0
( 1987)  Q1M1 : Resistor terminal net without VLA            0            0
( 1988)  Q1M2 : Resistor terminal net without VLA            0            0
( 1989)  Q1M3 : Resistor terminal net without VLA            0            0
( 1990)  Q1M4 : Resistor terminal net without VLA            0            0
( 1991)  Q1MT : Resistor terminal net without VLA            0            0
( 1992)  Q1ML : Resistor terminal net without VLA            0            0
( 1993)  PWBLK not multiple 45 degrees                       0            0
( 1994)  PAD not multiple 45 degrees                         0            0
( 1995)  DIFF not multiple 45 degrees                        0            0
( 1996)  PIMP not multiple 45 degrees                        0            0
( 1997)  NIMP not multiple 45 degrees                        0            0
( 1998)  SBLK not multiple 45 degrees                        0            0
( 1999)  NWELL not multiple 45 degrees                       0            0
( 2000)  MV not multiple 45 degrees                          0            0
( 2001)  CONT not multiple 45 degrees                        0            0
( 2002)  POLY1 not multiple 45 degrees                       0            0
( 2003)  MET1 not multiple 45 degrees                        0            0
( 2004)  MET2 not multiple 45 degrees                        0            0
( 2005)  M1HOLE not multiple 45 degrees                      0            0
( 2006)  M2HOLE not multiple 45 degrees                      0            0
( 2007)  MET3 not multiple 45 degrees                        0            0
( 2008)  M3HOLE not multiple 45 degrees                      0            0
( 2009)  VIA2 not multiple 45 degrees                        0            0
( 2010)  MET4 not multiple 45 degrees                        0            0
( 2011)  M4HOLE not multiple 45 degrees                      0            0
( 2012)  VIA3 not multiple 45 degrees                        0            0
( 2013)  METTPL not multiple 45 degrees                      0            0
( 2014)  VIATPL not multiple 45 degrees                      0            0
( 2015)  METTP not multiple 45 degrees                       0            0
( 2016)  MTHOLE not multiple 45 degrees                      0            0
( 2017)  VIATP not multiple 45 degrees                       0            0
( 2018)  VIA1 not multiple 45 degrees                        0            0
( 2019)  CM not multiple 45 degrees                          0            0
( 2020)  CM2 not multiple 45 degrees                         0            0
( 2021)  CM3 not multiple 45 degrees                         0            0
( 2022)  HVPWELL not multiple 45 degrees                     0            0
( 2023)  SUBBLK not multiple 45 degrees                      0            0
( 2024)  HVNWELL not multiple 45 degrees                     0            0
( 2025)  DEPL not multiple 45 degrees                        0            0
( 2026)  SCI not multiple 45 degrees                         0            0
( 2027)  HRES not multiple 45 degrees                        0            0
( 2028)  MRES not multiple 45 degrees                        0            0
( 2029)  NOPIM not multiple 45 degrees                       0            0
( 2030)  DNC not multiple 45 degrees                         0            0
( 2031)  DPC not multiple 45 degrees                         0            0
( 2032)  DTI not multiple 45 degrees                         0            0
( 2033)  HWC not multiple 45 degrees                         0            0
( 2034)  SJNP not multiple 45 degrees                        0            0
( 2035)  SJPN not multiple 45 degrees                        0            0
( 2036)  CAPMH not multiple 45 degrees                       0            0
( 2037)  NBUR not multiple 45 degrees                        0            0
( 2038)  CAPMH2 not multiple 45 degrees                      0            0
( 2039)  CAPMH3 not multiple 45 degrees                      0            0
( 2040)  NBUF not multiple 45 degrees                        0            0
( 2041)  PWS not multiple 45 degrees                         0            0
( 2042)  CAPM23F not multiple 45 degrees                     0            0
( 2043)  CAPMH23F not multiple 45 degrees                    0            0
( 2044)  CAPM34F not multiple 45 degrees                     0            0
( 2045)  CAPMH34F not multiple 45 degrees                    0            0
( 2046)  CAPM45F not multiple 45 degrees                     0            0
( 2047)  CAPMH45F not multiple 45 degrees                    0            0
( 2048)  CAPM2A not multiple 45 degrees                      0            0
( 2049)  CAPMH2A not multiple 45 degrees                     0            0
( 2050)  PWELL4 not multiple 45 degrees                      0            0
( 2051)  NBASE not multiple 45 degrees                       0            0
( 2052)  PBASE not multiple 45 degrees                       0            0
( 2053)  NDF not multiple 45 degrees                         0            0
( 2054)  PDF not multiple 45 degrees                         0            0
( 2055)  PZENER not multiple 45 degrees                      0            0
( 2056)  NZENER not multiple 45 degrees                      0            0
( 2057)  POLY1 pin without POLY1 drawing                     0            0
( 2058)  MET1 pin without MET1 drawing                       0            0
( 2059)  MET2 pin without MET2 drawing                       0            0
( 2060)  MET3 pin without MET3 drawing                       0            0
( 2061)  MET4 pin without MET4 drawing                       0            0
( 2062)  METTP pin without METTP drawing                     0            0
( 2063)  METTPL pin without METTPL drawing                   0            0
( 2064)    BDLOCK : Any structure over LOCKED (AL            0            0
( 2065)    BDLOCK : Any structure over LOCKED (AL            0            0
( 2066)    BDLOCK : Any structure over LOCKED (AL            0            0
( 2067)    BDLOCK : Any structure over LOCKED (AL            0            0
( 2068)    BDLOCK : Any structure over LOCKED (AL            0            0
( 2069)    B1LOCK : Any structure over LOCKED (LO            0            0
( 2070)    B1LOCK : Any structure over LOCKED (LO            0            0
( 2071)    B1LOCK : Any structure over LOCKED (LO            0            0
( 2072)    B1LOCK : Any structure over LOCKED (LO            0            0
( 2073)    B2LOCK : Any structure over LOCKED (LO            0            0
( 2074)    B2LOCK : Any structure over LOCKED (LO            0            0
( 2075)    B2LOCK : Any structure over LOCKED (LO            0            0
( 2076)    B3LOCK : Any structure over LOCKED (LO            0            0
( 2077)    B3LOCK : Any structure over LOCKED (LO            0            0
( 2078)    B4LOCK : Any structure over LOCKED (LO            0            0
( 2079)  BDXF : Not allowed to be used by custome            0            0
( 2080)  BDDF : Not allowed to be used by custome            0            0
( 2081)  BDP1 : Not allowed to be used by custome            0            0
( 2082)  ant_pfox_gate: R2P1 : Maximum ratio of P            0            0
( 2083)  ant_pfox_poly: R2P1 : Maximum ratio of P            0            0
( 2084)  ant_contR_gate: R1CT : Maximum ratio of             0            0
( 2085)  ant_contR_cont: R1CT : Maximum ratio of             0            0
( 2086)  ant_met1_gate: R2M1P1 : Maximum ratio of            0            0
( 2087)  ant_met1_met1: R2M1P1 : Maximum ratio of            0            0
( 2088)  ant_via1R_gate: R1V1 : Maximum ratio of             0            0
( 2089)  ant_via1R_via1: R1V1 : Maximum ratio of             0            0
( 2090)  ant_met2_gate: R2M2P1 : Maximum ratio of            0            0
( 2091)  ant_met2_met2: R2M2P1 : Maximum ratio of            0            0
( 2092)  ant_via2R_gate: R1V2 : Maximum ratio of             0            0
( 2093)  ant_via2R_via2CON: R1V2 : Maximum ratio             0            0
( 2094)  ant_met3_gate: R2M3P1 : Maximum ratio of            2            2
( 2095)  ant_met3_met3: R2M3P1 : Maximum ratio of            2            2
( 2096)  ant_via3R_gate: R1V3 : Maximum ratio of             0            0
( 2097)  ant_via3R_via3CON: R1V3 : Maximum ratio             0            0
( 2098)  ant_met4_gate: R2M4P1 : Maximum ratio of            4            4
( 2099)  ant_met4_met4: R2M4P1 : Maximum ratio of            3            3
( 2100)  ant_vtpR_gate: R1VT : Maximum ratio of V            0            0
( 2101)  ant_vtpR_vtpCON: R1VT : Maximum ratio of            0            0
( 2102)  ant_mtp_gate: R2MTP1 : Maximum ratio of             0            0
( 2103)  ant_mtp_mtp: R2MTP1 : Maximum ratio of M            0            0
( 2104)  ant_vtplR_gate: R1VL : Maximum ratio of             0            0
( 2105)  ant_vtplR_vtpl: R1VL : Maximum ratio of             0            0
( 2106)  ant_mtpl_gate: R2MLP1 : Maximum ratio of            0            0
( 2107)  ant_mtpl_mtpl: R2MLP1 : Maximum ratio of            0            0
--------------------------------------------------------------------------------
Total  errors:                                              11           11
--------------------------------------------------------------------------------

   Finished creating Error Database ...

   Writing Report into /home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/AssuraDRC/filter_top_DRC.err ...
   Rule 2094 done.
   Rule 2095 done.
   Rule 2098 done.
   Rule 2099 done.

avrpt cpu sec:    0.42  elapsed:     0  virtual:    93M

Finished /home/Software/EDA/Cadence/ASSURA/ASSURA_04.15.111//tools.lnx86/assura/bin/avrpt

Starting /home/Software/EDA/Cadence/ASSURA/ASSURA_04.15.111//tools.lnx86/assura/bin/avcallproc /home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/AssuraDRC/filter_top_DRC.rsf -restart -cdslib /home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/cds.lib

Loading tech rule set file : /home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/.assuraSetup/Assura/techRuleSets

Loading tech rule set file : /home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/.assuraSetup/Assura/techRuleSets

Loading tech rule set file : /home/student6/Kolbenkov_PP/Digital_ASIC/Virtuoso/.assuraSetup/Assura/techRuleSets
Loading assuraDRC_Rules Version "assuraDRC-190117" at "Mar  5 16:23:59 2022"

Finished /home/Software/EDA/Cadence/ASSURA/ASSURA_04.15.111//tools.lnx86/assura/bin/avcallproc


Run ended: Sat Mar  5 16:24:00 2022

*****  Assura terminated normally  *****

